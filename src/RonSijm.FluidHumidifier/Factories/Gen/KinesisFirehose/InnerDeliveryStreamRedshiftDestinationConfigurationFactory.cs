// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisFirehose;

public class InnerDeliveryStreamRedshiftDestinationConfigurationFactory(Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftDestinationConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftDestinationConfiguration>
{

    internal InnerDeliveryStreamS3DestinationConfigurationFactory S3BackupConfigurationFactory { get; set; }

    internal InnerDeliveryStreamS3DestinationConfigurationFactory S3ConfigurationFactory { get; set; }

    internal InnerDeliveryStreamCopyCommandFactory CopyCommandFactory { get; set; }

    internal InnerDeliveryStreamRedshiftRetryOptionsFactory RetryOptionsFactory { get; set; }

    internal InnerDeliveryStreamSecretsManagerConfigurationFactory SecretsManagerConfigurationFactory { get; set; }

    internal InnerDeliveryStreamProcessingConfigurationFactory ProcessingConfigurationFactory { get; set; }

    internal InnerDeliveryStreamCloudWatchLoggingOptionsFactory CloudWatchLoggingOptionsFactory { get; set; }

    protected override Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftDestinationConfiguration Create()
    {
        var redshiftDestinationConfigurationResult = CreateRedshiftDestinationConfiguration();
        factoryAction?.Invoke(redshiftDestinationConfigurationResult);

        return redshiftDestinationConfigurationResult;
    }

    private Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftDestinationConfiguration CreateRedshiftDestinationConfiguration()
    {
        var redshiftDestinationConfigurationResult = new Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftDestinationConfiguration();

        return redshiftDestinationConfigurationResult;
    }
    public override void CreateChildren(Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftDestinationConfiguration result)
    {
        base.CreateChildren(result);

        result.S3BackupConfiguration ??= S3BackupConfigurationFactory?.Build();
        result.S3Configuration ??= S3ConfigurationFactory?.Build();
        result.CopyCommand ??= CopyCommandFactory?.Build();
        result.RetryOptions ??= RetryOptionsFactory?.Build();
        result.SecretsManagerConfiguration ??= SecretsManagerConfigurationFactory?.Build();
        result.ProcessingConfiguration ??= ProcessingConfigurationFactory?.Build();
        result.CloudWatchLoggingOptions ??= CloudWatchLoggingOptionsFactory?.Build();
    }

} // End Of Class

public static class InnerDeliveryStreamRedshiftDestinationConfigurationFactoryExtensions
{
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.S3BackupConfigurationFactory = new InnerDeliveryStreamS3DestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3BackupConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.S3ConfigurationFactory = new InnerDeliveryStreamS3DestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3ConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null)
    {
        parentFactory.CopyCommandFactory = new InnerDeliveryStreamCopyCommandFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CopyCommandFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null)
    {
        parentFactory.RetryOptionsFactory = new InnerDeliveryStreamRedshiftRetryOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RetryOptionsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null)
    {
        parentFactory.SecretsManagerConfigurationFactory = new InnerDeliveryStreamSecretsManagerConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SecretsManagerConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null)
    {
        parentFactory.ProcessingConfigurationFactory = new InnerDeliveryStreamProcessingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProcessingConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions(this InnerDeliveryStreamRedshiftDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null)
    {
        parentFactory.CloudWatchLoggingOptionsFactory = new InnerDeliveryStreamCloudWatchLoggingOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLoggingOptionsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3BackupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3BackupConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, WithCopyCommand(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, WithCopyCommand(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCopyCommandFactory> WithCopyCommand<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CopyCommand> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCopyCommand(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamRedshiftRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.RedshiftRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamSecretsManagerConfigurationFactory> WithSecretsManagerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.SecretsManagerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecretsManagerConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamRedshiftDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T5, subFactoryAction));
}
