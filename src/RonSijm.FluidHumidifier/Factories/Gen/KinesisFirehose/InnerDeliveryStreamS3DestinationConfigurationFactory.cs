// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisFirehose;

public class InnerDeliveryStreamS3DestinationConfigurationFactory(Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration>
{

    internal InnerDeliveryStreamBufferingHintsFactory BufferingHintsFactory { get; set; }

    internal InnerDeliveryStreamEncryptionConfigurationFactory EncryptionConfigurationFactory { get; set; }

    internal InnerDeliveryStreamCloudWatchLoggingOptionsFactory CloudWatchLoggingOptionsFactory { get; set; }

    protected override Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration Create()
    {
        var s3DestinationConfigurationResult = CreateS3DestinationConfiguration();
        factoryAction?.Invoke(s3DestinationConfigurationResult);

        return s3DestinationConfigurationResult;
    }

    private Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration CreateS3DestinationConfiguration()
    {
        var s3DestinationConfigurationResult = new Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration();

        return s3DestinationConfigurationResult;
    }
    public override void CreateChildren(Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration result)
    {
        base.CreateChildren(result);

        result.BufferingHints ??= BufferingHintsFactory?.Build();
        result.EncryptionConfiguration ??= EncryptionConfigurationFactory?.Build();
        result.CloudWatchLoggingOptions ??= CloudWatchLoggingOptionsFactory?.Build();
    }

} // End Of Class

public static class InnerDeliveryStreamS3DestinationConfigurationFactoryExtensions
{
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints(this InnerDeliveryStreamS3DestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null)
    {
        parentFactory.BufferingHintsFactory = new InnerDeliveryStreamBufferingHintsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BufferingHintsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration(this InnerDeliveryStreamS3DestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null)
    {
        parentFactory.EncryptionConfigurationFactory = new InnerDeliveryStreamEncryptionConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EncryptionConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions(this InnerDeliveryStreamS3DestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null)
    {
        parentFactory.CloudWatchLoggingOptionsFactory = new InnerDeliveryStreamCloudWatchLoggingOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLoggingOptionsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, T4, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, T4, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.BufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, T4, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, T4, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamS3DestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamS3DestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T5, subFactoryAction));
}
