// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisFirehose;

public class InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory(Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessDestinationConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessDestinationConfiguration>
{

    internal InnerDeliveryStreamS3DestinationConfigurationFactory S3ConfigurationFactory { get; set; }

    internal InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory BufferingHintsFactory { get; set; }

    internal InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory RetryOptionsFactory { get; set; }

    internal InnerDeliveryStreamVpcConfigurationFactory VpcConfigurationFactory { get; set; }

    internal InnerDeliveryStreamProcessingConfigurationFactory ProcessingConfigurationFactory { get; set; }

    internal InnerDeliveryStreamCloudWatchLoggingOptionsFactory CloudWatchLoggingOptionsFactory { get; set; }

    protected override Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessDestinationConfiguration Create()
    {
        var amazonOpenSearchServerlessDestinationConfigurationResult = CreateAmazonOpenSearchServerlessDestinationConfiguration();
        factoryAction?.Invoke(amazonOpenSearchServerlessDestinationConfigurationResult);

        return amazonOpenSearchServerlessDestinationConfigurationResult;
    }

    private Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessDestinationConfiguration CreateAmazonOpenSearchServerlessDestinationConfiguration()
    {
        var amazonOpenSearchServerlessDestinationConfigurationResult = new Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessDestinationConfiguration();

        return amazonOpenSearchServerlessDestinationConfigurationResult;
    }
    public override void CreateChildren(Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessDestinationConfiguration result)
    {
        base.CreateChildren(result);

        result.S3Configuration ??= S3ConfigurationFactory?.Build();
        result.BufferingHints ??= BufferingHintsFactory?.Build();
        result.RetryOptions ??= RetryOptionsFactory?.Build();
        result.VpcConfiguration ??= VpcConfigurationFactory?.Build();
        result.ProcessingConfiguration ??= ProcessingConfigurationFactory?.Build();
        result.CloudWatchLoggingOptions ??= CloudWatchLoggingOptionsFactory?.Build();
    }

} // End Of Class

public static class InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactoryExtensions
{
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration(this InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.S3ConfigurationFactory = new InnerDeliveryStreamS3DestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3ConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints(this InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null)
    {
        parentFactory.BufferingHintsFactory = new InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BufferingHintsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions(this InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null)
    {
        parentFactory.RetryOptionsFactory = new InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RetryOptionsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration(this InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null)
    {
        parentFactory.VpcConfigurationFactory = new InnerDeliveryStreamVpcConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VpcConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration(this InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null)
    {
        parentFactory.ProcessingConfigurationFactory = new InnerDeliveryStreamProcessingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProcessingConfigurationFactory);
    }

    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions(this InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory parentFactory, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null)
    {
        parentFactory.CloudWatchLoggingOptionsFactory = new InnerDeliveryStreamCloudWatchLoggingOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLoggingOptionsFactory);
    }

    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamS3DestinationConfigurationFactory> WithS3Configuration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Configuration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessBufferingHintsFactory> WithBufferingHints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessBufferingHints> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBufferingHints(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamAmazonOpenSearchServerlessRetryOptionsFactory> WithRetryOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.AmazonOpenSearchServerlessRetryOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamVpcConfigurationFactory> WithVpcConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.VpcConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamProcessingConfigurationFactory> WithProcessingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.ProcessingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProcessingConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory, InnerDeliveryStreamCloudWatchLoggingOptionsFactory> WithCloudWatchLoggingOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationFactory> combinedResult, Action<Humidifier.KinesisFirehose.DeliveryStreamTypes.CloudWatchLoggingOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLoggingOptions(combinedResult.T5, subFactoryAction));
}
