// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.GameLift;

public class GameSessionQueueFactory(string resourceName = null, Action<Humidifier.GameLift.GameSessionQueue> factoryAction = null) : ResourceFactory<Humidifier.GameLift.GameSessionQueue>(resourceName)
{

    internal List<InnerGameSessionQueuePlayerLatencyPolicyFactory> PlayerLatencyPoliciesFactories { get; set; } = [];

    internal List<InnerGameSessionQueueGameSessionQueueDestinationFactory> DestinationsFactories { get; set; } = [];

    internal InnerGameSessionQueueFilterConfigurationFactory FilterConfigurationFactory { get; set; }

    internal InnerGameSessionQueuePriorityConfigurationFactory PriorityConfigurationFactory { get; set; }

    protected override Humidifier.GameLift.GameSessionQueue Create()
    {
        var gameSessionQueueResult = CreateGameSessionQueue();
        factoryAction?.Invoke(gameSessionQueueResult);

        return gameSessionQueueResult;
    }

    private Humidifier.GameLift.GameSessionQueue CreateGameSessionQueue()
    {
        var gameSessionQueueResult = new Humidifier.GameLift.GameSessionQueue
        {
            GivenName = InputResourceName,
        };

        return gameSessionQueueResult;
    }
    public override void CreateChildren(Humidifier.GameLift.GameSessionQueue result)
    {
        base.CreateChildren(result);

        result.PlayerLatencyPolicies = PlayerLatencyPoliciesFactories.Any() ? PlayerLatencyPoliciesFactories.Select(x => x.Build()).ToList() : null;
        result.Destinations = DestinationsFactories.Any() ? DestinationsFactories.Select(x => x.Build()).ToList() : null;
        result.FilterConfiguration ??= FilterConfigurationFactory?.Build();
        result.PriorityConfiguration ??= PriorityConfigurationFactory?.Build();
    }

} // End Of Class

public static class GameSessionQueueFactoryExtensions
{
    public static CombinedResult<GameSessionQueueFactory, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies(this GameSessionQueueFactory parentFactory, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null)
    {
        var factory = new InnerGameSessionQueuePlayerLatencyPolicyFactory(subFactoryAction);
        parentFactory.PlayerLatencyPoliciesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GameSessionQueueFactory, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations(this GameSessionQueueFactory parentFactory, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null)
    {
        var factory = new InnerGameSessionQueueGameSessionQueueDestinationFactory(subFactoryAction);
        parentFactory.DestinationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GameSessionQueueFactory, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration(this GameSessionQueueFactory parentFactory, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null)
    {
        parentFactory.FilterConfigurationFactory = new InnerGameSessionQueueFilterConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FilterConfigurationFactory);
    }

    public static CombinedResult<GameSessionQueueFactory, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration(this GameSessionQueueFactory parentFactory, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null)
    {
        parentFactory.PriorityConfigurationFactory = new InnerGameSessionQueuePriorityConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PriorityConfigurationFactory);
    }

    public static CombinedResult<GameSessionQueueFactory, T1, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1>(this CombinedResult<GameSessionQueueFactory, T1> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1>(this CombinedResult<T1, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2>(this CombinedResult<GameSessionQueueFactory, T1, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2>(this CombinedResult<T1, GameSessionQueueFactory, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2>(this CombinedResult<T1, T2, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3, T4>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3, T4>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3, T4>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory, InnerGameSessionQueuePlayerLatencyPolicyFactory> WithPlayerLatencyPolicies<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PlayerLatencyPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlayerLatencyPolicies(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1>(this CombinedResult<GameSessionQueueFactory, T1> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1>(this CombinedResult<T1, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2>(this CombinedResult<GameSessionQueueFactory, T1, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2>(this CombinedResult<T1, GameSessionQueueFactory, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2>(this CombinedResult<T1, T2, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory, InnerGameSessionQueueGameSessionQueueDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.GameSessionQueueDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1>(this CombinedResult<GameSessionQueueFactory, T1> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1>(this CombinedResult<T1, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2>(this CombinedResult<GameSessionQueueFactory, T1, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2>(this CombinedResult<T1, GameSessionQueueFactory, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2>(this CombinedResult<T1, T2, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3, T4>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory, InnerGameSessionQueueFilterConfigurationFactory> WithFilterConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.FilterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilterConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1>(this CombinedResult<GameSessionQueueFactory, T1> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1>(this CombinedResult<T1, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2>(this CombinedResult<GameSessionQueueFactory, T1, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2>(this CombinedResult<T1, GameSessionQueueFactory, T2> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2>(this CombinedResult<T1, T2, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3, T4>(this CombinedResult<GameSessionQueueFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, GameSessionQueueFactory, T2, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, GameSessionQueueFactory, T3, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GameSessionQueueFactory, T4> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory, InnerGameSessionQueuePriorityConfigurationFactory> WithPriorityConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GameSessionQueueFactory> combinedResult, Action<Humidifier.GameLift.GameSessionQueueTypes.PriorityConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPriorityConfiguration(combinedResult.T5, subFactoryAction));
}
