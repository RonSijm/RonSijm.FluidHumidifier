// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.OpsWorks;

public class LayerFactory(string resourceName = null, Action<Humidifier.OpsWorks.Layer> factoryAction = null) : ResourceFactory<Humidifier.OpsWorks.Layer>(resourceName)
{

    internal List<InnerLayerVolumeConfigurationFactory> VolumeConfigurationsFactories { get; set; } = [];

    internal InnerLayerRecipesFactory CustomRecipesFactory { get; set; }

    internal InnerLayerLifecycleEventConfigurationFactory LifecycleEventConfigurationFactory { get; set; }

    internal InnerLayerLoadBasedAutoScalingFactory LoadBasedAutoScalingFactory { get; set; }

    protected override Humidifier.OpsWorks.Layer Create()
    {
        var layerResult = CreateLayer();
        factoryAction?.Invoke(layerResult);

        return layerResult;
    }

    private Humidifier.OpsWorks.Layer CreateLayer()
    {
        var layerResult = new Humidifier.OpsWorks.Layer
        {
            GivenName = InputResourceName,
        };

        return layerResult;
    }
    public override void CreateChildren(Humidifier.OpsWorks.Layer result)
    {
        base.CreateChildren(result);

        result.VolumeConfigurations = VolumeConfigurationsFactories.Any() ? VolumeConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.CustomRecipes ??= CustomRecipesFactory?.Build();
        result.LifecycleEventConfiguration ??= LifecycleEventConfigurationFactory?.Build();
        result.LoadBasedAutoScaling ??= LoadBasedAutoScalingFactory?.Build();
    }

} // End Of Class

public static class LayerFactoryExtensions
{
    public static CombinedResult<LayerFactory, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations(this LayerFactory parentFactory, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null)
    {
        var factory = new InnerLayerVolumeConfigurationFactory(subFactoryAction);
        parentFactory.VolumeConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<LayerFactory, InnerLayerRecipesFactory> WithCustomRecipes(this LayerFactory parentFactory, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null)
    {
        parentFactory.CustomRecipesFactory = new InnerLayerRecipesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CustomRecipesFactory);
    }

    public static CombinedResult<LayerFactory, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration(this LayerFactory parentFactory, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null)
    {
        parentFactory.LifecycleEventConfigurationFactory = new InnerLayerLifecycleEventConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LifecycleEventConfigurationFactory);
    }

    public static CombinedResult<LayerFactory, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling(this LayerFactory parentFactory, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null)
    {
        parentFactory.LoadBasedAutoScalingFactory = new InnerLayerLoadBasedAutoScalingFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoadBasedAutoScalingFactory);
    }

    public static CombinedResult<LayerFactory, T1, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1>(this CombinedResult<LayerFactory, T1> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1>(this CombinedResult<T1, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2>(this CombinedResult<LayerFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2>(this CombinedResult<T1, LayerFactory, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2>(this CombinedResult<T1, T2, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<LayerFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<T1, LayerFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, LayerFactory, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, T4, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<LayerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, T4, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, LayerFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, T4, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, LayerFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, T4, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LayerFactory, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LayerFactory, InnerLayerVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.VolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, InnerLayerRecipesFactory> WithCustomRecipes<T1>(this CombinedResult<LayerFactory, T1> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomRecipes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, InnerLayerRecipesFactory> WithCustomRecipes<T1>(this CombinedResult<T1, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomRecipes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2>(this CombinedResult<LayerFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2>(this CombinedResult<T1, LayerFactory, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2>(this CombinedResult<T1, T2, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3>(this CombinedResult<LayerFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3>(this CombinedResult<T1, LayerFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3>(this CombinedResult<T1, T2, LayerFactory, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3>(this CombinedResult<T1, T2, T3, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, T4, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3, T4>(this CombinedResult<LayerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, T4, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3, T4>(this CombinedResult<T1, LayerFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, T4, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3, T4>(this CombinedResult<T1, T2, LayerFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, T4, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LayerFactory, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LayerFactory, InnerLayerRecipesFactory> WithCustomRecipes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.Recipes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomRecipes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1>(this CombinedResult<LayerFactory, T1> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1>(this CombinedResult<T1, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2>(this CombinedResult<LayerFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2>(this CombinedResult<T1, LayerFactory, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2>(this CombinedResult<T1, T2, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3>(this CombinedResult<LayerFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3>(this CombinedResult<T1, LayerFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, LayerFactory, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, T4, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3, T4>(this CombinedResult<LayerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, T4, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, LayerFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, T4, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, LayerFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, T4, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LayerFactory, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LayerFactory, InnerLayerLifecycleEventConfigurationFactory> WithLifecycleEventConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LifecycleEventConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleEventConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1>(this CombinedResult<LayerFactory, T1> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1>(this CombinedResult<T1, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2>(this CombinedResult<LayerFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2>(this CombinedResult<T1, LayerFactory, T2> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2>(this CombinedResult<T1, T2, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3>(this CombinedResult<LayerFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3>(this CombinedResult<T1, LayerFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3>(this CombinedResult<T1, T2, LayerFactory, T3> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3>(this CombinedResult<T1, T2, T3, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LayerFactory, T1, T2, T3, T4, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3, T4>(this CombinedResult<LayerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LayerFactory, T2, T3, T4, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3, T4>(this CombinedResult<T1, LayerFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LayerFactory, T3, T4, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3, T4>(this CombinedResult<T1, T2, LayerFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LayerFactory, T4, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LayerFactory, T4> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LayerFactory, InnerLayerLoadBasedAutoScalingFactory> WithLoadBasedAutoScaling<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LayerFactory> combinedResult, Action<Humidifier.OpsWorks.LayerTypes.LoadBasedAutoScaling> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBasedAutoScaling(combinedResult.T5, subFactoryAction));
}
