// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.OpsWorks;

public class StackFactory(string resourceName = null, Action<Humidifier.OpsWorks.Stack> factoryAction = null) : ResourceFactory<Humidifier.OpsWorks.Stack>(resourceName)
{

    internal List<InnerStackElasticIpFactory> ElasticIpsFactories { get; set; } = [];

    internal List<InnerStackRdsDbInstanceFactory> RdsDbInstancesFactories { get; set; } = [];

    internal InnerStackChefConfigurationFactory ChefConfigurationFactory { get; set; }

    internal InnerStackStackConfigurationManagerFactory ConfigurationManagerFactory { get; set; }

    internal InnerStackSourceFactory CustomCookbooksSourceFactory { get; set; }

    protected override Humidifier.OpsWorks.Stack Create()
    {
        var stackResult = CreateStack();
        factoryAction?.Invoke(stackResult);

        return stackResult;
    }

    private Humidifier.OpsWorks.Stack CreateStack()
    {
        var stackResult = new Humidifier.OpsWorks.Stack
        {
            GivenName = InputResourceName,
        };

        return stackResult;
    }
    public override void CreateChildren(Humidifier.OpsWorks.Stack result)
    {
        base.CreateChildren(result);

        result.ElasticIps = ElasticIpsFactories.Any() ? ElasticIpsFactories.Select(x => x.Build()).ToList() : null;
        result.RdsDbInstances = RdsDbInstancesFactories.Any() ? RdsDbInstancesFactories.Select(x => x.Build()).ToList() : null;
        result.ChefConfiguration ??= ChefConfigurationFactory?.Build();
        result.ConfigurationManager ??= ConfigurationManagerFactory?.Build();
        result.CustomCookbooksSource ??= CustomCookbooksSourceFactory?.Build();
    }

} // End Of Class

public static class StackFactoryExtensions
{
    public static CombinedResult<StackFactory, InnerStackElasticIpFactory> WithElasticIps(this StackFactory parentFactory, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null)
    {
        var factory = new InnerStackElasticIpFactory(subFactoryAction);
        parentFactory.ElasticIpsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<StackFactory, InnerStackRdsDbInstanceFactory> WithRdsDbInstances(this StackFactory parentFactory, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null)
    {
        var factory = new InnerStackRdsDbInstanceFactory(subFactoryAction);
        parentFactory.RdsDbInstancesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<StackFactory, InnerStackChefConfigurationFactory> WithChefConfiguration(this StackFactory parentFactory, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null)
    {
        parentFactory.ChefConfigurationFactory = new InnerStackChefConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ChefConfigurationFactory);
    }

    public static CombinedResult<StackFactory, InnerStackStackConfigurationManagerFactory> WithConfigurationManager(this StackFactory parentFactory, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null)
    {
        parentFactory.ConfigurationManagerFactory = new InnerStackStackConfigurationManagerFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConfigurationManagerFactory);
    }

    public static CombinedResult<StackFactory, InnerStackSourceFactory> WithCustomCookbooksSource(this StackFactory parentFactory, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null)
    {
        parentFactory.CustomCookbooksSourceFactory = new InnerStackSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CustomCookbooksSourceFactory);
    }

    public static CombinedResult<StackFactory, T1, InnerStackElasticIpFactory> WithElasticIps<T1>(this CombinedResult<StackFactory, T1> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticIps(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, InnerStackElasticIpFactory> WithElasticIps<T1>(this CombinedResult<T1, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticIps(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, InnerStackElasticIpFactory> WithElasticIps<T1, T2>(this CombinedResult<StackFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, InnerStackElasticIpFactory> WithElasticIps<T1, T2>(this CombinedResult<T1, StackFactory, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, InnerStackElasticIpFactory> WithElasticIps<T1, T2>(this CombinedResult<T1, T2, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3>(this CombinedResult<StackFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3>(this CombinedResult<T1, StackFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3>(this CombinedResult<T1, T2, StackFactory, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3>(this CombinedResult<T1, T2, T3, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, T4, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3, T4>(this CombinedResult<StackFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, T4, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3, T4>(this CombinedResult<T1, StackFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, T4, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3, T4>(this CombinedResult<T1, T2, StackFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, T4, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StackFactory, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StackFactory, InnerStackElasticIpFactory> WithElasticIps<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ElasticIp> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticIps(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StackFactory, T1, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1>(this CombinedResult<StackFactory, T1> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1>(this CombinedResult<T1, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2>(this CombinedResult<StackFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2>(this CombinedResult<T1, StackFactory, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2>(this CombinedResult<T1, T2, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3>(this CombinedResult<StackFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3>(this CombinedResult<T1, StackFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3>(this CombinedResult<T1, T2, StackFactory, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3>(this CombinedResult<T1, T2, T3, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, T4, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3, T4>(this CombinedResult<StackFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, T4, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3, T4>(this CombinedResult<T1, StackFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, T4, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3, T4>(this CombinedResult<T1, T2, StackFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, T4, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StackFactory, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StackFactory, InnerStackRdsDbInstanceFactory> WithRdsDbInstances<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.RdsDbInstance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRdsDbInstances(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StackFactory, T1, InnerStackChefConfigurationFactory> WithChefConfiguration<T1>(this CombinedResult<StackFactory, T1> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithChefConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, InnerStackChefConfigurationFactory> WithChefConfiguration<T1>(this CombinedResult<T1, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithChefConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2>(this CombinedResult<StackFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2>(this CombinedResult<T1, StackFactory, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2>(this CombinedResult<T1, T2, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3>(this CombinedResult<StackFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3>(this CombinedResult<T1, StackFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, StackFactory, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, T4, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3, T4>(this CombinedResult<StackFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, T4, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, StackFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, T4, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, StackFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, T4, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StackFactory, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StackFactory, InnerStackChefConfigurationFactory> WithChefConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.ChefConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChefConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StackFactory, T1, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1>(this CombinedResult<StackFactory, T1> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, WithConfigurationManager(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1>(this CombinedResult<T1, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, WithConfigurationManager(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2>(this CombinedResult<StackFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2>(this CombinedResult<T1, StackFactory, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2>(this CombinedResult<T1, T2, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3>(this CombinedResult<StackFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3>(this CombinedResult<T1, StackFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3>(this CombinedResult<T1, T2, StackFactory, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3>(this CombinedResult<T1, T2, T3, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, T4, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3, T4>(this CombinedResult<StackFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, T4, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3, T4>(this CombinedResult<T1, StackFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, T4, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3, T4>(this CombinedResult<T1, T2, StackFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, T4, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StackFactory, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StackFactory, InnerStackStackConfigurationManagerFactory> WithConfigurationManager<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.StackConfigurationManager> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfigurationManager(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StackFactory, T1, InnerStackSourceFactory> WithCustomCookbooksSource<T1>(this CombinedResult<StackFactory, T1> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, InnerStackSourceFactory> WithCustomCookbooksSource<T1>(this CombinedResult<T1, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2>(this CombinedResult<StackFactory, T1, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2>(this CombinedResult<T1, StackFactory, T2> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2>(this CombinedResult<T1, T2, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3>(this CombinedResult<StackFactory, T1, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3>(this CombinedResult<T1, StackFactory, T2, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3>(this CombinedResult<T1, T2, StackFactory, T3> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3>(this CombinedResult<T1, T2, T3, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StackFactory, T1, T2, T3, T4, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3, T4>(this CombinedResult<StackFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StackFactory, T2, T3, T4, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3, T4>(this CombinedResult<T1, StackFactory, T2, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StackFactory, T3, T4, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, StackFactory, T3, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StackFactory, T4, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StackFactory, T4> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StackFactory, InnerStackSourceFactory> WithCustomCookbooksSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StackFactory> combinedResult, Action<Humidifier.OpsWorks.StackTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomCookbooksSource(combinedResult.T5, subFactoryAction));
}
