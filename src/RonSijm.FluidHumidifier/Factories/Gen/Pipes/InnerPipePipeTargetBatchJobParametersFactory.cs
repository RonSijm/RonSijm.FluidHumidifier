// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Pipes;

public class InnerPipePipeTargetBatchJobParametersFactory(Action<Humidifier.Pipes.PipeTypes.PipeTargetBatchJobParameters> factoryAction = null) : SubResourceFactory<Humidifier.Pipes.PipeTypes.PipeTargetBatchJobParameters>
{

    internal InnerPipeBatchArrayPropertiesFactory ArrayPropertiesFactory { get; set; }

    internal InnerPipeBatchRetryStrategyFactory RetryStrategyFactory { get; set; }

    internal InnerPipeBatchContainerOverridesFactory ContainerOverridesFactory { get; set; }

    protected override Humidifier.Pipes.PipeTypes.PipeTargetBatchJobParameters Create()
    {
        var pipeTargetBatchJobParametersResult = CreatePipeTargetBatchJobParameters();
        factoryAction?.Invoke(pipeTargetBatchJobParametersResult);

        return pipeTargetBatchJobParametersResult;
    }

    private Humidifier.Pipes.PipeTypes.PipeTargetBatchJobParameters CreatePipeTargetBatchJobParameters()
    {
        var pipeTargetBatchJobParametersResult = new Humidifier.Pipes.PipeTypes.PipeTargetBatchJobParameters();

        return pipeTargetBatchJobParametersResult;
    }
    public override void CreateChildren(Humidifier.Pipes.PipeTypes.PipeTargetBatchJobParameters result)
    {
        base.CreateChildren(result);

        result.ArrayProperties ??= ArrayPropertiesFactory?.Build();
        result.RetryStrategy ??= RetryStrategyFactory?.Build();
        result.ContainerOverrides ??= ContainerOverridesFactory?.Build();
    }

} // End Of Class

public static class InnerPipePipeTargetBatchJobParametersFactoryExtensions
{
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties(this InnerPipePipeTargetBatchJobParametersFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null)
    {
        parentFactory.ArrayPropertiesFactory = new InnerPipeBatchArrayPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ArrayPropertiesFactory);
    }

    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy(this InnerPipePipeTargetBatchJobParametersFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null)
    {
        parentFactory.RetryStrategyFactory = new InnerPipeBatchRetryStrategyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RetryStrategyFactory);
    }

    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides(this InnerPipePipeTargetBatchJobParametersFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null)
    {
        parentFactory.ContainerOverridesFactory = new InnerPipeBatchContainerOverridesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ContainerOverridesFactory);
    }

    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithArrayProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithArrayProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, T4, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3, T4>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, T4, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3, T4>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, T4, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, T4, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchArrayPropertiesFactory> WithArrayProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchArrayProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArrayProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, T4, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, T4, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, T4, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, T4, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchRetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, WithContainerOverrides(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, WithContainerOverrides(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, T4, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3, T4>(this CombinedResult<InnerPipePipeTargetBatchJobParametersFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, T4, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3, T4>(this CombinedResult<T1, InnerPipePipeTargetBatchJobParametersFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, T4, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPipePipeTargetBatchJobParametersFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, T4, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPipePipeTargetBatchJobParametersFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPipePipeTargetBatchJobParametersFactory, InnerPipeBatchContainerOverridesFactory> WithContainerOverrides<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPipePipeTargetBatchJobParametersFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.BatchContainerOverrides> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerOverrides(combinedResult.T5, subFactoryAction));
}
