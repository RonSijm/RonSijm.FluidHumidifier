// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Pipes;

public class PipeFactory(string resourceName = null, Action<Humidifier.Pipes.Pipe> factoryAction = null) : ResourceFactory<Humidifier.Pipes.Pipe>(resourceName)
{

    internal InnerPipePipeTargetParametersFactory TargetParametersFactory { get; set; }

    internal InnerPipePipeLogConfigurationFactory LogConfigurationFactory { get; set; }

    internal InnerPipePipeEnrichmentParametersFactory EnrichmentParametersFactory { get; set; }

    internal InnerPipePipeSourceParametersFactory SourceParametersFactory { get; set; }

    protected override Humidifier.Pipes.Pipe Create()
    {
        var pipeResult = CreatePipe();
        factoryAction?.Invoke(pipeResult);

        return pipeResult;
    }

    private Humidifier.Pipes.Pipe CreatePipe()
    {
        var pipeResult = new Humidifier.Pipes.Pipe
        {
            GivenName = InputResourceName,
        };

        return pipeResult;
    }
    public override void CreateChildren(Humidifier.Pipes.Pipe result)
    {
        base.CreateChildren(result);

        result.TargetParameters ??= TargetParametersFactory?.Build();
        result.LogConfiguration ??= LogConfigurationFactory?.Build();
        result.EnrichmentParameters ??= EnrichmentParametersFactory?.Build();
        result.SourceParameters ??= SourceParametersFactory?.Build();
    }

} // End Of Class

public static class PipeFactoryExtensions
{
    public static CombinedResult<PipeFactory, InnerPipePipeTargetParametersFactory> WithTargetParameters(this PipeFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null)
    {
        parentFactory.TargetParametersFactory = new InnerPipePipeTargetParametersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TargetParametersFactory);
    }

    public static CombinedResult<PipeFactory, InnerPipePipeLogConfigurationFactory> WithLogConfiguration(this PipeFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null)
    {
        parentFactory.LogConfigurationFactory = new InnerPipePipeLogConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LogConfigurationFactory);
    }

    public static CombinedResult<PipeFactory, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters(this PipeFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null)
    {
        parentFactory.EnrichmentParametersFactory = new InnerPipePipeEnrichmentParametersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EnrichmentParametersFactory);
    }

    public static CombinedResult<PipeFactory, InnerPipePipeSourceParametersFactory> WithSourceParameters(this PipeFactory parentFactory, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null)
    {
        parentFactory.SourceParametersFactory = new InnerPipePipeSourceParametersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceParametersFactory);
    }

    public static CombinedResult<PipeFactory, T1, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1>(this CombinedResult<PipeFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1>(this CombinedResult<T1, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2>(this CombinedResult<PipeFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2>(this CombinedResult<T1, PipeFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2>(this CombinedResult<T1, T2, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3>(this CombinedResult<PipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3>(this CombinedResult<T1, PipeFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3>(this CombinedResult<T1, T2, PipeFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, T4, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3, T4>(this CombinedResult<PipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, T4, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3, T4>(this CombinedResult<T1, PipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, T4, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipeFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, T4, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipeFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipeFactory, InnerPipePipeTargetParametersFactory> WithTargetParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeTargetParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1>(this CombinedResult<PipeFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1>(this CombinedResult<T1, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2>(this CombinedResult<PipeFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2>(this CombinedResult<T1, PipeFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2>(this CombinedResult<T1, T2, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<PipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<T1, PipeFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, PipeFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, T4, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<PipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, T4, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, PipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, T4, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipeFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, T4, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipeFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipeFactory, InnerPipePipeLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1>(this CombinedResult<PipeFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1>(this CombinedResult<T1, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2>(this CombinedResult<PipeFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2>(this CombinedResult<T1, PipeFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2>(this CombinedResult<T1, T2, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3>(this CombinedResult<PipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3>(this CombinedResult<T1, PipeFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3>(this CombinedResult<T1, T2, PipeFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, T4, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3, T4>(this CombinedResult<PipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, T4, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3, T4>(this CombinedResult<T1, PipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, T4, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipeFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, T4, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipeFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipeFactory, InnerPipePipeEnrichmentParametersFactory> WithEnrichmentParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeEnrichmentParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnrichmentParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1>(this CombinedResult<PipeFactory, T1> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1>(this CombinedResult<T1, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2>(this CombinedResult<PipeFactory, T1, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2>(this CombinedResult<T1, PipeFactory, T2> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2>(this CombinedResult<T1, T2, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3>(this CombinedResult<PipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3>(this CombinedResult<T1, PipeFactory, T2, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3>(this CombinedResult<T1, T2, PipeFactory, T3> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipeFactory, T1, T2, T3, T4, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3, T4>(this CombinedResult<PipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipeFactory, T2, T3, T4, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3, T4>(this CombinedResult<T1, PipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipeFactory, T3, T4, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipeFactory, T3, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipeFactory, T4, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipeFactory, T4> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipeFactory, InnerPipePipeSourceParametersFactory> WithSourceParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipeFactory> combinedResult, Action<Humidifier.Pipes.PipeTypes.PipeSourceParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceParameters(combinedResult.T5, subFactoryAction));
}
