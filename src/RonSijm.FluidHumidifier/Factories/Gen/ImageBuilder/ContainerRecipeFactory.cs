// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ImageBuilder;

public class ContainerRecipeFactory(string resourceName = null, Action<Humidifier.ImageBuilder.ContainerRecipe> factoryAction = null) : ResourceFactory<Humidifier.ImageBuilder.ContainerRecipe>(resourceName)
{

    internal List<InnerContainerRecipeComponentConfigurationFactory> ComponentsFactories { get; set; } = [];

    internal InnerContainerRecipeInstanceConfigurationFactory InstanceConfigurationFactory { get; set; }

    internal InnerContainerRecipeTargetContainerRepositoryFactory TargetRepositoryFactory { get; set; }

    protected override Humidifier.ImageBuilder.ContainerRecipe Create()
    {
        var containerRecipeResult = CreateContainerRecipe();
        factoryAction?.Invoke(containerRecipeResult);

        return containerRecipeResult;
    }

    private Humidifier.ImageBuilder.ContainerRecipe CreateContainerRecipe()
    {
        var containerRecipeResult = new Humidifier.ImageBuilder.ContainerRecipe
        {
            GivenName = InputResourceName,
        };

        return containerRecipeResult;
    }
    public override void CreateChildren(Humidifier.ImageBuilder.ContainerRecipe result)
    {
        base.CreateChildren(result);

        result.Components = ComponentsFactories.Any() ? ComponentsFactories.Select(x => x.Build()).ToList() : null;
        result.InstanceConfiguration ??= InstanceConfigurationFactory?.Build();
        result.TargetRepository ??= TargetRepositoryFactory?.Build();
    }

} // End Of Class

public static class ContainerRecipeFactoryExtensions
{
    public static CombinedResult<ContainerRecipeFactory, InnerContainerRecipeComponentConfigurationFactory> WithComponents(this ContainerRecipeFactory parentFactory, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null)
    {
        var factory = new InnerContainerRecipeComponentConfigurationFactory(subFactoryAction);
        parentFactory.ComponentsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ContainerRecipeFactory, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration(this ContainerRecipeFactory parentFactory, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null)
    {
        parentFactory.InstanceConfigurationFactory = new InnerContainerRecipeInstanceConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InstanceConfigurationFactory);
    }

    public static CombinedResult<ContainerRecipeFactory, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository(this ContainerRecipeFactory parentFactory, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null)
    {
        parentFactory.TargetRepositoryFactory = new InnerContainerRecipeTargetContainerRepositoryFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TargetRepositoryFactory);
    }

    public static CombinedResult<ContainerRecipeFactory, T1, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1>(this CombinedResult<ContainerRecipeFactory, T1> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1>(this CombinedResult<T1, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2>(this CombinedResult<ContainerRecipeFactory, T1, T2> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2>(this CombinedResult<T1, ContainerRecipeFactory, T2> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2>(this CombinedResult<T1, T2, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, T3, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3>(this CombinedResult<ContainerRecipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, T3, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3>(this CombinedResult<T1, ContainerRecipeFactory, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, T3, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3>(this CombinedResult<T1, T2, ContainerRecipeFactory, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ContainerRecipeFactory, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3>(this CombinedResult<T1, T2, T3, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, T3, T4, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3, T4>(this CombinedResult<ContainerRecipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, T3, T4, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3, T4>(this CombinedResult<T1, ContainerRecipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, T3, T4, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3, T4>(this CombinedResult<T1, T2, ContainerRecipeFactory, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ContainerRecipeFactory, T4, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ContainerRecipeFactory, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ContainerRecipeFactory, InnerContainerRecipeComponentConfigurationFactory> WithComponents<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.ComponentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponents(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1>(this CombinedResult<ContainerRecipeFactory, T1> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1>(this CombinedResult<T1, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2>(this CombinedResult<ContainerRecipeFactory, T1, T2> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2>(this CombinedResult<T1, ContainerRecipeFactory, T2> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2>(this CombinedResult<T1, T2, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, T3, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3>(this CombinedResult<ContainerRecipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, T3, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3>(this CombinedResult<T1, ContainerRecipeFactory, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, T3, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ContainerRecipeFactory, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ContainerRecipeFactory, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, T3, T4, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3, T4>(this CombinedResult<ContainerRecipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, T3, T4, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ContainerRecipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, T3, T4, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ContainerRecipeFactory, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ContainerRecipeFactory, T4, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ContainerRecipeFactory, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ContainerRecipeFactory, InnerContainerRecipeInstanceConfigurationFactory> WithInstanceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.InstanceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1>(this CombinedResult<ContainerRecipeFactory, T1> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetRepository(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1>(this CombinedResult<T1, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetRepository(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2>(this CombinedResult<ContainerRecipeFactory, T1, T2> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2>(this CombinedResult<T1, ContainerRecipeFactory, T2> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2>(this CombinedResult<T1, T2, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, T3, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3>(this CombinedResult<ContainerRecipeFactory, T1, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, T3, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3>(this CombinedResult<T1, ContainerRecipeFactory, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, T3, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3>(this CombinedResult<T1, T2, ContainerRecipeFactory, T3> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ContainerRecipeFactory, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3>(this CombinedResult<T1, T2, T3, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ContainerRecipeFactory, T1, T2, T3, T4, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3, T4>(this CombinedResult<ContainerRecipeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ContainerRecipeFactory, T2, T3, T4, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3, T4>(this CombinedResult<T1, ContainerRecipeFactory, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ContainerRecipeFactory, T3, T4, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3, T4>(this CombinedResult<T1, T2, ContainerRecipeFactory, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ContainerRecipeFactory, T4, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ContainerRecipeFactory, T4> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ContainerRecipeFactory, InnerContainerRecipeTargetContainerRepositoryFactory> WithTargetRepository<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ContainerRecipeFactory> combinedResult, Action<Humidifier.ImageBuilder.ContainerRecipeTypes.TargetContainerRepository> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetRepository(combinedResult.T5, subFactoryAction));
}
