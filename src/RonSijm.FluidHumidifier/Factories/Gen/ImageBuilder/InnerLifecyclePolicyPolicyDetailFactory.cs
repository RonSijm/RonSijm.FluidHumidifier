// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ImageBuilder;

public class InnerLifecyclePolicyPolicyDetailFactory(Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.PolicyDetail> factoryAction = null) : SubResourceFactory<Humidifier.ImageBuilder.LifecyclePolicyTypes.PolicyDetail>
{

    internal InnerLifecyclePolicyActionFactory ActionFactory { get; set; }

    internal InnerLifecyclePolicyExclusionRulesFactory ExclusionRulesFactory { get; set; }

    internal InnerLifecyclePolicyFilterFactory FilterFactory { get; set; }

    protected override Humidifier.ImageBuilder.LifecyclePolicyTypes.PolicyDetail Create()
    {
        var policyDetailResult = CreatePolicyDetail();
        factoryAction?.Invoke(policyDetailResult);

        return policyDetailResult;
    }

    private Humidifier.ImageBuilder.LifecyclePolicyTypes.PolicyDetail CreatePolicyDetail()
    {
        var policyDetailResult = new Humidifier.ImageBuilder.LifecyclePolicyTypes.PolicyDetail();

        return policyDetailResult;
    }
    public override void CreateChildren(Humidifier.ImageBuilder.LifecyclePolicyTypes.PolicyDetail result)
    {
        base.CreateChildren(result);

        result.Action ??= ActionFactory?.Build();
        result.ExclusionRules ??= ExclusionRulesFactory?.Build();
        result.Filter ??= FilterFactory?.Build();
    }

} // End Of Class

public static class InnerLifecyclePolicyPolicyDetailFactoryExtensions
{
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyActionFactory> WithAction(this InnerLifecyclePolicyPolicyDetailFactory parentFactory, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null)
    {
        parentFactory.ActionFactory = new InnerLifecyclePolicyActionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ActionFactory);
    }

    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules(this InnerLifecyclePolicyPolicyDetailFactory parentFactory, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null)
    {
        parentFactory.ExclusionRulesFactory = new InnerLifecyclePolicyExclusionRulesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExclusionRulesFactory);
    }

    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyFilterFactory> WithFilter(this InnerLifecyclePolicyPolicyDetailFactory parentFactory, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null)
    {
        parentFactory.FilterFactory = new InnerLifecyclePolicyFilterFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FilterFactory);
    }

    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, InnerLifecyclePolicyActionFactory> WithAction<T1>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, WithAction(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyActionFactory> WithAction<T1>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, WithAction(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, InnerLifecyclePolicyActionFactory> WithAction<T1, T2>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, InnerLifecyclePolicyActionFactory> WithAction<T1, T2>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyActionFactory> WithAction<T1, T2>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, T4, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3, T4>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, T4, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3, T4>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, T4, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, T4, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyActionFactory> WithAction<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAction(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, WithExclusionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, WithExclusionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, T4, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3, T4>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, T4, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3, T4>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, T4, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, T4, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyExclusionRulesFactory> WithExclusionRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.ExclusionRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionRules(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, InnerLifecyclePolicyFilterFactory> WithFilter<T1>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, WithFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyFilterFactory> WithFilter<T1>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, WithFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, T4, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3, T4>(this CombinedResult<InnerLifecyclePolicyPolicyDetailFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, T4, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3, T4>(this CombinedResult<T1, InnerLifecyclePolicyPolicyDetailFactory, T2, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, T4, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerLifecyclePolicyPolicyDetailFactory, T3, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, T4, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerLifecyclePolicyPolicyDetailFactory, T4> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerLifecyclePolicyPolicyDetailFactory, InnerLifecyclePolicyFilterFactory> WithFilter<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerLifecyclePolicyPolicyDetailFactory> combinedResult, Action<Humidifier.ImageBuilder.LifecyclePolicyTypes.Filter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFilter(combinedResult.T5, subFactoryAction));
}
