// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.AuditManager;

public class AssessmentFactory(string resourceName = null, Action<Humidifier.AuditManager.Assessment> factoryAction = null) : ResourceFactory<Humidifier.AuditManager.Assessment>(resourceName)
{

    internal List<InnerAssessmentDelegationFactory> DelegationsFactories { get; set; } = [];

    internal List<InnerAssessmentRoleFactory> RolesFactories { get; set; } = [];

    internal InnerAssessmentAssessmentReportsDestinationFactory AssessmentReportsDestinationFactory { get; set; }

    internal InnerAssessmentScopeFactory ScopeFactory { get; set; }

    internal InnerAssessmentAWSAccountFactory AwsAccountFactory { get; set; }

    protected override Humidifier.AuditManager.Assessment Create()
    {
        var assessmentResult = CreateAssessment();
        factoryAction?.Invoke(assessmentResult);

        return assessmentResult;
    }

    private Humidifier.AuditManager.Assessment CreateAssessment()
    {
        var assessmentResult = new Humidifier.AuditManager.Assessment
        {
            GivenName = InputResourceName,
        };

        return assessmentResult;
    }
    public override void CreateChildren(Humidifier.AuditManager.Assessment result)
    {
        base.CreateChildren(result);

        result.Delegations = DelegationsFactories.Any() ? DelegationsFactories.Select(x => x.Build()).ToList() : null;
        result.Roles = RolesFactories.Any() ? RolesFactories.Select(x => x.Build()).ToList() : null;
        result.AssessmentReportsDestination ??= AssessmentReportsDestinationFactory?.Build();
        result.Scope ??= ScopeFactory?.Build();
        result.AwsAccount ??= AwsAccountFactory?.Build();
    }

} // End Of Class

public static class AssessmentFactoryExtensions
{
    public static CombinedResult<AssessmentFactory, InnerAssessmentDelegationFactory> WithDelegations(this AssessmentFactory parentFactory, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null)
    {
        var factory = new InnerAssessmentDelegationFactory(subFactoryAction);
        parentFactory.DelegationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AssessmentFactory, InnerAssessmentRoleFactory> WithRoles(this AssessmentFactory parentFactory, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null)
    {
        var factory = new InnerAssessmentRoleFactory(subFactoryAction);
        parentFactory.RolesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AssessmentFactory, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination(this AssessmentFactory parentFactory, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null)
    {
        parentFactory.AssessmentReportsDestinationFactory = new InnerAssessmentAssessmentReportsDestinationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AssessmentReportsDestinationFactory);
    }

    public static CombinedResult<AssessmentFactory, InnerAssessmentScopeFactory> WithScope(this AssessmentFactory parentFactory, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null)
    {
        parentFactory.ScopeFactory = new InnerAssessmentScopeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ScopeFactory);
    }

    public static CombinedResult<AssessmentFactory, InnerAssessmentAWSAccountFactory> WithAwsAccount(this AssessmentFactory parentFactory, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null)
    {
        parentFactory.AwsAccountFactory = new InnerAssessmentAWSAccountFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AwsAccountFactory);
    }

    public static CombinedResult<AssessmentFactory, T1, InnerAssessmentDelegationFactory> WithDelegations<T1>(this CombinedResult<AssessmentFactory, T1> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, WithDelegations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, InnerAssessmentDelegationFactory> WithDelegations<T1>(this CombinedResult<T1, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, WithDelegations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, InnerAssessmentDelegationFactory> WithDelegations<T1, T2>(this CombinedResult<AssessmentFactory, T1, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, InnerAssessmentDelegationFactory> WithDelegations<T1, T2>(this CombinedResult<T1, AssessmentFactory, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, InnerAssessmentDelegationFactory> WithDelegations<T1, T2>(this CombinedResult<T1, T2, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3>(this CombinedResult<AssessmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3>(this CombinedResult<T1, AssessmentFactory, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3>(this CombinedResult<T1, T2, AssessmentFactory, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3>(this CombinedResult<T1, T2, T3, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, T4, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3, T4>(this CombinedResult<AssessmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, T4, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3, T4>(this CombinedResult<T1, AssessmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, T4, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3, T4>(this CombinedResult<T1, T2, AssessmentFactory, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, T4, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AssessmentFactory, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AssessmentFactory, InnerAssessmentDelegationFactory> WithDelegations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Delegation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDelegations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, InnerAssessmentRoleFactory> WithRoles<T1>(this CombinedResult<AssessmentFactory, T1> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, WithRoles(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, InnerAssessmentRoleFactory> WithRoles<T1>(this CombinedResult<T1, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, WithRoles(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, InnerAssessmentRoleFactory> WithRoles<T1, T2>(this CombinedResult<AssessmentFactory, T1, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, InnerAssessmentRoleFactory> WithRoles<T1, T2>(this CombinedResult<T1, AssessmentFactory, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, InnerAssessmentRoleFactory> WithRoles<T1, T2>(this CombinedResult<T1, T2, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3>(this CombinedResult<AssessmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3>(this CombinedResult<T1, AssessmentFactory, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3>(this CombinedResult<T1, T2, AssessmentFactory, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3>(this CombinedResult<T1, T2, T3, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, T4, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3, T4>(this CombinedResult<AssessmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, T4, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3, T4>(this CombinedResult<T1, AssessmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, T4, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3, T4>(this CombinedResult<T1, T2, AssessmentFactory, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, T4, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AssessmentFactory, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AssessmentFactory, InnerAssessmentRoleFactory> WithRoles<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Role> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRoles(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1>(this CombinedResult<AssessmentFactory, T1> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1>(this CombinedResult<T1, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2>(this CombinedResult<AssessmentFactory, T1, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2>(this CombinedResult<T1, AssessmentFactory, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2>(this CombinedResult<T1, T2, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3>(this CombinedResult<AssessmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3>(this CombinedResult<T1, AssessmentFactory, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3>(this CombinedResult<T1, T2, AssessmentFactory, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3>(this CombinedResult<T1, T2, T3, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, T4, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3, T4>(this CombinedResult<AssessmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, T4, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3, T4>(this CombinedResult<T1, AssessmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, T4, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3, T4>(this CombinedResult<T1, T2, AssessmentFactory, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, T4, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AssessmentFactory, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AssessmentFactory, InnerAssessmentAssessmentReportsDestinationFactory> WithAssessmentReportsDestination<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AssessmentReportsDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAssessmentReportsDestination(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, InnerAssessmentScopeFactory> WithScope<T1>(this CombinedResult<AssessmentFactory, T1> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, WithScope(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, InnerAssessmentScopeFactory> WithScope<T1>(this CombinedResult<T1, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, WithScope(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, InnerAssessmentScopeFactory> WithScope<T1, T2>(this CombinedResult<AssessmentFactory, T1, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, InnerAssessmentScopeFactory> WithScope<T1, T2>(this CombinedResult<T1, AssessmentFactory, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, InnerAssessmentScopeFactory> WithScope<T1, T2>(this CombinedResult<T1, T2, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, InnerAssessmentScopeFactory> WithScope<T1, T2, T3>(this CombinedResult<AssessmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, InnerAssessmentScopeFactory> WithScope<T1, T2, T3>(this CombinedResult<T1, AssessmentFactory, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, InnerAssessmentScopeFactory> WithScope<T1, T2, T3>(this CombinedResult<T1, T2, AssessmentFactory, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, InnerAssessmentScopeFactory> WithScope<T1, T2, T3>(this CombinedResult<T1, T2, T3, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, T4, InnerAssessmentScopeFactory> WithScope<T1, T2, T3, T4>(this CombinedResult<AssessmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, T4, InnerAssessmentScopeFactory> WithScope<T1, T2, T3, T4>(this CombinedResult<T1, AssessmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, T4, InnerAssessmentScopeFactory> WithScope<T1, T2, T3, T4>(this CombinedResult<T1, T2, AssessmentFactory, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, T4, InnerAssessmentScopeFactory> WithScope<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AssessmentFactory, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AssessmentFactory, InnerAssessmentScopeFactory> WithScope<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.Scope> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScope(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1>(this CombinedResult<AssessmentFactory, T1> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, WithAwsAccount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1>(this CombinedResult<T1, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, WithAwsAccount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2>(this CombinedResult<AssessmentFactory, T1, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2>(this CombinedResult<T1, AssessmentFactory, T2> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2>(this CombinedResult<T1, T2, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3>(this CombinedResult<AssessmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3>(this CombinedResult<T1, AssessmentFactory, T2, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3>(this CombinedResult<T1, T2, AssessmentFactory, T3> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3>(this CombinedResult<T1, T2, T3, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AssessmentFactory, T1, T2, T3, T4, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3, T4>(this CombinedResult<AssessmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AssessmentFactory, T2, T3, T4, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3, T4>(this CombinedResult<T1, AssessmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AssessmentFactory, T3, T4, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3, T4>(this CombinedResult<T1, T2, AssessmentFactory, T3, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AssessmentFactory, T4, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AssessmentFactory, T4> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AssessmentFactory, InnerAssessmentAWSAccountFactory> WithAwsAccount<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AssessmentFactory> combinedResult, Action<Humidifier.AuditManager.AssessmentTypes.AWSAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsAccount(combinedResult.T5, subFactoryAction));
}
