// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CustomerProfiles;

public class InnerIntegrationSourceFlowConfigFactory(Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceFlowConfig> factoryAction = null) : SubResourceFactory<Humidifier.CustomerProfiles.IntegrationTypes.SourceFlowConfig>
{

    internal InnerIntegrationSourceConnectorPropertiesFactory SourceConnectorPropertiesFactory { get; set; }

    internal InnerIntegrationIncrementalPullConfigFactory IncrementalPullConfigFactory { get; set; }

    protected override Humidifier.CustomerProfiles.IntegrationTypes.SourceFlowConfig Create()
    {
        var sourceFlowConfigResult = CreateSourceFlowConfig();
        factoryAction?.Invoke(sourceFlowConfigResult);

        return sourceFlowConfigResult;
    }

    private Humidifier.CustomerProfiles.IntegrationTypes.SourceFlowConfig CreateSourceFlowConfig()
    {
        var sourceFlowConfigResult = new Humidifier.CustomerProfiles.IntegrationTypes.SourceFlowConfig();

        return sourceFlowConfigResult;
    }
    public override void CreateChildren(Humidifier.CustomerProfiles.IntegrationTypes.SourceFlowConfig result)
    {
        base.CreateChildren(result);

        result.SourceConnectorProperties ??= SourceConnectorPropertiesFactory?.Build();
        result.IncrementalPullConfig ??= IncrementalPullConfigFactory?.Build();
    }

} // End Of Class

public static class InnerIntegrationSourceFlowConfigFactoryExtensions
{
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties(this InnerIntegrationSourceFlowConfigFactory parentFactory, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null)
    {
        parentFactory.SourceConnectorPropertiesFactory = new InnerIntegrationSourceConnectorPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceConnectorPropertiesFactory);
    }

    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig(this InnerIntegrationSourceFlowConfigFactory parentFactory, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null)
    {
        parentFactory.IncrementalPullConfigFactory = new InnerIntegrationIncrementalPullConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IncrementalPullConfigFactory);
    }

    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2>(this CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3>(this CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3, T4, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3, T4>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3, T4, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3, T4>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3, T4, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory, T4, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationSourceConnectorPropertiesFactory> WithSourceConnectorProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.SourceConnectorProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnectorProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2>(this CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3, T4, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3, T4>(this CombinedResult<InnerIntegrationSourceFlowConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3, T4, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerIntegrationSourceFlowConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3, T4, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerIntegrationSourceFlowConfigFactory, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory, T4, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerIntegrationSourceFlowConfigFactory, T4> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerIntegrationSourceFlowConfigFactory, InnerIntegrationIncrementalPullConfigFactory> WithIncrementalPullConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerIntegrationSourceFlowConfigFactory> combinedResult, Action<Humidifier.CustomerProfiles.IntegrationTypes.IncrementalPullConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalPullConfig(combinedResult.T5, subFactoryAction));
}
