// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CustomerProfiles;

public class InnerCalculatedAttributeDefinitionConditionsFactory(Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Conditions> factoryAction = null) : SubResourceFactory<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Conditions>
{

    internal InnerCalculatedAttributeDefinitionRangeFactory RangeFactory { get; set; }

    internal InnerCalculatedAttributeDefinitionThresholdFactory ThresholdFactory { get; set; }

    protected override Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Conditions Create()
    {
        var conditionsResult = CreateConditions();
        factoryAction?.Invoke(conditionsResult);

        return conditionsResult;
    }

    private Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Conditions CreateConditions()
    {
        var conditionsResult = new Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Conditions();

        return conditionsResult;
    }
    public override void CreateChildren(Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Conditions result)
    {
        base.CreateChildren(result);

        result.Range ??= RangeFactory?.Build();
        result.Threshold ??= ThresholdFactory?.Build();
    }

} // End Of Class

public static class InnerCalculatedAttributeDefinitionConditionsFactoryExtensions
{
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionRangeFactory> WithRange(this InnerCalculatedAttributeDefinitionConditionsFactory parentFactory, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null)
    {
        parentFactory.RangeFactory = new InnerCalculatedAttributeDefinitionRangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RangeFactory);
    }

    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold(this InnerCalculatedAttributeDefinitionConditionsFactory parentFactory, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null)
    {
        parentFactory.ThresholdFactory = new InnerCalculatedAttributeDefinitionThresholdFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ThresholdFactory);
    }

    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, WithRange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, WithRange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2>(this CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3>(this CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3, T4, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3, T4>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3, T4, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3, T4>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3, T4, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory, T4, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionRangeFactory> WithRange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Range> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRange(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, WithThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, WithThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2>(this CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3>(this CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3, T4, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3, T4>(this CombinedResult<InnerCalculatedAttributeDefinitionConditionsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3, T4, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3, T4>(this CombinedResult<T1, InnerCalculatedAttributeDefinitionConditionsFactory, T2, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3, T4, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerCalculatedAttributeDefinitionConditionsFactory, T3, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory, T4, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerCalculatedAttributeDefinitionConditionsFactory, T4> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerCalculatedAttributeDefinitionConditionsFactory, InnerCalculatedAttributeDefinitionThresholdFactory> WithThreshold<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerCalculatedAttributeDefinitionConditionsFactory> combinedResult, Action<Humidifier.CustomerProfiles.CalculatedAttributeDefinitionTypes.Threshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThreshold(combinedResult.T5, subFactoryAction));
}
