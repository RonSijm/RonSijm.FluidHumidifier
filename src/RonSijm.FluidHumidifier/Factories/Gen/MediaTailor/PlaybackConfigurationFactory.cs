// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.MediaTailor;

public class PlaybackConfigurationFactory(string resourceName = null, Action<Humidifier.MediaTailor.PlaybackConfiguration> factoryAction = null) : ResourceFactory<Humidifier.MediaTailor.PlaybackConfiguration>(resourceName)
{

    internal InnerPlaybackConfigurationBumperFactory BumperFactory { get; set; }

    internal InnerPlaybackConfigurationDashConfigurationFactory DashConfigurationFactory { get; set; }

    internal InnerPlaybackConfigurationCdnConfigurationFactory CdnConfigurationFactory { get; set; }

    internal InnerPlaybackConfigurationManifestProcessingRulesFactory ManifestProcessingRulesFactory { get; set; }

    internal InnerPlaybackConfigurationLivePreRollConfigurationFactory LivePreRollConfigurationFactory { get; set; }

    internal InnerPlaybackConfigurationHlsConfigurationFactory HlsConfigurationFactory { get; set; }

    internal InnerPlaybackConfigurationAvailSuppressionFactory AvailSuppressionFactory { get; set; }

    protected override Humidifier.MediaTailor.PlaybackConfiguration Create()
    {
        var playbackConfigurationResult = CreatePlaybackConfiguration();
        factoryAction?.Invoke(playbackConfigurationResult);

        return playbackConfigurationResult;
    }

    private Humidifier.MediaTailor.PlaybackConfiguration CreatePlaybackConfiguration()
    {
        var playbackConfigurationResult = new Humidifier.MediaTailor.PlaybackConfiguration
        {
            GivenName = InputResourceName,
        };

        return playbackConfigurationResult;
    }
    public override void CreateChildren(Humidifier.MediaTailor.PlaybackConfiguration result)
    {
        base.CreateChildren(result);

        result.Bumper ??= BumperFactory?.Build();
        result.DashConfiguration ??= DashConfigurationFactory?.Build();
        result.CdnConfiguration ??= CdnConfigurationFactory?.Build();
        result.ManifestProcessingRules ??= ManifestProcessingRulesFactory?.Build();
        result.LivePreRollConfiguration ??= LivePreRollConfigurationFactory?.Build();
        result.HlsConfiguration ??= HlsConfigurationFactory?.Build();
        result.AvailSuppression ??= AvailSuppressionFactory?.Build();
    }

} // End Of Class

public static class PlaybackConfigurationFactoryExtensions
{
    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationBumperFactory> WithBumper(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null)
    {
        parentFactory.BumperFactory = new InnerPlaybackConfigurationBumperFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BumperFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null)
    {
        parentFactory.DashConfigurationFactory = new InnerPlaybackConfigurationDashConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DashConfigurationFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null)
    {
        parentFactory.CdnConfigurationFactory = new InnerPlaybackConfigurationCdnConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CdnConfigurationFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null)
    {
        parentFactory.ManifestProcessingRulesFactory = new InnerPlaybackConfigurationManifestProcessingRulesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ManifestProcessingRulesFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null)
    {
        parentFactory.LivePreRollConfigurationFactory = new InnerPlaybackConfigurationLivePreRollConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LivePreRollConfigurationFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null)
    {
        parentFactory.HlsConfigurationFactory = new InnerPlaybackConfigurationHlsConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.HlsConfigurationFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression(this PlaybackConfigurationFactory parentFactory, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null)
    {
        parentFactory.AvailSuppressionFactory = new InnerPlaybackConfigurationAvailSuppressionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AvailSuppressionFactory);
    }

    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationBumperFactory> WithBumper<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, WithBumper(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationBumperFactory> WithBumper<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, WithBumper(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationBumperFactory> WithBumper<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.Bumper> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBumper(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDashConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDashConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationDashConfigurationFactory> WithDashConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.DashConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDashConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationCdnConfigurationFactory> WithCdnConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.CdnConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdnConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationManifestProcessingRulesFactory> WithManifestProcessingRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.ManifestProcessingRules> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestProcessingRules(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationLivePreRollConfigurationFactory> WithLivePreRollConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.LivePreRollConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLivePreRollConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationHlsConfigurationFactory> WithHlsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.HlsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHlsConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1>(this CombinedResult<PlaybackConfigurationFactory, T1> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, WithAvailSuppression(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1>(this CombinedResult<T1, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, WithAvailSuppression(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2>(this CombinedResult<PlaybackConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2>(this CombinedResult<T1, PlaybackConfigurationFactory, T2> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2>(this CombinedResult<T1, T2, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3, T4>(this CombinedResult<PlaybackConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3, T4>(this CombinedResult<T1, PlaybackConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3, T4>(this CombinedResult<T1, T2, PlaybackConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PlaybackConfigurationFactory, T4> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory, InnerPlaybackConfigurationAvailSuppressionFactory> WithAvailSuppression<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PlaybackConfigurationFactory> combinedResult, Action<Humidifier.MediaTailor.PlaybackConfigurationTypes.AvailSuppression> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailSuppression(combinedResult.T5, subFactoryAction));
}
