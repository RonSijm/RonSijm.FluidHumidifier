// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.MediaConnect;

public class FlowFactory(string resourceName = null, Action<Humidifier.MediaConnect.Flow> factoryAction = null) : ResourceFactory<Humidifier.MediaConnect.Flow>(resourceName)
{

    internal List<InnerFlowVpcInterfaceFactory> VpcInterfacesFactories { get; set; } = [];

    internal List<InnerFlowMediaStreamFactory> MediaStreamsFactories { get; set; } = [];

    internal InnerFlowSourceMonitoringConfigFactory SourceMonitoringConfigFactory { get; set; }

    internal InnerFlowFailoverConfigFactory SourceFailoverConfigFactory { get; set; }

    internal InnerFlowMaintenanceFactory MaintenanceFactory { get; set; }

    internal InnerFlowSourceFactory SourceFactory { get; set; }

    protected override Humidifier.MediaConnect.Flow Create()
    {
        var flowResult = CreateFlow();
        factoryAction?.Invoke(flowResult);

        return flowResult;
    }

    private Humidifier.MediaConnect.Flow CreateFlow()
    {
        var flowResult = new Humidifier.MediaConnect.Flow
        {
            GivenName = InputResourceName,
        };

        return flowResult;
    }
    public override void CreateChildren(Humidifier.MediaConnect.Flow result)
    {
        base.CreateChildren(result);

        result.VpcInterfaces = VpcInterfacesFactories.Any() ? VpcInterfacesFactories.Select(x => x.Build()).ToList() : null;
        result.MediaStreams = MediaStreamsFactories.Any() ? MediaStreamsFactories.Select(x => x.Build()).ToList() : null;
        result.SourceMonitoringConfig ??= SourceMonitoringConfigFactory?.Build();
        result.SourceFailoverConfig ??= SourceFailoverConfigFactory?.Build();
        result.Maintenance ??= MaintenanceFactory?.Build();
        result.Source ??= SourceFactory?.Build();
    }

} // End Of Class

public static class FlowFactoryExtensions
{
    public static CombinedResult<FlowFactory, InnerFlowVpcInterfaceFactory> WithVpcInterfaces(this FlowFactory parentFactory, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null)
    {
        var factory = new InnerFlowVpcInterfaceFactory(subFactoryAction);
        parentFactory.VpcInterfacesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<FlowFactory, InnerFlowMediaStreamFactory> WithMediaStreams(this FlowFactory parentFactory, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null)
    {
        var factory = new InnerFlowMediaStreamFactory(subFactoryAction);
        parentFactory.MediaStreamsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<FlowFactory, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig(this FlowFactory parentFactory, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null)
    {
        parentFactory.SourceMonitoringConfigFactory = new InnerFlowSourceMonitoringConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceMonitoringConfigFactory);
    }

    public static CombinedResult<FlowFactory, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig(this FlowFactory parentFactory, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null)
    {
        parentFactory.SourceFailoverConfigFactory = new InnerFlowFailoverConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceFailoverConfigFactory);
    }

    public static CombinedResult<FlowFactory, InnerFlowMaintenanceFactory> WithMaintenance(this FlowFactory parentFactory, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null)
    {
        parentFactory.MaintenanceFactory = new InnerFlowMaintenanceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MaintenanceFactory);
    }

    public static CombinedResult<FlowFactory, InnerFlowSourceFactory> WithSource(this FlowFactory parentFactory, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null)
    {
        parentFactory.SourceFactory = new InnerFlowSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceFactory);
    }

    public static CombinedResult<FlowFactory, T1, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1>(this CombinedResult<FlowFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1>(this CombinedResult<T1, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2>(this CombinedResult<FlowFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2>(this CombinedResult<T1, FlowFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2>(this CombinedResult<T1, T2, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3>(this CombinedResult<FlowFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3>(this CombinedResult<T1, FlowFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3>(this CombinedResult<T1, T2, FlowFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, T4, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3, T4>(this CombinedResult<FlowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, T4, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, FlowFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, T4, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, T4, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowFactory, InnerFlowVpcInterfaceFactory> WithVpcInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.VpcInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaces(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, InnerFlowMediaStreamFactory> WithMediaStreams<T1>(this CombinedResult<FlowFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, WithMediaStreams(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, InnerFlowMediaStreamFactory> WithMediaStreams<T1>(this CombinedResult<T1, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, WithMediaStreams(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2>(this CombinedResult<FlowFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2>(this CombinedResult<T1, FlowFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2>(this CombinedResult<T1, T2, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3>(this CombinedResult<FlowFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3>(this CombinedResult<T1, FlowFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3>(this CombinedResult<T1, T2, FlowFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, T4, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3, T4>(this CombinedResult<FlowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, T4, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3, T4>(this CombinedResult<T1, FlowFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, T4, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, T4, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowFactory, InnerFlowMediaStreamFactory> WithMediaStreams<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.MediaStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreams(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1>(this CombinedResult<FlowFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1>(this CombinedResult<T1, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2>(this CombinedResult<FlowFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2>(this CombinedResult<T1, FlowFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2>(this CombinedResult<T1, T2, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3>(this CombinedResult<FlowFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3>(this CombinedResult<T1, FlowFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3>(this CombinedResult<T1, T2, FlowFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, T4, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3, T4>(this CombinedResult<FlowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, T4, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3, T4>(this CombinedResult<T1, FlowFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, T4, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, T4, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowFactory, InnerFlowSourceMonitoringConfigFactory> WithSourceMonitoringConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.SourceMonitoringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceMonitoringConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1>(this CombinedResult<FlowFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1>(this CombinedResult<T1, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2>(this CombinedResult<FlowFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2>(this CombinedResult<T1, FlowFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2>(this CombinedResult<T1, T2, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3>(this CombinedResult<FlowFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3>(this CombinedResult<T1, FlowFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3>(this CombinedResult<T1, T2, FlowFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, T4, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3, T4>(this CombinedResult<FlowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, T4, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3, T4>(this CombinedResult<T1, FlowFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, T4, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, T4, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowFactory, InnerFlowFailoverConfigFactory> WithSourceFailoverConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.FailoverConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceFailoverConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, InnerFlowMaintenanceFactory> WithMaintenance<T1>(this CombinedResult<FlowFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, InnerFlowMaintenanceFactory> WithMaintenance<T1>(this CombinedResult<T1, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2>(this CombinedResult<FlowFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2>(this CombinedResult<T1, FlowFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2>(this CombinedResult<T1, T2, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<FlowFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<T1, FlowFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<T1, T2, FlowFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, T4, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<FlowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, T4, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, FlowFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, T4, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, T4, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowFactory, InnerFlowMaintenanceFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Maintenance> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, InnerFlowSourceFactory> WithSource<T1>(this CombinedResult<FlowFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, InnerFlowSourceFactory> WithSource<T1>(this CombinedResult<T1, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, InnerFlowSourceFactory> WithSource<T1, T2>(this CombinedResult<FlowFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, InnerFlowSourceFactory> WithSource<T1, T2>(this CombinedResult<T1, FlowFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, InnerFlowSourceFactory> WithSource<T1, T2>(this CombinedResult<T1, T2, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, InnerFlowSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<FlowFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, InnerFlowSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<T1, FlowFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, InnerFlowSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<T1, T2, FlowFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, InnerFlowSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowFactory, T1, T2, T3, T4, InnerFlowSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<FlowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowFactory, T2, T3, T4, InnerFlowSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, FlowFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowFactory, T3, T4, InnerFlowSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowFactory, T4, InnerFlowSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowFactory, InnerFlowSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowFactory> combinedResult, Action<Humidifier.MediaConnect.FlowTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T5, subFactoryAction));
}
