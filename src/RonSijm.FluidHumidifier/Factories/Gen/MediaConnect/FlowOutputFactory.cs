// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.MediaConnect;

public class FlowOutputFactory(string resourceName = null, Action<Humidifier.MediaConnect.FlowOutput> factoryAction = null) : ResourceFactory<Humidifier.MediaConnect.FlowOutput>(resourceName)
{

    internal List<InnerFlowOutputMediaStreamOutputConfigurationFactory> MediaStreamOutputConfigurationsFactories { get; set; } = [];

    internal InnerFlowOutputEncryptionFactory EncryptionFactory { get; set; }

    internal InnerFlowOutputVpcInterfaceAttachmentFactory VpcInterfaceAttachmentFactory { get; set; }

    protected override Humidifier.MediaConnect.FlowOutput Create()
    {
        var flowOutputResult = CreateFlowOutput();
        factoryAction?.Invoke(flowOutputResult);

        return flowOutputResult;
    }

    private Humidifier.MediaConnect.FlowOutput CreateFlowOutput()
    {
        var flowOutputResult = new Humidifier.MediaConnect.FlowOutput
        {
            GivenName = InputResourceName,
        };

        return flowOutputResult;
    }
    public override void CreateChildren(Humidifier.MediaConnect.FlowOutput result)
    {
        base.CreateChildren(result);

        result.MediaStreamOutputConfigurations = MediaStreamOutputConfigurationsFactories.Any() ? MediaStreamOutputConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.Encryption ??= EncryptionFactory?.Build();
        result.VpcInterfaceAttachment ??= VpcInterfaceAttachmentFactory?.Build();
    }

} // End Of Class

public static class FlowOutputFactoryExtensions
{
    public static CombinedResult<FlowOutputFactory, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations(this FlowOutputFactory parentFactory, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null)
    {
        var factory = new InnerFlowOutputMediaStreamOutputConfigurationFactory(subFactoryAction);
        parentFactory.MediaStreamOutputConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<FlowOutputFactory, InnerFlowOutputEncryptionFactory> WithEncryption(this FlowOutputFactory parentFactory, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null)
    {
        parentFactory.EncryptionFactory = new InnerFlowOutputEncryptionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EncryptionFactory);
    }

    public static CombinedResult<FlowOutputFactory, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment(this FlowOutputFactory parentFactory, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null)
    {
        parentFactory.VpcInterfaceAttachmentFactory = new InnerFlowOutputVpcInterfaceAttachmentFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VpcInterfaceAttachmentFactory);
    }

    public static CombinedResult<FlowOutputFactory, T1, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1>(this CombinedResult<FlowOutputFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1>(this CombinedResult<T1, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2>(this CombinedResult<FlowOutputFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2>(this CombinedResult<T1, FlowOutputFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2>(this CombinedResult<T1, T2, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, T3, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3>(this CombinedResult<FlowOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, T3, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3>(this CombinedResult<T1, FlowOutputFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, T3, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, FlowOutputFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowOutputFactory, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, T3, T4, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3, T4>(this CombinedResult<FlowOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, T3, T4, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, FlowOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, T3, T4, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowOutputFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowOutputFactory, T4, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowOutputFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowOutputFactory, InnerFlowOutputMediaStreamOutputConfigurationFactory> WithMediaStreamOutputConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.MediaStreamOutputConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaStreamOutputConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, InnerFlowOutputEncryptionFactory> WithEncryption<T1>(this CombinedResult<FlowOutputFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, InnerFlowOutputEncryptionFactory> WithEncryption<T1>(this CombinedResult<T1, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2>(this CombinedResult<FlowOutputFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2>(this CombinedResult<T1, FlowOutputFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2>(this CombinedResult<T1, T2, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, T3, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3>(this CombinedResult<FlowOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, T3, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3>(this CombinedResult<T1, FlowOutputFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, T3, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3>(this CombinedResult<T1, T2, FlowOutputFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowOutputFactory, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, T3, T4, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3, T4>(this CombinedResult<FlowOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, T3, T4, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3, T4>(this CombinedResult<T1, FlowOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, T3, T4, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowOutputFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowOutputFactory, T4, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowOutputFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowOutputFactory, InnerFlowOutputEncryptionFactory> WithEncryption<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.Encryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryption(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1>(this CombinedResult<FlowOutputFactory, T1> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1>(this CombinedResult<T1, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2>(this CombinedResult<FlowOutputFactory, T1, T2> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2>(this CombinedResult<T1, FlowOutputFactory, T2> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2>(this CombinedResult<T1, T2, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, T3, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3>(this CombinedResult<FlowOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, T3, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3>(this CombinedResult<T1, FlowOutputFactory, T2, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, T3, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3>(this CombinedResult<T1, T2, FlowOutputFactory, T3> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowOutputFactory, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3>(this CombinedResult<T1, T2, T3, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FlowOutputFactory, T1, T2, T3, T4, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3, T4>(this CombinedResult<FlowOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FlowOutputFactory, T2, T3, T4, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3, T4>(this CombinedResult<T1, FlowOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FlowOutputFactory, T3, T4, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3, T4>(this CombinedResult<T1, T2, FlowOutputFactory, T3, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FlowOutputFactory, T4, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FlowOutputFactory, T4> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FlowOutputFactory, InnerFlowOutputVpcInterfaceAttachmentFactory> WithVpcInterfaceAttachment<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FlowOutputFactory> combinedResult, Action<Humidifier.MediaConnect.FlowOutputTypes.VpcInterfaceAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcInterfaceAttachment(combinedResult.T5, subFactoryAction));
}
