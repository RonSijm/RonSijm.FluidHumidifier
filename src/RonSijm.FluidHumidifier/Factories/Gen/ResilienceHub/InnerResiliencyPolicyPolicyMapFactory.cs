// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ResilienceHub;

public class InnerResiliencyPolicyPolicyMapFactory(Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.PolicyMap> factoryAction = null) : SubResourceFactory<Humidifier.ResilienceHub.ResiliencyPolicyTypes.PolicyMap>
{

    internal InnerResiliencyPolicyFailurePolicyFactory AZFactory { get; set; }

    internal InnerResiliencyPolicyFailurePolicyFactory RegionFactory { get; set; }

    internal InnerResiliencyPolicyFailurePolicyFactory HardwareFactory { get; set; }

    internal InnerResiliencyPolicyFailurePolicyFactory SoftwareFactory { get; set; }

    protected override Humidifier.ResilienceHub.ResiliencyPolicyTypes.PolicyMap Create()
    {
        var policyMapResult = CreatePolicyMap();
        factoryAction?.Invoke(policyMapResult);

        return policyMapResult;
    }

    private Humidifier.ResilienceHub.ResiliencyPolicyTypes.PolicyMap CreatePolicyMap()
    {
        var policyMapResult = new Humidifier.ResilienceHub.ResiliencyPolicyTypes.PolicyMap();

        return policyMapResult;
    }
    public override void CreateChildren(Humidifier.ResilienceHub.ResiliencyPolicyTypes.PolicyMap result)
    {
        base.CreateChildren(result);

        result.AZ ??= AZFactory?.Build();
        result.Region ??= RegionFactory?.Build();
        result.Hardware ??= HardwareFactory?.Build();
        result.Software ??= SoftwareFactory?.Build();
    }

} // End Of Class

public static class InnerResiliencyPolicyPolicyMapFactoryExtensions
{
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithAZ(this InnerResiliencyPolicyPolicyMapFactory parentFactory, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null)
    {
        parentFactory.AZFactory = new InnerResiliencyPolicyFailurePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AZFactory);
    }

    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithRegion(this InnerResiliencyPolicyPolicyMapFactory parentFactory, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null)
    {
        parentFactory.RegionFactory = new InnerResiliencyPolicyFailurePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RegionFactory);
    }

    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithHardware(this InnerResiliencyPolicyPolicyMapFactory parentFactory, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null)
    {
        parentFactory.HardwareFactory = new InnerResiliencyPolicyFailurePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.HardwareFactory);
    }

    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware(this InnerResiliencyPolicyPolicyMapFactory parentFactory, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null)
    {
        parentFactory.SoftwareFactory = new InnerResiliencyPolicyFailurePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SoftwareFactory);
    }

    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithAZ(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithAZ(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3, T4>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3, T4>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithAZ<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAZ(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRegion(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRegion(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3, T4>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3, T4>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithRegion<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegion(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithHardware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithHardware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3, T4>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3, T4>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithHardware<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHardware(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithSoftware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithSoftware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3, T4>(this CombinedResult<InnerResiliencyPolicyPolicyMapFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3, T4>(this CombinedResult<T1, InnerResiliencyPolicyPolicyMapFactory, T2, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerResiliencyPolicyPolicyMapFactory, T3, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerResiliencyPolicyPolicyMapFactory, T4> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory, InnerResiliencyPolicyFailurePolicyFactory> WithSoftware<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerResiliencyPolicyPolicyMapFactory> combinedResult, Action<Humidifier.ResilienceHub.ResiliencyPolicyTypes.FailurePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSoftware(combinedResult.T5, subFactoryAction));
}
