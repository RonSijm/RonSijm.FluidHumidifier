// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.VerifiedPermissions;

public class InnerIdentitySourceOpenIdConnectConfigurationFactory(Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectConfiguration>
{

    internal InnerIdentitySourceOpenIdConnectTokenSelectionFactory TokenSelectionFactory { get; set; }

    internal InnerIdentitySourceOpenIdConnectGroupConfigurationFactory GroupConfigurationFactory { get; set; }

    protected override Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectConfiguration Create()
    {
        var openIdConnectConfigurationResult = CreateOpenIdConnectConfiguration();
        factoryAction?.Invoke(openIdConnectConfigurationResult);

        return openIdConnectConfigurationResult;
    }

    private Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectConfiguration CreateOpenIdConnectConfiguration()
    {
        var openIdConnectConfigurationResult = new Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectConfiguration();

        return openIdConnectConfigurationResult;
    }
    public override void CreateChildren(Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectConfiguration result)
    {
        base.CreateChildren(result);

        result.TokenSelection ??= TokenSelectionFactory?.Build();
        result.GroupConfiguration ??= GroupConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerIdentitySourceOpenIdConnectConfigurationFactoryExtensions
{
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection(this InnerIdentitySourceOpenIdConnectConfigurationFactory parentFactory, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null)
    {
        parentFactory.TokenSelectionFactory = new InnerIdentitySourceOpenIdConnectTokenSelectionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TokenSelectionFactory);
    }

    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration(this InnerIdentitySourceOpenIdConnectConfigurationFactory parentFactory, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null)
    {
        parentFactory.GroupConfigurationFactory = new InnerIdentitySourceOpenIdConnectGroupConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.GroupConfigurationFactory);
    }

    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, WithTokenSelection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, WithTokenSelection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2>(this CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3>(this CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3, T4, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3, T4>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3, T4, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3, T4>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3, T4, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory, T4, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectTokenSelectionFactory> WithTokenSelection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectTokenSelection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTokenSelection(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3, T4, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerIdentitySourceOpenIdConnectConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3, T4, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerIdentitySourceOpenIdConnectConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3, T4, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerIdentitySourceOpenIdConnectConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory, T4, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerIdentitySourceOpenIdConnectConfigurationFactory, T4> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerIdentitySourceOpenIdConnectConfigurationFactory, InnerIdentitySourceOpenIdConnectGroupConfigurationFactory> WithGroupConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerIdentitySourceOpenIdConnectConfigurationFactory> combinedResult, Action<Humidifier.VerifiedPermissions.IdentitySourceTypes.OpenIdConnectGroupConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGroupConfiguration(combinedResult.T5, subFactoryAction));
}
