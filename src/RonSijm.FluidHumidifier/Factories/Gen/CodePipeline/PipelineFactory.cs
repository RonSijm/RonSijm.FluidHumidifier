// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CodePipeline;

public class PipelineFactory(string resourceName = null, Action<Humidifier.CodePipeline.Pipeline> factoryAction = null) : ResourceFactory<Humidifier.CodePipeline.Pipeline>(resourceName)
{

    internal List<InnerPipelineVariableDeclarationFactory> VariablesFactories { get; set; } = [];

    internal List<InnerPipelineArtifactStoreMapFactory> ArtifactStoresFactories { get; set; } = [];

    internal List<InnerPipelineStageTransitionFactory> DisableInboundStageTransitionsFactories { get; set; } = [];

    internal List<InnerPipelineStageDeclarationFactory> StagesFactories { get; set; } = [];

    internal List<InnerPipelinePipelineTriggerDeclarationFactory> TriggersFactories { get; set; } = [];

    internal InnerPipelineArtifactStoreFactory ArtifactStoreFactory { get; set; }

    protected override Humidifier.CodePipeline.Pipeline Create()
    {
        var pipelineResult = CreatePipeline();
        factoryAction?.Invoke(pipelineResult);

        return pipelineResult;
    }

    private Humidifier.CodePipeline.Pipeline CreatePipeline()
    {
        var pipelineResult = new Humidifier.CodePipeline.Pipeline
        {
            GivenName = InputResourceName,
        };

        return pipelineResult;
    }
    public override void CreateChildren(Humidifier.CodePipeline.Pipeline result)
    {
        base.CreateChildren(result);

        result.Variables = VariablesFactories.Any() ? VariablesFactories.Select(x => x.Build()).ToList() : null;
        result.ArtifactStores = ArtifactStoresFactories.Any() ? ArtifactStoresFactories.Select(x => x.Build()).ToList() : null;
        result.DisableInboundStageTransitions = DisableInboundStageTransitionsFactories.Any() ? DisableInboundStageTransitionsFactories.Select(x => x.Build()).ToList() : null;
        result.Stages = StagesFactories.Any() ? StagesFactories.Select(x => x.Build()).ToList() : null;
        result.Triggers = TriggersFactories.Any() ? TriggersFactories.Select(x => x.Build()).ToList() : null;
        result.ArtifactStore ??= ArtifactStoreFactory?.Build();
    }

} // End Of Class

public static class PipelineFactoryExtensions
{
    public static CombinedResult<PipelineFactory, InnerPipelineVariableDeclarationFactory> WithVariables(this PipelineFactory parentFactory, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null)
    {
        var factory = new InnerPipelineVariableDeclarationFactory(subFactoryAction);
        parentFactory.VariablesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<PipelineFactory, InnerPipelineArtifactStoreMapFactory> WithArtifactStores(this PipelineFactory parentFactory, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null)
    {
        var factory = new InnerPipelineArtifactStoreMapFactory(subFactoryAction);
        parentFactory.ArtifactStoresFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<PipelineFactory, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions(this PipelineFactory parentFactory, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null)
    {
        var factory = new InnerPipelineStageTransitionFactory(subFactoryAction);
        parentFactory.DisableInboundStageTransitionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<PipelineFactory, InnerPipelineStageDeclarationFactory> WithStages(this PipelineFactory parentFactory, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null)
    {
        var factory = new InnerPipelineStageDeclarationFactory(subFactoryAction);
        parentFactory.StagesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<PipelineFactory, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers(this PipelineFactory parentFactory, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null)
    {
        var factory = new InnerPipelinePipelineTriggerDeclarationFactory(subFactoryAction);
        parentFactory.TriggersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<PipelineFactory, InnerPipelineArtifactStoreFactory> WithArtifactStore(this PipelineFactory parentFactory, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null)
    {
        parentFactory.ArtifactStoreFactory = new InnerPipelineArtifactStoreFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ArtifactStoreFactory);
    }

    public static CombinedResult<PipelineFactory, T1, InnerPipelineVariableDeclarationFactory> WithVariables<T1>(this CombinedResult<PipelineFactory, T1> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVariables(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, InnerPipelineVariableDeclarationFactory> WithVariables<T1>(this CombinedResult<T1, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVariables(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2>(this CombinedResult<PipelineFactory, T1, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2>(this CombinedResult<T1, PipelineFactory, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2>(this CombinedResult<T1, T2, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3>(this CombinedResult<PipelineFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3>(this CombinedResult<T1, PipelineFactory, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3>(this CombinedResult<T1, T2, PipelineFactory, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, T4, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3, T4>(this CombinedResult<PipelineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, T4, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3, T4>(this CombinedResult<T1, PipelineFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, T4, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipelineFactory, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, T4, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipelineFactory, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipelineFactory, InnerPipelineVariableDeclarationFactory> WithVariables<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.VariableDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVariables(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1>(this CombinedResult<PipelineFactory, T1> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, WithArtifactStores(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1>(this CombinedResult<T1, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, WithArtifactStores(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2>(this CombinedResult<PipelineFactory, T1, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2>(this CombinedResult<T1, PipelineFactory, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2>(this CombinedResult<T1, T2, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3>(this CombinedResult<PipelineFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3>(this CombinedResult<T1, PipelineFactory, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3>(this CombinedResult<T1, T2, PipelineFactory, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, T4, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3, T4>(this CombinedResult<PipelineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, T4, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3, T4>(this CombinedResult<T1, PipelineFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, T4, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipelineFactory, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, T4, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipelineFactory, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipelineFactory, InnerPipelineArtifactStoreMapFactory> WithArtifactStores<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStoreMap> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStores(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1>(this CombinedResult<PipelineFactory, T1> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1>(this CombinedResult<T1, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2>(this CombinedResult<PipelineFactory, T1, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2>(this CombinedResult<T1, PipelineFactory, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2>(this CombinedResult<T1, T2, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3>(this CombinedResult<PipelineFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3>(this CombinedResult<T1, PipelineFactory, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3>(this CombinedResult<T1, T2, PipelineFactory, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, T4, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3, T4>(this CombinedResult<PipelineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, T4, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3, T4>(this CombinedResult<T1, PipelineFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, T4, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipelineFactory, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, T4, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipelineFactory, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipelineFactory, InnerPipelineStageTransitionFactory> WithDisableInboundStageTransitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageTransition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDisableInboundStageTransitions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, InnerPipelineStageDeclarationFactory> WithStages<T1>(this CombinedResult<PipelineFactory, T1> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, WithStages(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, InnerPipelineStageDeclarationFactory> WithStages<T1>(this CombinedResult<T1, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, WithStages(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, InnerPipelineStageDeclarationFactory> WithStages<T1, T2>(this CombinedResult<PipelineFactory, T1, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, InnerPipelineStageDeclarationFactory> WithStages<T1, T2>(this CombinedResult<T1, PipelineFactory, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, InnerPipelineStageDeclarationFactory> WithStages<T1, T2>(this CombinedResult<T1, T2, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3>(this CombinedResult<PipelineFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3>(this CombinedResult<T1, PipelineFactory, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3>(this CombinedResult<T1, T2, PipelineFactory, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, T4, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3, T4>(this CombinedResult<PipelineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, T4, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3, T4>(this CombinedResult<T1, PipelineFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, T4, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipelineFactory, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, T4, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipelineFactory, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipelineFactory, InnerPipelineStageDeclarationFactory> WithStages<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.StageDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStages(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1>(this CombinedResult<PipelineFactory, T1> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1>(this CombinedResult<T1, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2>(this CombinedResult<PipelineFactory, T1, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2>(this CombinedResult<T1, PipelineFactory, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2>(this CombinedResult<T1, T2, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3>(this CombinedResult<PipelineFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3>(this CombinedResult<T1, PipelineFactory, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3>(this CombinedResult<T1, T2, PipelineFactory, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, T4, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<PipelineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, T4, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, PipelineFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, T4, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipelineFactory, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, T4, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipelineFactory, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipelineFactory, InnerPipelinePipelineTriggerDeclarationFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.PipelineTriggerDeclaration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1>(this CombinedResult<PipelineFactory, T1> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, WithArtifactStore(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1>(this CombinedResult<T1, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, WithArtifactStore(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2>(this CombinedResult<PipelineFactory, T1, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2>(this CombinedResult<T1, PipelineFactory, T2> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2>(this CombinedResult<T1, T2, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3>(this CombinedResult<PipelineFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3>(this CombinedResult<T1, PipelineFactory, T2, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3>(this CombinedResult<T1, T2, PipelineFactory, T3> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3>(this CombinedResult<T1, T2, T3, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PipelineFactory, T1, T2, T3, T4, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3, T4>(this CombinedResult<PipelineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PipelineFactory, T2, T3, T4, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3, T4>(this CombinedResult<T1, PipelineFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PipelineFactory, T3, T4, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3, T4>(this CombinedResult<T1, T2, PipelineFactory, T3, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PipelineFactory, T4, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PipelineFactory, T4> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PipelineFactory, InnerPipelineArtifactStoreFactory> WithArtifactStore<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PipelineFactory> combinedResult, Action<Humidifier.CodePipeline.PipelineTypes.ArtifactStore> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifactStore(combinedResult.T5, subFactoryAction));
}
