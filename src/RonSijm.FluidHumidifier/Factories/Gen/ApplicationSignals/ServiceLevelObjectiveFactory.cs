// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ApplicationSignals;

public class ServiceLevelObjectiveFactory(string resourceName = null, Action<Humidifier.ApplicationSignals.ServiceLevelObjective> factoryAction = null) : ResourceFactory<Humidifier.ApplicationSignals.ServiceLevelObjective>(resourceName)
{

    internal InnerServiceLevelObjectiveSliFactory SliFactory { get; set; }

    internal InnerServiceLevelObjectiveGoalFactory GoalFactory { get; set; }

    internal InnerServiceLevelObjectiveRequestBasedSliFactory RequestBasedSliFactory { get; set; }

    protected override Humidifier.ApplicationSignals.ServiceLevelObjective Create()
    {
        var serviceLevelObjectiveResult = CreateServiceLevelObjective();
        factoryAction?.Invoke(serviceLevelObjectiveResult);

        return serviceLevelObjectiveResult;
    }

    private Humidifier.ApplicationSignals.ServiceLevelObjective CreateServiceLevelObjective()
    {
        var serviceLevelObjectiveResult = new Humidifier.ApplicationSignals.ServiceLevelObjective
        {
            GivenName = InputResourceName,
        };

        return serviceLevelObjectiveResult;
    }
    public override void CreateChildren(Humidifier.ApplicationSignals.ServiceLevelObjective result)
    {
        base.CreateChildren(result);

        result.Sli ??= SliFactory?.Build();
        result.Goal ??= GoalFactory?.Build();
        result.RequestBasedSli ??= RequestBasedSliFactory?.Build();
    }

} // End Of Class

public static class ServiceLevelObjectiveFactoryExtensions
{
    public static CombinedResult<ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveSliFactory> WithSli(this ServiceLevelObjectiveFactory parentFactory, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null)
    {
        parentFactory.SliFactory = new InnerServiceLevelObjectiveSliFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SliFactory);
    }

    public static CombinedResult<ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveGoalFactory> WithGoal(this ServiceLevelObjectiveFactory parentFactory, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null)
    {
        parentFactory.GoalFactory = new InnerServiceLevelObjectiveGoalFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.GoalFactory);
    }

    public static CombinedResult<ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli(this ServiceLevelObjectiveFactory parentFactory, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null)
    {
        parentFactory.RequestBasedSliFactory = new InnerServiceLevelObjectiveRequestBasedSliFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RequestBasedSliFactory);
    }

    public static CombinedResult<ServiceLevelObjectiveFactory, T1, InnerServiceLevelObjectiveSliFactory> WithSli<T1>(this CombinedResult<ServiceLevelObjectiveFactory, T1> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, WithSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveSliFactory> WithSli<T1>(this CombinedResult<T1, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, WithSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, T4, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3, T4>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, T4, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3, T4>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, T4, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, T4, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveSliFactory> WithSli<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Sli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSli(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1>(this CombinedResult<ServiceLevelObjectiveFactory, T1> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, WithGoal(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1>(this CombinedResult<T1, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, WithGoal(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, T4, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3, T4>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, T4, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3, T4>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, T4, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, T4, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveGoalFactory> WithGoal<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.Goal> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGoal(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1>(this CombinedResult<ServiceLevelObjectiveFactory, T1> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1>(this CombinedResult<T1, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, T4, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3, T4>(this CombinedResult<ServiceLevelObjectiveFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, T4, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3, T4>(this CombinedResult<T1, ServiceLevelObjectiveFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, T4, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceLevelObjectiveFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, T4, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceLevelObjectiveFactory, T4> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceLevelObjectiveFactory, InnerServiceLevelObjectiveRequestBasedSliFactory> WithRequestBasedSli<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceLevelObjectiveFactory> combinedResult, Action<Humidifier.ApplicationSignals.ServiceLevelObjectiveTypes.RequestBasedSli> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRequestBasedSli(combinedResult.T5, subFactoryAction));
}
