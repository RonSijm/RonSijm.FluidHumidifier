// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Glue;

public class InnerPartitionStorageDescriptorFactory(Action<Humidifier.Glue.PartitionTypes.StorageDescriptor> factoryAction = null) : SubResourceFactory<Humidifier.Glue.PartitionTypes.StorageDescriptor>
{

    internal InnerPartitionSerdeInfoFactory SerdeInfoFactory { get; set; }

    internal InnerPartitionSchemaReferenceFactory SchemaReferenceFactory { get; set; }

    internal InnerPartitionSkewedInfoFactory SkewedInfoFactory { get; set; }

    protected override Humidifier.Glue.PartitionTypes.StorageDescriptor Create()
    {
        var storageDescriptorResult = CreateStorageDescriptor();
        factoryAction?.Invoke(storageDescriptorResult);

        return storageDescriptorResult;
    }

    private Humidifier.Glue.PartitionTypes.StorageDescriptor CreateStorageDescriptor()
    {
        var storageDescriptorResult = new Humidifier.Glue.PartitionTypes.StorageDescriptor();

        return storageDescriptorResult;
    }
    public override void CreateChildren(Humidifier.Glue.PartitionTypes.StorageDescriptor result)
    {
        base.CreateChildren(result);

        result.SerdeInfo ??= SerdeInfoFactory?.Build();
        result.SchemaReference ??= SchemaReferenceFactory?.Build();
        result.SkewedInfo ??= SkewedInfoFactory?.Build();
    }

} // End Of Class

public static class InnerPartitionStorageDescriptorFactoryExtensions
{
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, InnerPartitionSerdeInfoFactory> WithSerdeInfo(this InnerPartitionStorageDescriptorFactory parentFactory, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null)
    {
        parentFactory.SerdeInfoFactory = new InnerPartitionSerdeInfoFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SerdeInfoFactory);
    }

    public static CombinedResult<InnerPartitionStorageDescriptorFactory, InnerPartitionSchemaReferenceFactory> WithSchemaReference(this InnerPartitionStorageDescriptorFactory parentFactory, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null)
    {
        parentFactory.SchemaReferenceFactory = new InnerPartitionSchemaReferenceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SchemaReferenceFactory);
    }

    public static CombinedResult<InnerPartitionStorageDescriptorFactory, InnerPartitionSkewedInfoFactory> WithSkewedInfo(this InnerPartitionStorageDescriptorFactory parentFactory, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null)
    {
        parentFactory.SkewedInfoFactory = new InnerPartitionSkewedInfoFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SkewedInfoFactory);
    }

    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithSerdeInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithSerdeInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, T4, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3, T4>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, T4, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3, T4>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, T4, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, T4, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPartitionStorageDescriptorFactory, InnerPartitionSerdeInfoFactory> WithSerdeInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SerdeInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSerdeInfo(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, WithSchemaReference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, WithSchemaReference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, T4, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3, T4>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, T4, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3, T4>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, T4, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, T4, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPartitionStorageDescriptorFactory, InnerPartitionSchemaReferenceFactory> WithSchemaReference<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SchemaReference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchemaReference(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithSkewedInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithSkewedInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, T4, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3, T4>(this CombinedResult<InnerPartitionStorageDescriptorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, T4, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3, T4>(this CombinedResult<T1, InnerPartitionStorageDescriptorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, T4, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPartitionStorageDescriptorFactory, T3, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, T4, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPartitionStorageDescriptorFactory, T4> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPartitionStorageDescriptorFactory, InnerPartitionSkewedInfoFactory> WithSkewedInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPartitionStorageDescriptorFactory> combinedResult, Action<Humidifier.Glue.PartitionTypes.SkewedInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSkewedInfo(combinedResult.T5, subFactoryAction));
}
