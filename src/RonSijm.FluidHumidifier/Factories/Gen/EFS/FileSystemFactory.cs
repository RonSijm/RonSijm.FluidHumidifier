// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EFS;

public class FileSystemFactory(string resourceName = null, Action<Humidifier.EFS.FileSystem> factoryAction = null) : ResourceFactory<Humidifier.EFS.FileSystem>(resourceName)
{

    internal List<InnerFileSystemLifecyclePolicyFactory> LifecyclePoliciesFactories { get; set; } = [];

    internal List<InnerFileSystemElasticFileSystemTagFactory> FileSystemTagsFactories { get; set; } = [];

    internal InnerFileSystemFileSystemProtectionFactory FileSystemProtectionFactory { get; set; }

    internal InnerFileSystemReplicationConfigurationFactory ReplicationConfigurationFactory { get; set; }

    internal InnerFileSystemBackupPolicyFactory BackupPolicyFactory { get; set; }

    protected override Humidifier.EFS.FileSystem Create()
    {
        var fileSystemResult = CreateFileSystem();
        factoryAction?.Invoke(fileSystemResult);

        return fileSystemResult;
    }

    private Humidifier.EFS.FileSystem CreateFileSystem()
    {
        var fileSystemResult = new Humidifier.EFS.FileSystem
        {
            GivenName = InputResourceName,
        };

        return fileSystemResult;
    }
    public override void CreateChildren(Humidifier.EFS.FileSystem result)
    {
        base.CreateChildren(result);

        result.LifecyclePolicies = LifecyclePoliciesFactories.Any() ? LifecyclePoliciesFactories.Select(x => x.Build()).ToList() : null;
        result.FileSystemTags = FileSystemTagsFactories.Any() ? FileSystemTagsFactories.Select(x => x.Build()).ToList() : null;
        result.FileSystemProtection ??= FileSystemProtectionFactory?.Build();
        result.ReplicationConfiguration ??= ReplicationConfigurationFactory?.Build();
        result.BackupPolicy ??= BackupPolicyFactory?.Build();
    }

} // End Of Class

public static class FileSystemFactoryExtensions
{
    public static CombinedResult<FileSystemFactory, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies(this FileSystemFactory parentFactory, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null)
    {
        var factory = new InnerFileSystemLifecyclePolicyFactory(subFactoryAction);
        parentFactory.LifecyclePoliciesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<FileSystemFactory, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags(this FileSystemFactory parentFactory, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null)
    {
        var factory = new InnerFileSystemElasticFileSystemTagFactory(subFactoryAction);
        parentFactory.FileSystemTagsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<FileSystemFactory, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection(this FileSystemFactory parentFactory, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null)
    {
        parentFactory.FileSystemProtectionFactory = new InnerFileSystemFileSystemProtectionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FileSystemProtectionFactory);
    }

    public static CombinedResult<FileSystemFactory, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration(this FileSystemFactory parentFactory, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null)
    {
        parentFactory.ReplicationConfigurationFactory = new InnerFileSystemReplicationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ReplicationConfigurationFactory);
    }

    public static CombinedResult<FileSystemFactory, InnerFileSystemBackupPolicyFactory> WithBackupPolicy(this FileSystemFactory parentFactory, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null)
    {
        parentFactory.BackupPolicyFactory = new InnerFileSystemBackupPolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BackupPolicyFactory);
    }

    public static CombinedResult<FileSystemFactory, T1, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1>(this CombinedResult<FileSystemFactory, T1> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1>(this CombinedResult<T1, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2>(this CombinedResult<FileSystemFactory, T1, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2>(this CombinedResult<T1, FileSystemFactory, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2>(this CombinedResult<T1, T2, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3>(this CombinedResult<FileSystemFactory, T1, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3>(this CombinedResult<T1, FileSystemFactory, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3>(this CombinedResult<T1, T2, FileSystemFactory, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3>(this CombinedResult<T1, T2, T3, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, T4, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3, T4>(this CombinedResult<FileSystemFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, T4, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3, T4>(this CombinedResult<T1, FileSystemFactory, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, T4, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3, T4>(this CombinedResult<T1, T2, FileSystemFactory, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, T4, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FileSystemFactory, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FileSystemFactory, InnerFileSystemLifecyclePolicyFactory> WithLifecyclePolicies<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.LifecyclePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecyclePolicies(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1>(this CombinedResult<FileSystemFactory, T1> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileSystemTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1>(this CombinedResult<T1, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileSystemTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2>(this CombinedResult<FileSystemFactory, T1, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2>(this CombinedResult<T1, FileSystemFactory, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2>(this CombinedResult<T1, T2, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3>(this CombinedResult<FileSystemFactory, T1, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3>(this CombinedResult<T1, FileSystemFactory, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3>(this CombinedResult<T1, T2, FileSystemFactory, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3>(this CombinedResult<T1, T2, T3, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, T4, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3, T4>(this CombinedResult<FileSystemFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, T4, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3, T4>(this CombinedResult<T1, FileSystemFactory, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, T4, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, FileSystemFactory, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, T4, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FileSystemFactory, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FileSystemFactory, InnerFileSystemElasticFileSystemTagFactory> WithFileSystemTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ElasticFileSystemTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemTags(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1>(this CombinedResult<FileSystemFactory, T1> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1>(this CombinedResult<T1, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2>(this CombinedResult<FileSystemFactory, T1, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2>(this CombinedResult<T1, FileSystemFactory, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2>(this CombinedResult<T1, T2, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3>(this CombinedResult<FileSystemFactory, T1, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3>(this CombinedResult<T1, FileSystemFactory, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3>(this CombinedResult<T1, T2, FileSystemFactory, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3>(this CombinedResult<T1, T2, T3, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, T4, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3, T4>(this CombinedResult<FileSystemFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, T4, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3, T4>(this CombinedResult<T1, FileSystemFactory, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, T4, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3, T4>(this CombinedResult<T1, T2, FileSystemFactory, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, T4, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FileSystemFactory, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FileSystemFactory, InnerFileSystemFileSystemProtectionFactory> WithFileSystemProtection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.FileSystemProtection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemProtection(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1>(this CombinedResult<FileSystemFactory, T1> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1>(this CombinedResult<T1, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2>(this CombinedResult<FileSystemFactory, T1, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2>(this CombinedResult<T1, FileSystemFactory, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2>(this CombinedResult<T1, T2, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<FileSystemFactory, T1, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<T1, FileSystemFactory, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, FileSystemFactory, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, T4, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<FileSystemFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, T4, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, FileSystemFactory, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, T4, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, FileSystemFactory, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, T4, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FileSystemFactory, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FileSystemFactory, InnerFileSystemReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1>(this CombinedResult<FileSystemFactory, T1> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithBackupPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1>(this CombinedResult<T1, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithBackupPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2>(this CombinedResult<FileSystemFactory, T1, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2>(this CombinedResult<T1, FileSystemFactory, T2> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2>(this CombinedResult<T1, T2, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3>(this CombinedResult<FileSystemFactory, T1, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3>(this CombinedResult<T1, FileSystemFactory, T2, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3>(this CombinedResult<T1, T2, FileSystemFactory, T3> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FileSystemFactory, T1, T2, T3, T4, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3, T4>(this CombinedResult<FileSystemFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FileSystemFactory, T2, T3, T4, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3, T4>(this CombinedResult<T1, FileSystemFactory, T2, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FileSystemFactory, T3, T4, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, FileSystemFactory, T3, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FileSystemFactory, T4, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FileSystemFactory, T4> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FileSystemFactory, InnerFileSystemBackupPolicyFactory> WithBackupPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FileSystemFactory> combinedResult, Action<Humidifier.EFS.FileSystemTypes.BackupPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBackupPolicy(combinedResult.T5, subFactoryAction));
}
