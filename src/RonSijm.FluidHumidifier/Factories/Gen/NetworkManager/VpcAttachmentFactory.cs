// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.NetworkManager;

public class VpcAttachmentFactory(string resourceName = null, Action<Humidifier.NetworkManager.VpcAttachment> factoryAction = null) : ResourceFactory<Humidifier.NetworkManager.VpcAttachment>(resourceName)
{

    internal InnerVpcAttachmentProposedSegmentChangeFactory ProposedSegmentChangeFactory { get; set; }

    internal InnerVpcAttachmentVpcOptionsFactory OptionsFactory { get; set; }

    internal InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory ProposedNetworkFunctionGroupChangeFactory { get; set; }

    protected override Humidifier.NetworkManager.VpcAttachment Create()
    {
        var vpcAttachmentResult = CreateVpcAttachment();
        factoryAction?.Invoke(vpcAttachmentResult);

        return vpcAttachmentResult;
    }

    private Humidifier.NetworkManager.VpcAttachment CreateVpcAttachment()
    {
        var vpcAttachmentResult = new Humidifier.NetworkManager.VpcAttachment
        {
            GivenName = InputResourceName,
        };

        return vpcAttachmentResult;
    }
    public override void CreateChildren(Humidifier.NetworkManager.VpcAttachment result)
    {
        base.CreateChildren(result);

        result.ProposedSegmentChange ??= ProposedSegmentChangeFactory?.Build();
        result.Options ??= OptionsFactory?.Build();
        result.ProposedNetworkFunctionGroupChange ??= ProposedNetworkFunctionGroupChangeFactory?.Build();
    }

} // End Of Class

public static class VpcAttachmentFactoryExtensions
{
    public static CombinedResult<VpcAttachmentFactory, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange(this VpcAttachmentFactory parentFactory, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null)
    {
        parentFactory.ProposedSegmentChangeFactory = new InnerVpcAttachmentProposedSegmentChangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProposedSegmentChangeFactory);
    }

    public static CombinedResult<VpcAttachmentFactory, InnerVpcAttachmentVpcOptionsFactory> WithOptions(this VpcAttachmentFactory parentFactory, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null)
    {
        parentFactory.OptionsFactory = new InnerVpcAttachmentVpcOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OptionsFactory);
    }

    public static CombinedResult<VpcAttachmentFactory, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange(this VpcAttachmentFactory parentFactory, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null)
    {
        parentFactory.ProposedNetworkFunctionGroupChangeFactory = new InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProposedNetworkFunctionGroupChangeFactory);
    }

    public static CombinedResult<VpcAttachmentFactory, T1, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1>(this CombinedResult<VpcAttachmentFactory, T1> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1>(this CombinedResult<T1, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2>(this CombinedResult<VpcAttachmentFactory, T1, T2> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2>(this CombinedResult<T1, VpcAttachmentFactory, T2> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2>(this CombinedResult<T1, T2, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, T3, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<VpcAttachmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, T3, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<T1, VpcAttachmentFactory, T2, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, T3, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<T1, T2, VpcAttachmentFactory, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VpcAttachmentFactory, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<T1, T2, T3, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, T3, T4, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<VpcAttachmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, T3, T4, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, VpcAttachmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, T3, T4, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, VpcAttachmentFactory, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VpcAttachmentFactory, T4, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, VpcAttachmentFactory, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, VpcAttachmentFactory, InnerVpcAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T5, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1>(this CombinedResult<VpcAttachmentFactory, T1> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1>(this CombinedResult<T1, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2>(this CombinedResult<VpcAttachmentFactory, T1, T2> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2>(this CombinedResult<T1, VpcAttachmentFactory, T2> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2>(this CombinedResult<T1, T2, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, T3, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<VpcAttachmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, T3, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<T1, VpcAttachmentFactory, T2, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, T3, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<T1, T2, VpcAttachmentFactory, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VpcAttachmentFactory, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, T3, T4, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<VpcAttachmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, T3, T4, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, VpcAttachmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, T3, T4, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, VpcAttachmentFactory, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VpcAttachmentFactory, T4, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, VpcAttachmentFactory, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, VpcAttachmentFactory, InnerVpcAttachmentVpcOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.VpcOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1>(this CombinedResult<VpcAttachmentFactory, T1> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1>(this CombinedResult<T1, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2>(this CombinedResult<VpcAttachmentFactory, T1, T2> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2>(this CombinedResult<T1, VpcAttachmentFactory, T2> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2>(this CombinedResult<T1, T2, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, T3, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<VpcAttachmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, T3, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<T1, VpcAttachmentFactory, T2, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, T3, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<T1, T2, VpcAttachmentFactory, T3> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VpcAttachmentFactory, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<T1, T2, T3, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<VpcAttachmentFactory, T1, T2, T3, T4, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<VpcAttachmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VpcAttachmentFactory, T2, T3, T4, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, VpcAttachmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VpcAttachmentFactory, T3, T4, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, VpcAttachmentFactory, T3, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VpcAttachmentFactory, T4, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, VpcAttachmentFactory, T4> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, VpcAttachmentFactory, InnerVpcAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, VpcAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.VpcAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T5, subFactoryAction));
}
