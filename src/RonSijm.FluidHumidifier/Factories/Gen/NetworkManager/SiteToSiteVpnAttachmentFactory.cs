// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.NetworkManager;

public class SiteToSiteVpnAttachmentFactory(string resourceName = null, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachment> factoryAction = null) : ResourceFactory<Humidifier.NetworkManager.SiteToSiteVpnAttachment>(resourceName)
{

    internal InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory ProposedSegmentChangeFactory { get; set; }

    internal InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory ProposedNetworkFunctionGroupChangeFactory { get; set; }

    protected override Humidifier.NetworkManager.SiteToSiteVpnAttachment Create()
    {
        var siteToSiteVpnAttachmentResult = CreateSiteToSiteVpnAttachment();
        factoryAction?.Invoke(siteToSiteVpnAttachmentResult);

        return siteToSiteVpnAttachmentResult;
    }

    private Humidifier.NetworkManager.SiteToSiteVpnAttachment CreateSiteToSiteVpnAttachment()
    {
        var siteToSiteVpnAttachmentResult = new Humidifier.NetworkManager.SiteToSiteVpnAttachment
        {
            GivenName = InputResourceName,
        };

        return siteToSiteVpnAttachmentResult;
    }
    public override void CreateChildren(Humidifier.NetworkManager.SiteToSiteVpnAttachment result)
    {
        base.CreateChildren(result);

        result.ProposedSegmentChange ??= ProposedSegmentChangeFactory?.Build();
        result.ProposedNetworkFunctionGroupChange ??= ProposedNetworkFunctionGroupChangeFactory?.Build();
    }

} // End Of Class

public static class SiteToSiteVpnAttachmentFactoryExtensions
{
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange(this SiteToSiteVpnAttachmentFactory parentFactory, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null)
    {
        parentFactory.ProposedSegmentChangeFactory = new InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProposedSegmentChangeFactory);
    }

    public static CombinedResult<SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange(this SiteToSiteVpnAttachmentFactory parentFactory, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null)
    {
        parentFactory.ProposedNetworkFunctionGroupChangeFactory = new InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProposedNetworkFunctionGroupChangeFactory);
    }

    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2>(this CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3>(this CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3, T4, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3, T4, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3, T4, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory, T4, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedSegmentChangeFactory> WithProposedSegmentChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedSegmentChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedSegmentChange(combinedResult.T5, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2>(this CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3>(this CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3, T4, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<SiteToSiteVpnAttachmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3, T4, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, SiteToSiteVpnAttachmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3, T4, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, SiteToSiteVpnAttachmentFactory, T3, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory, T4, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, SiteToSiteVpnAttachmentFactory, T4> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, SiteToSiteVpnAttachmentFactory, InnerSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeFactory> WithProposedNetworkFunctionGroupChange<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, SiteToSiteVpnAttachmentFactory> combinedResult, Action<Humidifier.NetworkManager.SiteToSiteVpnAttachmentTypes.ProposedNetworkFunctionGroupChange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProposedNetworkFunctionGroupChange(combinedResult.T5, subFactoryAction));
}
