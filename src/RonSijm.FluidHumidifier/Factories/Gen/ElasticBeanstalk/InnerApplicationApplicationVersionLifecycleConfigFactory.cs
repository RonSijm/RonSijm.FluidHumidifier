// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ElasticBeanstalk;

public class InnerApplicationApplicationVersionLifecycleConfigFactory(Action<Humidifier.ElasticBeanstalk.ApplicationTypes.ApplicationVersionLifecycleConfig> factoryAction = null) : SubResourceFactory<Humidifier.ElasticBeanstalk.ApplicationTypes.ApplicationVersionLifecycleConfig>
{

    internal InnerApplicationMaxCountRuleFactory MaxCountRuleFactory { get; set; }

    internal InnerApplicationMaxAgeRuleFactory MaxAgeRuleFactory { get; set; }

    protected override Humidifier.ElasticBeanstalk.ApplicationTypes.ApplicationVersionLifecycleConfig Create()
    {
        var applicationVersionLifecycleConfigResult = CreateApplicationVersionLifecycleConfig();
        factoryAction?.Invoke(applicationVersionLifecycleConfigResult);

        return applicationVersionLifecycleConfigResult;
    }

    private Humidifier.ElasticBeanstalk.ApplicationTypes.ApplicationVersionLifecycleConfig CreateApplicationVersionLifecycleConfig()
    {
        var applicationVersionLifecycleConfigResult = new Humidifier.ElasticBeanstalk.ApplicationTypes.ApplicationVersionLifecycleConfig();

        return applicationVersionLifecycleConfigResult;
    }
    public override void CreateChildren(Humidifier.ElasticBeanstalk.ApplicationTypes.ApplicationVersionLifecycleConfig result)
    {
        base.CreateChildren(result);

        result.MaxCountRule ??= MaxCountRuleFactory?.Build();
        result.MaxAgeRule ??= MaxAgeRuleFactory?.Build();
    }

} // End Of Class

public static class InnerApplicationApplicationVersionLifecycleConfigFactoryExtensions
{
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxCountRuleFactory> WithMaxCountRule(this InnerApplicationApplicationVersionLifecycleConfigFactory parentFactory, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null)
    {
        parentFactory.MaxCountRuleFactory = new InnerApplicationMaxCountRuleFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MaxCountRuleFactory);
    }

    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule(this InnerApplicationApplicationVersionLifecycleConfigFactory parentFactory, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null)
    {
        parentFactory.MaxAgeRuleFactory = new InnerApplicationMaxAgeRuleFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MaxAgeRuleFactory);
    }

    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaxCountRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaxCountRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2>(this CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3, T4, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3, T4>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3, T4, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3, T4, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory, T4, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxCountRuleFactory> WithMaxCountRule<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxCountRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxCountRule(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2>(this CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3, T4, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3, T4>(this CombinedResult<InnerApplicationApplicationVersionLifecycleConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3, T4, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationApplicationVersionLifecycleConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3, T4, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationApplicationVersionLifecycleConfigFactory, T3, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory, T4, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationApplicationVersionLifecycleConfigFactory, T4> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationApplicationVersionLifecycleConfigFactory, InnerApplicationMaxAgeRuleFactory> WithMaxAgeRule<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationApplicationVersionLifecycleConfigFactory> combinedResult, Action<Humidifier.ElasticBeanstalk.ApplicationTypes.MaxAgeRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaxAgeRule(combinedResult.T5, subFactoryAction));
}
