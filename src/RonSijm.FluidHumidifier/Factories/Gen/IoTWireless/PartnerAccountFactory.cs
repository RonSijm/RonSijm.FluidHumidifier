// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoTWireless;

public class PartnerAccountFactory(string resourceName = null, Action<Humidifier.IoTWireless.PartnerAccount> factoryAction = null) : ResourceFactory<Humidifier.IoTWireless.PartnerAccount>(resourceName)
{

    internal InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory SidewalkResponseFactory { get; set; }

    internal InnerPartnerAccountSidewalkAccountInfoFactory SidewalkFactory { get; set; }

    internal InnerPartnerAccountSidewalkUpdateAccountFactory SidewalkUpdateFactory { get; set; }

    protected override Humidifier.IoTWireless.PartnerAccount Create()
    {
        var partnerAccountResult = CreatePartnerAccount();
        factoryAction?.Invoke(partnerAccountResult);

        return partnerAccountResult;
    }

    private Humidifier.IoTWireless.PartnerAccount CreatePartnerAccount()
    {
        var partnerAccountResult = new Humidifier.IoTWireless.PartnerAccount
        {
            GivenName = InputResourceName,
        };

        return partnerAccountResult;
    }
    public override void CreateChildren(Humidifier.IoTWireless.PartnerAccount result)
    {
        base.CreateChildren(result);

        result.SidewalkResponse ??= SidewalkResponseFactory?.Build();
        result.Sidewalk ??= SidewalkFactory?.Build();
        result.SidewalkUpdate ??= SidewalkUpdateFactory?.Build();
    }

} // End Of Class

public static class PartnerAccountFactoryExtensions
{
    public static CombinedResult<PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse(this PartnerAccountFactory parentFactory, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null)
    {
        parentFactory.SidewalkResponseFactory = new InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SidewalkResponseFactory);
    }

    public static CombinedResult<PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk(this PartnerAccountFactory parentFactory, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null)
    {
        parentFactory.SidewalkFactory = new InnerPartnerAccountSidewalkAccountInfoFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SidewalkFactory);
    }

    public static CombinedResult<PartnerAccountFactory, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate(this PartnerAccountFactory parentFactory, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null)
    {
        parentFactory.SidewalkUpdateFactory = new InnerPartnerAccountSidewalkUpdateAccountFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SidewalkUpdateFactory);
    }

    public static CombinedResult<PartnerAccountFactory, T1, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1>(this CombinedResult<PartnerAccountFactory, T1> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1>(this CombinedResult<T1, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2>(this CombinedResult<PartnerAccountFactory, T1, T2> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2>(this CombinedResult<T1, PartnerAccountFactory, T2> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2>(this CombinedResult<T1, T2, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, T3, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3>(this CombinedResult<PartnerAccountFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, T3, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3>(this CombinedResult<T1, PartnerAccountFactory, T2, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, T3, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3>(this CombinedResult<T1, T2, PartnerAccountFactory, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3>(this CombinedResult<T1, T2, T3, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, T3, T4, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3, T4>(this CombinedResult<PartnerAccountFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, T3, T4, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3, T4>(this CombinedResult<T1, PartnerAccountFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, T3, T4, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3, T4>(this CombinedResult<T1, T2, PartnerAccountFactory, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PartnerAccountFactory, T4, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PartnerAccountFactory, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoWithFingerprintFactory> WithSidewalkResponse<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfoWithFingerprint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkResponse(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1>(this CombinedResult<PartnerAccountFactory, T1> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithSidewalk(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1>(this CombinedResult<T1, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithSidewalk(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2>(this CombinedResult<PartnerAccountFactory, T1, T2> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2>(this CombinedResult<T1, PartnerAccountFactory, T2> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2>(this CombinedResult<T1, T2, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, T3, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3>(this CombinedResult<PartnerAccountFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, T3, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3>(this CombinedResult<T1, PartnerAccountFactory, T2, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, T3, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3>(this CombinedResult<T1, T2, PartnerAccountFactory, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3>(this CombinedResult<T1, T2, T3, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, T3, T4, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3, T4>(this CombinedResult<PartnerAccountFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, T3, T4, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3, T4>(this CombinedResult<T1, PartnerAccountFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, T3, T4, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3, T4>(this CombinedResult<T1, T2, PartnerAccountFactory, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PartnerAccountFactory, T4, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PartnerAccountFactory, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PartnerAccountFactory, InnerPartnerAccountSidewalkAccountInfoFactory> WithSidewalk<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkAccountInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalk(combinedResult.T5, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1>(this CombinedResult<PartnerAccountFactory, T1> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1>(this CombinedResult<T1, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2>(this CombinedResult<PartnerAccountFactory, T1, T2> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2>(this CombinedResult<T1, PartnerAccountFactory, T2> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2>(this CombinedResult<T1, T2, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, T3, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3>(this CombinedResult<PartnerAccountFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, T3, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3>(this CombinedResult<T1, PartnerAccountFactory, T2, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, T3, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3>(this CombinedResult<T1, T2, PartnerAccountFactory, T3> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PartnerAccountFactory, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3>(this CombinedResult<T1, T2, T3, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<PartnerAccountFactory, T1, T2, T3, T4, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3, T4>(this CombinedResult<PartnerAccountFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, PartnerAccountFactory, T2, T3, T4, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3, T4>(this CombinedResult<T1, PartnerAccountFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, PartnerAccountFactory, T3, T4, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3, T4>(this CombinedResult<T1, T2, PartnerAccountFactory, T3, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, PartnerAccountFactory, T4, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, PartnerAccountFactory, T4> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, PartnerAccountFactory, InnerPartnerAccountSidewalkUpdateAccountFactory> WithSidewalkUpdate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, PartnerAccountFactory> combinedResult, Action<Humidifier.IoTWireless.PartnerAccountTypes.SidewalkUpdateAccount> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSidewalkUpdate(combinedResult.T5, subFactoryAction));
}
