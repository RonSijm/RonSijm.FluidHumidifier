// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisAnalytics;

public class InnerApplicationReferenceDataSourceReferenceDataSourceFactory(Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceDataSource> factoryAction = null) : SubResourceFactory<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceDataSource>
{

    internal InnerApplicationReferenceDataSourceReferenceSchemaFactory ReferenceSchemaFactory { get; set; }

    internal InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory S3ReferenceDataSourceFactory { get; set; }

    protected override Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceDataSource Create()
    {
        var referenceDataSourceResult = CreateReferenceDataSource();
        factoryAction?.Invoke(referenceDataSourceResult);

        return referenceDataSourceResult;
    }

    private Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceDataSource CreateReferenceDataSource()
    {
        var referenceDataSourceResult = new Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceDataSource();

        return referenceDataSourceResult;
    }
    public override void CreateChildren(Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceDataSource result)
    {
        base.CreateChildren(result);

        result.ReferenceSchema ??= ReferenceSchemaFactory?.Build();
        result.S3ReferenceDataSource ??= S3ReferenceDataSourceFactory?.Build();
    }

} // End Of Class

public static class InnerApplicationReferenceDataSourceReferenceDataSourceFactoryExtensions
{
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema(this InnerApplicationReferenceDataSourceReferenceDataSourceFactory parentFactory, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null)
    {
        parentFactory.ReferenceSchemaFactory = new InnerApplicationReferenceDataSourceReferenceSchemaFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ReferenceSchemaFactory);
    }

    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource(this InnerApplicationReferenceDataSourceReferenceDataSourceFactory parentFactory, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null)
    {
        parentFactory.S3ReferenceDataSourceFactory = new InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3ReferenceDataSourceFactory);
    }

    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithReferenceSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithReferenceSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2>(this CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3, T4, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3, T4>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3, T4, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3, T4, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T4, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceReferenceSchemaFactory> WithReferenceSchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.ReferenceSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReferenceSchema(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2>(this CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3, T4, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3, T4>(this CombinedResult<InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3, T4, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3, T4, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T4, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationReferenceDataSourceReferenceDataSourceFactory, InnerApplicationReferenceDataSourceS3ReferenceDataSourceFactory> WithS3ReferenceDataSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationReferenceDataSourceReferenceDataSourceFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationReferenceDataSourceTypes.S3ReferenceDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3ReferenceDataSource(combinedResult.T5, subFactoryAction));
}
