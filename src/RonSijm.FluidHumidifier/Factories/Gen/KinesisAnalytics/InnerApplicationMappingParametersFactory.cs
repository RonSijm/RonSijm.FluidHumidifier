// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisAnalytics;

public class InnerApplicationMappingParametersFactory(Action<Humidifier.KinesisAnalytics.ApplicationTypes.MappingParameters> factoryAction = null) : SubResourceFactory<Humidifier.KinesisAnalytics.ApplicationTypes.MappingParameters>
{

    internal InnerApplicationJSONMappingParametersFactory JSONMappingParametersFactory { get; set; }

    internal InnerApplicationCSVMappingParametersFactory CSVMappingParametersFactory { get; set; }

    protected override Humidifier.KinesisAnalytics.ApplicationTypes.MappingParameters Create()
    {
        var mappingParametersResult = CreateMappingParameters();
        factoryAction?.Invoke(mappingParametersResult);

        return mappingParametersResult;
    }

    private Humidifier.KinesisAnalytics.ApplicationTypes.MappingParameters CreateMappingParameters()
    {
        var mappingParametersResult = new Humidifier.KinesisAnalytics.ApplicationTypes.MappingParameters();

        return mappingParametersResult;
    }
    public override void CreateChildren(Humidifier.KinesisAnalytics.ApplicationTypes.MappingParameters result)
    {
        base.CreateChildren(result);

        result.JSONMappingParameters ??= JSONMappingParametersFactory?.Build();
        result.CSVMappingParameters ??= CSVMappingParametersFactory?.Build();
    }

} // End Of Class

public static class InnerApplicationMappingParametersFactoryExtensions
{
    public static CombinedResult<InnerApplicationMappingParametersFactory, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters(this InnerApplicationMappingParametersFactory parentFactory, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null)
    {
        parentFactory.JSONMappingParametersFactory = new InnerApplicationJSONMappingParametersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.JSONMappingParametersFactory);
    }

    public static CombinedResult<InnerApplicationMappingParametersFactory, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters(this InnerApplicationMappingParametersFactory parentFactory, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null)
    {
        parentFactory.CSVMappingParametersFactory = new InnerApplicationCSVMappingParametersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CSVMappingParametersFactory);
    }

    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1>(this CombinedResult<InnerApplicationMappingParametersFactory, T1> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1>(this CombinedResult<T1, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2>(this CombinedResult<InnerApplicationMappingParametersFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2>(this CombinedResult<T1, InnerApplicationMappingParametersFactory, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2>(this CombinedResult<T1, T2, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3>(this CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3>(this CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3, T4, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3, T4>(this CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3, T4, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3, T4, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory, T4, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationMappingParametersFactory, InnerApplicationJSONMappingParametersFactory> WithJSONMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.JSONMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithJSONMappingParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1>(this CombinedResult<InnerApplicationMappingParametersFactory, T1> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1>(this CombinedResult<T1, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2>(this CombinedResult<InnerApplicationMappingParametersFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2>(this CombinedResult<T1, InnerApplicationMappingParametersFactory, T2> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2>(this CombinedResult<T1, T2, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3>(this CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3>(this CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3, T4, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3, T4>(this CombinedResult<InnerApplicationMappingParametersFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3, T4, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationMappingParametersFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3, T4, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationMappingParametersFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory, T4, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationMappingParametersFactory, T4> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationMappingParametersFactory, InnerApplicationCSVMappingParametersFactory> WithCSVMappingParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationMappingParametersFactory> combinedResult, Action<Humidifier.KinesisAnalytics.ApplicationTypes.CSVMappingParameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCSVMappingParameters(combinedResult.T5, subFactoryAction));
}
