// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Cassandra;

public class TableFactory(string resourceName = null, Action<Humidifier.Cassandra.Table> factoryAction = null) : ResourceFactory<Humidifier.Cassandra.Table>(resourceName)
{

    internal List<InnerTableReplicaSpecificationFactory> ReplicaSpecificationsFactories { get; set; } = [];

    internal List<InnerTableClusteringKeyColumnFactory> ClusteringKeyColumnsFactories { get; set; } = [];

    internal List<InnerTableColumnFactory> PartitionKeyColumnsFactories { get; set; } = [];

    internal List<InnerTableColumnFactory> RegularColumnsFactories { get; set; } = [];

    internal InnerTableEncryptionSpecificationFactory EncryptionSpecificationFactory { get; set; }

    internal InnerTableAutoScalingSpecificationFactory AutoScalingSpecificationsFactory { get; set; }

    internal InnerTableBillingModeFactory BillingModeFactory { get; set; }

    protected override Humidifier.Cassandra.Table Create()
    {
        var tableResult = CreateTable();
        factoryAction?.Invoke(tableResult);

        return tableResult;
    }

    private Humidifier.Cassandra.Table CreateTable()
    {
        var tableResult = new Humidifier.Cassandra.Table
        {
            GivenName = InputResourceName,
        };

        return tableResult;
    }
    public override void CreateChildren(Humidifier.Cassandra.Table result)
    {
        base.CreateChildren(result);

        result.ReplicaSpecifications = ReplicaSpecificationsFactories.Any() ? ReplicaSpecificationsFactories.Select(x => x.Build()).ToList() : null;
        result.ClusteringKeyColumns = ClusteringKeyColumnsFactories.Any() ? ClusteringKeyColumnsFactories.Select(x => x.Build()).ToList() : null;
        result.PartitionKeyColumns = PartitionKeyColumnsFactories.Any() ? PartitionKeyColumnsFactories.Select(x => x.Build()).ToList() : null;
        result.RegularColumns = RegularColumnsFactories.Any() ? RegularColumnsFactories.Select(x => x.Build()).ToList() : null;
        result.EncryptionSpecification ??= EncryptionSpecificationFactory?.Build();
        result.AutoScalingSpecifications ??= AutoScalingSpecificationsFactory?.Build();
        result.BillingMode ??= BillingModeFactory?.Build();
    }

} // End Of Class

public static class TableFactoryExtensions
{
    public static CombinedResult<TableFactory, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null)
    {
        var factory = new InnerTableReplicaSpecificationFactory(subFactoryAction);
        parentFactory.ReplicaSpecificationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null)
    {
        var factory = new InnerTableClusteringKeyColumnFactory(subFactoryAction);
        parentFactory.ClusteringKeyColumnsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableColumnFactory> WithPartitionKeyColumns(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null)
    {
        var factory = new InnerTableColumnFactory(subFactoryAction);
        parentFactory.PartitionKeyColumnsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableColumnFactory> WithRegularColumns(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null)
    {
        var factory = new InnerTableColumnFactory(subFactoryAction);
        parentFactory.RegularColumnsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null)
    {
        parentFactory.EncryptionSpecificationFactory = new InnerTableEncryptionSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EncryptionSpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null)
    {
        parentFactory.AutoScalingSpecificationsFactory = new InnerTableAutoScalingSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AutoScalingSpecificationsFactory);
    }

    public static CombinedResult<TableFactory, InnerTableBillingModeFactory> WithBillingMode(this TableFactory parentFactory, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null)
    {
        parentFactory.BillingModeFactory = new InnerTableBillingModeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BillingModeFactory);
    }

    public static CombinedResult<TableFactory, T1, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableReplicaSpecificationFactory> WithReplicaSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicaSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableClusteringKeyColumnFactory> WithClusteringKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.ClusteringKeyColumn> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusteringKeyColumns(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableColumnFactory> WithPartitionKeyColumns<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableColumnFactory> WithPartitionKeyColumns<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableColumnFactory> WithPartitionKeyColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPartitionKeyColumns(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableColumnFactory> WithRegularColumns<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, WithRegularColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableColumnFactory> WithRegularColumns<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, WithRegularColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableColumnFactory> WithRegularColumns<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableColumnFactory> WithRegularColumns<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableColumnFactory> WithRegularColumns<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableColumnFactory> WithRegularColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.Column> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRegularColumns(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableEncryptionSpecificationFactory> WithEncryptionSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.EncryptionSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableAutoScalingSpecificationFactory> WithAutoScalingSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.AutoScalingSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoScalingSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableBillingModeFactory> WithBillingMode<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, WithBillingMode(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableBillingModeFactory> WithBillingMode<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, WithBillingMode(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableBillingModeFactory> WithBillingMode<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableBillingModeFactory> WithBillingMode<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableBillingModeFactory> WithBillingMode<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableBillingModeFactory> WithBillingMode<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.Cassandra.TableTypes.BillingMode> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBillingMode(combinedResult.T5, subFactoryAction));
}
