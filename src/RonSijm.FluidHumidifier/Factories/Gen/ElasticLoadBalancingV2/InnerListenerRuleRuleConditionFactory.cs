// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ElasticLoadBalancingV2;

public class InnerListenerRuleRuleConditionFactory(Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.RuleCondition> factoryAction = null) : SubResourceFactory<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.RuleCondition>
{

    internal InnerListenerRuleHttpHeaderConfigFactory HttpHeaderConfigFactory { get; set; }

    internal InnerListenerRuleQueryStringConfigFactory QueryStringConfigFactory { get; set; }

    internal InnerListenerRuleHostHeaderConfigFactory HostHeaderConfigFactory { get; set; }

    internal InnerListenerRuleHttpRequestMethodConfigFactory HttpRequestMethodConfigFactory { get; set; }

    internal InnerListenerRulePathPatternConfigFactory PathPatternConfigFactory { get; set; }

    internal InnerListenerRuleSourceIpConfigFactory SourceIpConfigFactory { get; set; }

    protected override Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.RuleCondition Create()
    {
        var ruleConditionResult = CreateRuleCondition();
        factoryAction?.Invoke(ruleConditionResult);

        return ruleConditionResult;
    }

    private Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.RuleCondition CreateRuleCondition()
    {
        var ruleConditionResult = new Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.RuleCondition();

        return ruleConditionResult;
    }
    public override void CreateChildren(Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.RuleCondition result)
    {
        base.CreateChildren(result);

        result.HttpHeaderConfig ??= HttpHeaderConfigFactory?.Build();
        result.QueryStringConfig ??= QueryStringConfigFactory?.Build();
        result.HostHeaderConfig ??= HostHeaderConfigFactory?.Build();
        result.HttpRequestMethodConfig ??= HttpRequestMethodConfigFactory?.Build();
        result.PathPatternConfig ??= PathPatternConfigFactory?.Build();
        result.SourceIpConfig ??= SourceIpConfigFactory?.Build();
    }

} // End Of Class

public static class InnerListenerRuleRuleConditionFactoryExtensions
{
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig(this InnerListenerRuleRuleConditionFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null)
    {
        parentFactory.HttpHeaderConfigFactory = new InnerListenerRuleHttpHeaderConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.HttpHeaderConfigFactory);
    }

    public static CombinedResult<InnerListenerRuleRuleConditionFactory, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig(this InnerListenerRuleRuleConditionFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null)
    {
        parentFactory.QueryStringConfigFactory = new InnerListenerRuleQueryStringConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.QueryStringConfigFactory);
    }

    public static CombinedResult<InnerListenerRuleRuleConditionFactory, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig(this InnerListenerRuleRuleConditionFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null)
    {
        parentFactory.HostHeaderConfigFactory = new InnerListenerRuleHostHeaderConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.HostHeaderConfigFactory);
    }

    public static CombinedResult<InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig(this InnerListenerRuleRuleConditionFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null)
    {
        parentFactory.HttpRequestMethodConfigFactory = new InnerListenerRuleHttpRequestMethodConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.HttpRequestMethodConfigFactory);
    }

    public static CombinedResult<InnerListenerRuleRuleConditionFactory, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig(this InnerListenerRuleRuleConditionFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null)
    {
        parentFactory.PathPatternConfigFactory = new InnerListenerRulePathPatternConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PathPatternConfigFactory);
    }

    public static CombinedResult<InnerListenerRuleRuleConditionFactory, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig(this InnerListenerRuleRuleConditionFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null)
    {
        parentFactory.SourceIpConfigFactory = new InnerListenerRuleSourceIpConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceIpConfigFactory);
    }

    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3, T4>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpHeaderConfigFactory> WithHttpHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpHeaderConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3, T4>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory, InnerListenerRuleQueryStringConfigFactory> WithQueryStringConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.QueryStringConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithQueryStringConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3, T4>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHostHeaderConfigFactory> WithHostHeaderConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HostHeaderConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHostHeaderConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3, T4>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory, InnerListenerRuleHttpRequestMethodConfigFactory> WithHttpRequestMethodConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.HttpRequestMethodConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHttpRequestMethodConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3, T4>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory, InnerListenerRulePathPatternConfigFactory> WithPathPatternConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.PathPatternConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPathPatternConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3, T4>(this CombinedResult<InnerListenerRuleRuleConditionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerListenerRuleRuleConditionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerListenerRuleRuleConditionFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerListenerRuleRuleConditionFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory, InnerListenerRuleSourceIpConfigFactory> WithSourceIpConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerListenerRuleRuleConditionFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerRuleTypes.SourceIpConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceIpConfig(combinedResult.T5, subFactoryAction));
}
