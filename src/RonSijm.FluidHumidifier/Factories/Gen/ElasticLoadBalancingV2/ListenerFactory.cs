// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ElasticLoadBalancingV2;

public class ListenerFactory(string resourceName = null, Action<Humidifier.ElasticLoadBalancingV2.Listener> factoryAction = null) : ResourceFactory<Humidifier.ElasticLoadBalancingV2.Listener>(resourceName)
{

    internal List<InnerListenerListenerAttributeFactory> ListenerAttributesFactories { get; set; } = [];

    internal List<InnerListenerActionFactory> DefaultActionsFactories { get; set; } = [];

    internal List<InnerListenerCertificateFactory> CertificatesFactories { get; set; } = [];

    internal InnerListenerMutualAuthenticationFactory MutualAuthenticationFactory { get; set; }

    protected override Humidifier.ElasticLoadBalancingV2.Listener Create()
    {
        var listenerResult = CreateListener();
        factoryAction?.Invoke(listenerResult);

        return listenerResult;
    }

    private Humidifier.ElasticLoadBalancingV2.Listener CreateListener()
    {
        var listenerResult = new Humidifier.ElasticLoadBalancingV2.Listener
        {
            GivenName = InputResourceName,
        };

        return listenerResult;
    }
    public override void CreateChildren(Humidifier.ElasticLoadBalancingV2.Listener result)
    {
        base.CreateChildren(result);

        result.ListenerAttributes = ListenerAttributesFactories.Any() ? ListenerAttributesFactories.Select(x => x.Build()).ToList() : null;
        result.DefaultActions = DefaultActionsFactories.Any() ? DefaultActionsFactories.Select(x => x.Build()).ToList() : null;
        result.Certificates = CertificatesFactories.Any() ? CertificatesFactories.Select(x => x.Build()).ToList() : null;
        result.MutualAuthentication ??= MutualAuthenticationFactory?.Build();
    }

} // End Of Class

public static class ListenerFactoryExtensions
{
    public static CombinedResult<ListenerFactory, InnerListenerListenerAttributeFactory> WithListenerAttributes(this ListenerFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null)
    {
        var factory = new InnerListenerListenerAttributeFactory(subFactoryAction);
        parentFactory.ListenerAttributesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ListenerFactory, InnerListenerActionFactory> WithDefaultActions(this ListenerFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null)
    {
        var factory = new InnerListenerActionFactory(subFactoryAction);
        parentFactory.DefaultActionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ListenerFactory, InnerListenerCertificateFactory> WithCertificates(this ListenerFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null)
    {
        var factory = new InnerListenerCertificateFactory(subFactoryAction);
        parentFactory.CertificatesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ListenerFactory, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication(this ListenerFactory parentFactory, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null)
    {
        parentFactory.MutualAuthenticationFactory = new InnerListenerMutualAuthenticationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MutualAuthenticationFactory);
    }

    public static CombinedResult<ListenerFactory, T1, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1>(this CombinedResult<ListenerFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, WithListenerAttributes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1>(this CombinedResult<T1, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, WithListenerAttributes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2>(this CombinedResult<ListenerFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2>(this CombinedResult<T1, ListenerFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2>(this CombinedResult<T1, T2, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3>(this CombinedResult<ListenerFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3>(this CombinedResult<T1, ListenerFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3>(this CombinedResult<T1, T2, ListenerFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3>(this CombinedResult<T1, T2, T3, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, T4, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3, T4>(this CombinedResult<ListenerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, T4, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3, T4>(this CombinedResult<T1, ListenerFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, T4, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3, T4>(this CombinedResult<T1, T2, ListenerFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, T4, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ListenerFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ListenerFactory, InnerListenerListenerAttributeFactory> WithListenerAttributes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.ListenerAttribute> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithListenerAttributes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, InnerListenerActionFactory> WithDefaultActions<T1>(this CombinedResult<ListenerFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, InnerListenerActionFactory> WithDefaultActions<T1>(this CombinedResult<T1, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, InnerListenerActionFactory> WithDefaultActions<T1, T2>(this CombinedResult<ListenerFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, InnerListenerActionFactory> WithDefaultActions<T1, T2>(this CombinedResult<T1, ListenerFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, InnerListenerActionFactory> WithDefaultActions<T1, T2>(this CombinedResult<T1, T2, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3>(this CombinedResult<ListenerFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3>(this CombinedResult<T1, ListenerFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3>(this CombinedResult<T1, T2, ListenerFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, T4, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3, T4>(this CombinedResult<ListenerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, T4, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3, T4>(this CombinedResult<T1, ListenerFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, T4, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ListenerFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, T4, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ListenerFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ListenerFactory, InnerListenerActionFactory> WithDefaultActions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Action> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultActions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, InnerListenerCertificateFactory> WithCertificates<T1>(this CombinedResult<ListenerFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, WithCertificates(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, InnerListenerCertificateFactory> WithCertificates<T1>(this CombinedResult<T1, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, WithCertificates(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, InnerListenerCertificateFactory> WithCertificates<T1, T2>(this CombinedResult<ListenerFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, InnerListenerCertificateFactory> WithCertificates<T1, T2>(this CombinedResult<T1, ListenerFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, InnerListenerCertificateFactory> WithCertificates<T1, T2>(this CombinedResult<T1, T2, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3>(this CombinedResult<ListenerFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3>(this CombinedResult<T1, ListenerFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3>(this CombinedResult<T1, T2, ListenerFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3>(this CombinedResult<T1, T2, T3, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, T4, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3, T4>(this CombinedResult<ListenerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, T4, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3, T4>(this CombinedResult<T1, ListenerFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, T4, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3, T4>(this CombinedResult<T1, T2, ListenerFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, T4, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ListenerFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ListenerFactory, InnerListenerCertificateFactory> WithCertificates<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.Certificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCertificates(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1>(this CombinedResult<ListenerFactory, T1> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1>(this CombinedResult<T1, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2>(this CombinedResult<ListenerFactory, T1, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2>(this CombinedResult<T1, ListenerFactory, T2> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2>(this CombinedResult<T1, T2, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<ListenerFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<T1, ListenerFactory, T2, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, ListenerFactory, T3> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, T3, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ListenerFactory, T1, T2, T3, T4, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<ListenerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ListenerFactory, T2, T3, T4, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, ListenerFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ListenerFactory, T3, T4, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, ListenerFactory, T3, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ListenerFactory, T4, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ListenerFactory, T4> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ListenerFactory, InnerListenerMutualAuthenticationFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ListenerFactory> combinedResult, Action<Humidifier.ElasticLoadBalancingV2.ListenerTypes.MutualAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T5, subFactoryAction));
}
