// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.AutoScalingPlans;

public class InnerScalingPlanScalingInstructionFactory(Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.ScalingInstruction> factoryAction = null) : SubResourceFactory<Humidifier.AutoScalingPlans.ScalingPlanTypes.ScalingInstruction>
{

    internal InnerScalingPlanCustomizedLoadMetricSpecificationFactory CustomizedLoadMetricSpecificationFactory { get; set; }

    internal InnerScalingPlanPredefinedLoadMetricSpecificationFactory PredefinedLoadMetricSpecificationFactory { get; set; }

    protected override Humidifier.AutoScalingPlans.ScalingPlanTypes.ScalingInstruction Create()
    {
        var scalingInstructionResult = CreateScalingInstruction();
        factoryAction?.Invoke(scalingInstructionResult);

        return scalingInstructionResult;
    }

    private Humidifier.AutoScalingPlans.ScalingPlanTypes.ScalingInstruction CreateScalingInstruction()
    {
        var scalingInstructionResult = new Humidifier.AutoScalingPlans.ScalingPlanTypes.ScalingInstruction();

        return scalingInstructionResult;
    }
    public override void CreateChildren(Humidifier.AutoScalingPlans.ScalingPlanTypes.ScalingInstruction result)
    {
        base.CreateChildren(result);

        result.CustomizedLoadMetricSpecification ??= CustomizedLoadMetricSpecificationFactory?.Build();
        result.PredefinedLoadMetricSpecification ??= PredefinedLoadMetricSpecificationFactory?.Build();
    }

} // End Of Class

public static class InnerScalingPlanScalingInstructionFactoryExtensions
{
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification(this InnerScalingPlanScalingInstructionFactory parentFactory, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null)
    {
        parentFactory.CustomizedLoadMetricSpecificationFactory = new InnerScalingPlanCustomizedLoadMetricSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CustomizedLoadMetricSpecificationFactory);
    }

    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification(this InnerScalingPlanScalingInstructionFactory parentFactory, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null)
    {
        parentFactory.PredefinedLoadMetricSpecificationFactory = new InnerScalingPlanPredefinedLoadMetricSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PredefinedLoadMetricSpecificationFactory);
    }

    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2>(this CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3, T4, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3, T4, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3, T4, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory, T4, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanCustomizedLoadMetricSpecificationFactory> WithCustomizedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.CustomizedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomizedLoadMetricSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2>(this CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3, T4, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<InnerScalingPlanScalingInstructionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3, T4, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, InnerScalingPlanScalingInstructionFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3, T4, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerScalingPlanScalingInstructionFactory, T3, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory, T4, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerScalingPlanScalingInstructionFactory, T4> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerScalingPlanScalingInstructionFactory, InnerScalingPlanPredefinedLoadMetricSpecificationFactory> WithPredefinedLoadMetricSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerScalingPlanScalingInstructionFactory> combinedResult, Action<Humidifier.AutoScalingPlans.ScalingPlanTypes.PredefinedLoadMetricSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredefinedLoadMetricSpecification(combinedResult.T5, subFactoryAction));
}
