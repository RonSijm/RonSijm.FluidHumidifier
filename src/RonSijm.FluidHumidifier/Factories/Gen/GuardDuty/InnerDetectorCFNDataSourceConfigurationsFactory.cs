// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.GuardDuty;

public class InnerDetectorCFNDataSourceConfigurationsFactory(Action<Humidifier.GuardDuty.DetectorTypes.CFNDataSourceConfigurations> factoryAction = null) : SubResourceFactory<Humidifier.GuardDuty.DetectorTypes.CFNDataSourceConfigurations>
{

    internal InnerDetectorCFNMalwareProtectionConfigurationFactory MalwareProtectionFactory { get; set; }

    internal InnerDetectorCFNS3LogsConfigurationFactory S3LogsFactory { get; set; }

    internal InnerDetectorCFNKubernetesConfigurationFactory KubernetesFactory { get; set; }

    protected override Humidifier.GuardDuty.DetectorTypes.CFNDataSourceConfigurations Create()
    {
        var cFNDataSourceConfigurationsResult = CreateCFNDataSourceConfigurations();
        factoryAction?.Invoke(cFNDataSourceConfigurationsResult);

        return cFNDataSourceConfigurationsResult;
    }

    private Humidifier.GuardDuty.DetectorTypes.CFNDataSourceConfigurations CreateCFNDataSourceConfigurations()
    {
        var cFNDataSourceConfigurationsResult = new Humidifier.GuardDuty.DetectorTypes.CFNDataSourceConfigurations();

        return cFNDataSourceConfigurationsResult;
    }
    public override void CreateChildren(Humidifier.GuardDuty.DetectorTypes.CFNDataSourceConfigurations result)
    {
        base.CreateChildren(result);

        result.MalwareProtection ??= MalwareProtectionFactory?.Build();
        result.S3Logs ??= S3LogsFactory?.Build();
        result.Kubernetes ??= KubernetesFactory?.Build();
    }

} // End Of Class

public static class InnerDetectorCFNDataSourceConfigurationsFactoryExtensions
{
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection(this InnerDetectorCFNDataSourceConfigurationsFactory parentFactory, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null)
    {
        parentFactory.MalwareProtectionFactory = new InnerDetectorCFNMalwareProtectionConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MalwareProtectionFactory);
    }

    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs(this InnerDetectorCFNDataSourceConfigurationsFactory parentFactory, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null)
    {
        parentFactory.S3LogsFactory = new InnerDetectorCFNS3LogsConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3LogsFactory);
    }

    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes(this InnerDetectorCFNDataSourceConfigurationsFactory parentFactory, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null)
    {
        parentFactory.KubernetesFactory = new InnerDetectorCFNKubernetesConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KubernetesFactory);
    }

    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMalwareProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMalwareProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, T4, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3, T4>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, T4, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3, T4>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, T4, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, T4, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNMalwareProtectionConfigurationFactory> WithMalwareProtection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNMalwareProtectionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMalwareProtection(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Logs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Logs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, T4, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3, T4>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, T4, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3, T4>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, T4, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, T4, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNS3LogsConfigurationFactory> WithS3Logs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNS3LogsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Logs(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithKubernetes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithKubernetes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, T4, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3, T4>(this CombinedResult<InnerDetectorCFNDataSourceConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, T4, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3, T4>(this CombinedResult<T1, InnerDetectorCFNDataSourceConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, T4, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDetectorCFNDataSourceConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, T4, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDetectorCFNDataSourceConfigurationsFactory, T4> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDetectorCFNDataSourceConfigurationsFactory, InnerDetectorCFNKubernetesConfigurationFactory> WithKubernetes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDetectorCFNDataSourceConfigurationsFactory> combinedResult, Action<Humidifier.GuardDuty.DetectorTypes.CFNKubernetesConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetes(combinedResult.T5, subFactoryAction));
}
