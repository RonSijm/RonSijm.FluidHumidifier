// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoT;

public class AccountAuditConfigurationFactory(string resourceName = null, Action<Humidifier.IoT.AccountAuditConfiguration> factoryAction = null) : ResourceFactory<Humidifier.IoT.AccountAuditConfiguration>(resourceName)
{

    internal InnerAccountAuditConfigurationAuditCheckConfigurationsFactory AuditCheckConfigurationsFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory AuditNotificationTargetConfigurationsFactory { get; set; }

    protected override Humidifier.IoT.AccountAuditConfiguration Create()
    {
        var accountAuditConfigurationResult = CreateAccountAuditConfiguration();
        factoryAction?.Invoke(accountAuditConfigurationResult);

        return accountAuditConfigurationResult;
    }

    private Humidifier.IoT.AccountAuditConfiguration CreateAccountAuditConfiguration()
    {
        var accountAuditConfigurationResult = new Humidifier.IoT.AccountAuditConfiguration
        {
            GivenName = InputResourceName,
        };

        return accountAuditConfigurationResult;
    }
    public override void CreateChildren(Humidifier.IoT.AccountAuditConfiguration result)
    {
        base.CreateChildren(result);

        result.AuditCheckConfigurations ??= AuditCheckConfigurationsFactory?.Build();
        result.AuditNotificationTargetConfigurations ??= AuditNotificationTargetConfigurationsFactory?.Build();
    }

} // End Of Class

public static class AccountAuditConfigurationFactoryExtensions
{
    public static CombinedResult<AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations(this AccountAuditConfigurationFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null)
    {
        parentFactory.AuditCheckConfigurationsFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AuditCheckConfigurationsFactory);
    }

    public static CombinedResult<AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations(this AccountAuditConfigurationFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null)
    {
        parentFactory.AuditNotificationTargetConfigurationsFactory = new InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AuditNotificationTargetConfigurationsFactory);
    }

    public static CombinedResult<AccountAuditConfigurationFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1>(this CombinedResult<AccountAuditConfigurationFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1>(this CombinedResult<T1, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2>(this CombinedResult<AccountAuditConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2>(this CombinedResult<T1, AccountAuditConfigurationFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2>(this CombinedResult<T1, T2, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3>(this CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3>(this CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3, T4>(this CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> WithAuditCheckConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditCheckConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1>(this CombinedResult<AccountAuditConfigurationFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1>(this CombinedResult<T1, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, T2, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2>(this CombinedResult<AccountAuditConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, T2, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2>(this CombinedResult<T1, AccountAuditConfigurationFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2>(this CombinedResult<T1, T2, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3>(this CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3>(this CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3, T4>(this CombinedResult<AccountAuditConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, AccountAuditConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3, T4, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, AccountAuditConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory, T4, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AccountAuditConfigurationFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AccountAuditConfigurationFactory, InnerAccountAuditConfigurationAuditNotificationTargetConfigurationsFactory> WithAuditNotificationTargetConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AccountAuditConfigurationFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditNotificationTargetConfigurations> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuditNotificationTargetConfigurations(combinedResult.T5, subFactoryAction));
}
