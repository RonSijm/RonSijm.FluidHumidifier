// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoT;

public class InnerAccountAuditConfigurationAuditCheckConfigurationsFactory(Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations> factoryAction = null) : SubResourceFactory<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations>
{

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory IotRoleAliasOverlyPermissiveCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory DeviceCertificateSharedCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory ConflictingClientIdsCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory IntermediateCaRevokedForActiveDeviceCertificatesCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory IotRoleAliasAllowsAccessToUnusedServicesCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory RevokedCaCertificateStillActiveCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory LoggingDisabledCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory UnauthenticatedCognitoRoleOverlyPermissiveCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory AuthenticatedCognitoRoleOverlyPermissiveCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory CaCertificateExpiringCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory DeviceCertificateExpiringCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory IoTPolicyPotentialMisConfigurationCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory IotPolicyOverlyPermissiveCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory RevokedDeviceCertificateStillActiveCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory DeviceCertificateKeyQualityCheckFactory { get; set; }

    internal InnerAccountAuditConfigurationAuditCheckConfigurationFactory CaCertificateKeyQualityCheckFactory { get; set; }

    protected override Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations Create()
    {
        var auditCheckConfigurationsResult = CreateAuditCheckConfigurations();
        factoryAction?.Invoke(auditCheckConfigurationsResult);

        return auditCheckConfigurationsResult;
    }

    private Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations CreateAuditCheckConfigurations()
    {
        var auditCheckConfigurationsResult = new Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations();

        return auditCheckConfigurationsResult;
    }
    public override void CreateChildren(Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfigurations result)
    {
        base.CreateChildren(result);

        result.IotRoleAliasOverlyPermissiveCheck ??= IotRoleAliasOverlyPermissiveCheckFactory?.Build();
        result.DeviceCertificateSharedCheck ??= DeviceCertificateSharedCheckFactory?.Build();
        result.ConflictingClientIdsCheck ??= ConflictingClientIdsCheckFactory?.Build();
        result.IntermediateCaRevokedForActiveDeviceCertificatesCheck ??= IntermediateCaRevokedForActiveDeviceCertificatesCheckFactory?.Build();
        result.IotRoleAliasAllowsAccessToUnusedServicesCheck ??= IotRoleAliasAllowsAccessToUnusedServicesCheckFactory?.Build();
        result.RevokedCaCertificateStillActiveCheck ??= RevokedCaCertificateStillActiveCheckFactory?.Build();
        result.LoggingDisabledCheck ??= LoggingDisabledCheckFactory?.Build();
        result.UnauthenticatedCognitoRoleOverlyPermissiveCheck ??= UnauthenticatedCognitoRoleOverlyPermissiveCheckFactory?.Build();
        result.AuthenticatedCognitoRoleOverlyPermissiveCheck ??= AuthenticatedCognitoRoleOverlyPermissiveCheckFactory?.Build();
        result.CaCertificateExpiringCheck ??= CaCertificateExpiringCheckFactory?.Build();
        result.DeviceCertificateExpiringCheck ??= DeviceCertificateExpiringCheckFactory?.Build();
        result.IoTPolicyPotentialMisConfigurationCheck ??= IoTPolicyPotentialMisConfigurationCheckFactory?.Build();
        result.IotPolicyOverlyPermissiveCheck ??= IotPolicyOverlyPermissiveCheckFactory?.Build();
        result.RevokedDeviceCertificateStillActiveCheck ??= RevokedDeviceCertificateStillActiveCheckFactory?.Build();
        result.DeviceCertificateKeyQualityCheck ??= DeviceCertificateKeyQualityCheckFactory?.Build();
        result.CaCertificateKeyQualityCheck ??= CaCertificateKeyQualityCheckFactory?.Build();
    }

} // End Of Class

public static class InnerAccountAuditConfigurationAuditCheckConfigurationsFactoryExtensions
{
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.IotRoleAliasOverlyPermissiveCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IotRoleAliasOverlyPermissiveCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.DeviceCertificateSharedCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeviceCertificateSharedCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.ConflictingClientIdsCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConflictingClientIdsCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.IntermediateCaRevokedForActiveDeviceCertificatesCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IntermediateCaRevokedForActiveDeviceCertificatesCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.IotRoleAliasAllowsAccessToUnusedServicesCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IotRoleAliasAllowsAccessToUnusedServicesCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.RevokedCaCertificateStillActiveCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RevokedCaCertificateStillActiveCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.LoggingDisabledCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoggingDisabledCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.UnauthenticatedCognitoRoleOverlyPermissiveCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.UnauthenticatedCognitoRoleOverlyPermissiveCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.AuthenticatedCognitoRoleOverlyPermissiveCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AuthenticatedCognitoRoleOverlyPermissiveCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.CaCertificateExpiringCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CaCertificateExpiringCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.DeviceCertificateExpiringCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeviceCertificateExpiringCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.IoTPolicyPotentialMisConfigurationCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IoTPolicyPotentialMisConfigurationCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.IotPolicyOverlyPermissiveCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IotPolicyOverlyPermissiveCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.RevokedDeviceCertificateStillActiveCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RevokedDeviceCertificateStillActiveCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.DeviceCertificateKeyQualityCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeviceCertificateKeyQualityCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck(this InnerAccountAuditConfigurationAuditCheckConfigurationsFactory parentFactory, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null)
    {
        parentFactory.CaCertificateKeyQualityCheckFactory = new InnerAccountAuditConfigurationAuditCheckConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CaCertificateKeyQualityCheckFactory);
    }

    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasOverlyPermissiveCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateSharedCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateSharedCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithConflictingClientIdsCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConflictingClientIdsCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIntermediateCaRevokedForActiveDeviceCertificatesCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntermediateCaRevokedForActiveDeviceCertificatesCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotRoleAliasAllowsAccessToUnusedServicesCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotRoleAliasAllowsAccessToUnusedServicesCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedCaCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedCaCertificateStillActiveCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithLoggingDisabledCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingDisabledCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithUnauthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUnauthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithAuthenticatedCognitoRoleOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticatedCognitoRoleOverlyPermissiveCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateExpiringCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateExpiringCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateExpiringCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIoTPolicyPotentialMisConfigurationCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIoTPolicyPotentialMisConfigurationCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithIotPolicyOverlyPermissiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotPolicyOverlyPermissiveCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithRevokedDeviceCertificateStillActiveCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRevokedDeviceCertificateStillActiveCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithDeviceCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeviceCertificateKeyQualityCheck(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T3, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, T4> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory, InnerAccountAuditConfigurationAuditCheckConfigurationFactory> WithCaCertificateKeyQualityCheck<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAccountAuditConfigurationAuditCheckConfigurationsFactory> combinedResult, Action<Humidifier.IoT.AccountAuditConfigurationTypes.AuditCheckConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaCertificateKeyQualityCheck(combinedResult.T5, subFactoryAction));
}
