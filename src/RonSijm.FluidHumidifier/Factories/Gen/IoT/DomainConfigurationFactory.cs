// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoT;

public class DomainConfigurationFactory(string resourceName = null, Action<Humidifier.IoT.DomainConfiguration> factoryAction = null) : ResourceFactory<Humidifier.IoT.DomainConfiguration>(resourceName)
{

    internal InnerDomainConfigurationTlsConfigFactory TlsConfigFactory { get; set; }

    internal InnerDomainConfigurationServerCertificateConfigFactory ServerCertificateConfigFactory { get; set; }

    internal InnerDomainConfigurationAuthorizerConfigFactory AuthorizerConfigFactory { get; set; }

    protected override Humidifier.IoT.DomainConfiguration Create()
    {
        var domainConfigurationResult = CreateDomainConfiguration();
        factoryAction?.Invoke(domainConfigurationResult);

        return domainConfigurationResult;
    }

    private Humidifier.IoT.DomainConfiguration CreateDomainConfiguration()
    {
        var domainConfigurationResult = new Humidifier.IoT.DomainConfiguration
        {
            GivenName = InputResourceName,
        };

        return domainConfigurationResult;
    }
    public override void CreateChildren(Humidifier.IoT.DomainConfiguration result)
    {
        base.CreateChildren(result);

        result.TlsConfig ??= TlsConfigFactory?.Build();
        result.ServerCertificateConfig ??= ServerCertificateConfigFactory?.Build();
        result.AuthorizerConfig ??= AuthorizerConfigFactory?.Build();
    }

} // End Of Class

public static class DomainConfigurationFactoryExtensions
{
    public static CombinedResult<DomainConfigurationFactory, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig(this DomainConfigurationFactory parentFactory, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null)
    {
        parentFactory.TlsConfigFactory = new InnerDomainConfigurationTlsConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TlsConfigFactory);
    }

    public static CombinedResult<DomainConfigurationFactory, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig(this DomainConfigurationFactory parentFactory, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null)
    {
        parentFactory.ServerCertificateConfigFactory = new InnerDomainConfigurationServerCertificateConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ServerCertificateConfigFactory);
    }

    public static CombinedResult<DomainConfigurationFactory, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig(this DomainConfigurationFactory parentFactory, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null)
    {
        parentFactory.AuthorizerConfigFactory = new InnerDomainConfigurationAuthorizerConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AuthorizerConfigFactory);
    }

    public static CombinedResult<DomainConfigurationFactory, T1, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1>(this CombinedResult<DomainConfigurationFactory, T1> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTlsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1>(this CombinedResult<T1, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTlsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2>(this CombinedResult<DomainConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2>(this CombinedResult<T1, DomainConfigurationFactory, T2> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2>(this CombinedResult<T1, T2, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, T3, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3>(this CombinedResult<DomainConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, T3, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3>(this CombinedResult<T1, DomainConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, T3, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3>(this CombinedResult<T1, T2, DomainConfigurationFactory, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainConfigurationFactory, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, T3, T4, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3, T4>(this CombinedResult<DomainConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, T3, T4, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3, T4>(this CombinedResult<T1, DomainConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, T3, T4, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainConfigurationFactory, T4, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainConfigurationFactory, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainConfigurationFactory, InnerDomainConfigurationTlsConfigFactory> WithTlsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.TlsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTlsConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1>(this CombinedResult<DomainConfigurationFactory, T1> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1>(this CombinedResult<T1, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2>(this CombinedResult<DomainConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2>(this CombinedResult<T1, DomainConfigurationFactory, T2> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2>(this CombinedResult<T1, T2, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, T3, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3>(this CombinedResult<DomainConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, T3, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3>(this CombinedResult<T1, DomainConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, T3, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3>(this CombinedResult<T1, T2, DomainConfigurationFactory, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainConfigurationFactory, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, T3, T4, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3, T4>(this CombinedResult<DomainConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, T3, T4, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3, T4>(this CombinedResult<T1, DomainConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, T3, T4, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainConfigurationFactory, T4, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainConfigurationFactory, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainConfigurationFactory, InnerDomainConfigurationServerCertificateConfigFactory> WithServerCertificateConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.ServerCertificateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServerCertificateConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1>(this CombinedResult<DomainConfigurationFactory, T1> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1>(this CombinedResult<T1, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2>(this CombinedResult<DomainConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2>(this CombinedResult<T1, DomainConfigurationFactory, T2> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2>(this CombinedResult<T1, T2, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, T3, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3>(this CombinedResult<DomainConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, T3, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3>(this CombinedResult<T1, DomainConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, T3, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3>(this CombinedResult<T1, T2, DomainConfigurationFactory, T3> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainConfigurationFactory, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainConfigurationFactory, T1, T2, T3, T4, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3, T4>(this CombinedResult<DomainConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainConfigurationFactory, T2, T3, T4, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3, T4>(this CombinedResult<T1, DomainConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainConfigurationFactory, T3, T4, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainConfigurationFactory, T4, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainConfigurationFactory, T4> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainConfigurationFactory, InnerDomainConfigurationAuthorizerConfigFactory> WithAuthorizerConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainConfigurationFactory> combinedResult, Action<Humidifier.IoT.DomainConfigurationTypes.AuthorizerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthorizerConfig(combinedResult.T5, subFactoryAction));
}
