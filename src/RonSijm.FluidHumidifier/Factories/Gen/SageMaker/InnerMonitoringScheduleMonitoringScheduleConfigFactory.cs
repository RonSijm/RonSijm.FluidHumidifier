// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerMonitoringScheduleMonitoringScheduleConfigFactory(Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringScheduleConfig> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringScheduleConfig>
{

    internal InnerMonitoringScheduleScheduleConfigFactory ScheduleConfigFactory { get; set; }

    internal InnerMonitoringScheduleMonitoringJobDefinitionFactory MonitoringJobDefinitionFactory { get; set; }

    protected override Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringScheduleConfig Create()
    {
        var monitoringScheduleConfigResult = CreateMonitoringScheduleConfig();
        factoryAction?.Invoke(monitoringScheduleConfigResult);

        return monitoringScheduleConfigResult;
    }

    private Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringScheduleConfig CreateMonitoringScheduleConfig()
    {
        var monitoringScheduleConfigResult = new Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringScheduleConfig();

        return monitoringScheduleConfigResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringScheduleConfig result)
    {
        base.CreateChildren(result);

        result.ScheduleConfig ??= ScheduleConfigFactory?.Build();
        result.MonitoringJobDefinition ??= MonitoringJobDefinitionFactory?.Build();
    }

} // End Of Class

public static class InnerMonitoringScheduleMonitoringScheduleConfigFactoryExtensions
{
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig(this InnerMonitoringScheduleMonitoringScheduleConfigFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null)
    {
        parentFactory.ScheduleConfigFactory = new InnerMonitoringScheduleScheduleConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ScheduleConfigFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition(this InnerMonitoringScheduleMonitoringScheduleConfigFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null)
    {
        parentFactory.MonitoringJobDefinitionFactory = new InnerMonitoringScheduleMonitoringJobDefinitionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MonitoringJobDefinitionFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithScheduleConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithScheduleConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3, T4, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3, T4, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3, T4, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T4, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleScheduleConfigFactory> WithScheduleConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ScheduleConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScheduleConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringScheduleConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringScheduleConfigFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringScheduleConfigFactory, InnerMonitoringScheduleMonitoringJobDefinitionFactory> WithMonitoringJobDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringScheduleConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringJobDefinition(combinedResult.T5, subFactoryAction));
}
