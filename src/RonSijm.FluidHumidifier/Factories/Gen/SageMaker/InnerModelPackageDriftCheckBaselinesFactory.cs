// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerModelPackageDriftCheckBaselinesFactory(Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines>
{

    internal InnerModelPackageDriftCheckModelDataQualityFactory ModelDataQualityFactory { get; set; }

    internal InnerModelPackageDriftCheckBiasFactory BiasFactory { get; set; }

    internal InnerModelPackageDriftCheckModelQualityFactory ModelQualityFactory { get; set; }

    internal InnerModelPackageDriftCheckExplainabilityFactory ExplainabilityFactory { get; set; }

    protected override Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines Create()
    {
        var driftCheckBaselinesResult = CreateDriftCheckBaselines();
        factoryAction?.Invoke(driftCheckBaselinesResult);

        return driftCheckBaselinesResult;
    }

    private Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines CreateDriftCheckBaselines()
    {
        var driftCheckBaselinesResult = new Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines();

        return driftCheckBaselinesResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines result)
    {
        base.CreateChildren(result);

        result.ModelDataQuality ??= ModelDataQualityFactory?.Build();
        result.Bias ??= BiasFactory?.Build();
        result.ModelQuality ??= ModelQualityFactory?.Build();
        result.Explainability ??= ExplainabilityFactory?.Build();
    }

} // End Of Class

public static class InnerModelPackageDriftCheckBaselinesFactoryExtensions
{
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality(this InnerModelPackageDriftCheckBaselinesFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null)
    {
        parentFactory.ModelDataQualityFactory = new InnerModelPackageDriftCheckModelDataQualityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelDataQualityFactory);
    }

    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckBiasFactory> WithBias(this InnerModelPackageDriftCheckBaselinesFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null)
    {
        parentFactory.BiasFactory = new InnerModelPackageDriftCheckBiasFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BiasFactory);
    }

    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality(this InnerModelPackageDriftCheckBaselinesFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null)
    {
        parentFactory.ModelQualityFactory = new InnerModelPackageDriftCheckModelQualityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelQualityFactory);
    }

    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability(this InnerModelPackageDriftCheckBaselinesFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null)
    {
        parentFactory.ExplainabilityFactory = new InnerModelPackageDriftCheckExplainabilityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExplainabilityFactory);
    }

    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, InnerModelPackageDriftCheckBiasFactory> WithBias<T1>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckBiasFactory> WithBias<T1>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageDriftCheckBaselinesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageDriftCheckBaselinesFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageDriftCheckBaselinesFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory, InnerModelPackageDriftCheckExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckExplainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T5, subFactoryAction));
}
