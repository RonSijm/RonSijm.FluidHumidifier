// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerModelContainerDefinitionFactory(Action<Humidifier.SageMaker.ModelTypes.ContainerDefinition> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.ModelTypes.ContainerDefinition>
{

    internal InnerModelImageConfigFactory ImageConfigFactory { get; set; }

    internal InnerModelModelDataSourceFactory ModelDataSourceFactory { get; set; }

    internal InnerModelMultiModelConfigFactory MultiModelConfigFactory { get; set; }

    protected override Humidifier.SageMaker.ModelTypes.ContainerDefinition Create()
    {
        var containerDefinitionResult = CreateContainerDefinition();
        factoryAction?.Invoke(containerDefinitionResult);

        return containerDefinitionResult;
    }

    private Humidifier.SageMaker.ModelTypes.ContainerDefinition CreateContainerDefinition()
    {
        var containerDefinitionResult = new Humidifier.SageMaker.ModelTypes.ContainerDefinition();

        return containerDefinitionResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.ModelTypes.ContainerDefinition result)
    {
        base.CreateChildren(result);

        result.ImageConfig ??= ImageConfigFactory?.Build();
        result.ModelDataSource ??= ModelDataSourceFactory?.Build();
        result.MultiModelConfig ??= MultiModelConfigFactory?.Build();
    }

} // End Of Class

public static class InnerModelContainerDefinitionFactoryExtensions
{
    public static CombinedResult<InnerModelContainerDefinitionFactory, InnerModelImageConfigFactory> WithImageConfig(this InnerModelContainerDefinitionFactory parentFactory, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null)
    {
        parentFactory.ImageConfigFactory = new InnerModelImageConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ImageConfigFactory);
    }

    public static CombinedResult<InnerModelContainerDefinitionFactory, InnerModelModelDataSourceFactory> WithModelDataSource(this InnerModelContainerDefinitionFactory parentFactory, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null)
    {
        parentFactory.ModelDataSourceFactory = new InnerModelModelDataSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelDataSourceFactory);
    }

    public static CombinedResult<InnerModelContainerDefinitionFactory, InnerModelMultiModelConfigFactory> WithMultiModelConfig(this InnerModelContainerDefinitionFactory parentFactory, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null)
    {
        parentFactory.MultiModelConfigFactory = new InnerModelMultiModelConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MultiModelConfigFactory);
    }

    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, InnerModelImageConfigFactory> WithImageConfig<T1>(this CombinedResult<InnerModelContainerDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithImageConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, InnerModelImageConfigFactory> WithImageConfig<T1>(this CombinedResult<T1, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithImageConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, InnerModelImageConfigFactory> WithImageConfig<T1, T2>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, InnerModelImageConfigFactory> WithImageConfig<T1, T2>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, InnerModelImageConfigFactory> WithImageConfig<T1, T2>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, T4, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3, T4>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, T4, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, T4, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, T4, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelContainerDefinitionFactory, InnerModelImageConfigFactory> WithImageConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ImageConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, InnerModelModelDataSourceFactory> WithModelDataSource<T1>(this CombinedResult<InnerModelContainerDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, InnerModelModelDataSourceFactory> WithModelDataSource<T1>(this CombinedResult<T1, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, T4, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3, T4>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, T4, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, T4, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, T4, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelContainerDefinitionFactory, InnerModelModelDataSourceFactory> WithModelDataSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.ModelDataSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataSource(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1>(this CombinedResult<InnerModelContainerDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1>(this CombinedResult<T1, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, T4, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3, T4>(this CombinedResult<InnerModelContainerDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, T4, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelContainerDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, T4, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelContainerDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, T4, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelContainerDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelContainerDefinitionFactory, InnerModelMultiModelConfigFactory> WithMultiModelConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelContainerDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.ModelTypes.MultiModelConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMultiModelConfig(combinedResult.T5, subFactoryAction));
}
