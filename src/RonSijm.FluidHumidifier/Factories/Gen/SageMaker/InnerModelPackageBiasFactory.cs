// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerModelPackageBiasFactory(Action<Humidifier.SageMaker.ModelPackageTypes.Bias> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.ModelPackageTypes.Bias>
{

    internal InnerModelPackageMetricsSourceFactory ReportFactory { get; set; }

    internal InnerModelPackageMetricsSourceFactory PreTrainingReportFactory { get; set; }

    internal InnerModelPackageMetricsSourceFactory PostTrainingReportFactory { get; set; }

    protected override Humidifier.SageMaker.ModelPackageTypes.Bias Create()
    {
        var biasResult = CreateBias();
        factoryAction?.Invoke(biasResult);

        return biasResult;
    }

    private Humidifier.SageMaker.ModelPackageTypes.Bias CreateBias()
    {
        var biasResult = new Humidifier.SageMaker.ModelPackageTypes.Bias();

        return biasResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.ModelPackageTypes.Bias result)
    {
        base.CreateChildren(result);

        result.Report ??= ReportFactory?.Build();
        result.PreTrainingReport ??= PreTrainingReportFactory?.Build();
        result.PostTrainingReport ??= PostTrainingReportFactory?.Build();
    }

} // End Of Class

public static class InnerModelPackageBiasFactoryExtensions
{
    public static CombinedResult<InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithReport(this InnerModelPackageBiasFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null)
    {
        parentFactory.ReportFactory = new InnerModelPackageMetricsSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ReportFactory);
    }

    public static CombinedResult<InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport(this InnerModelPackageBiasFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null)
    {
        parentFactory.PreTrainingReportFactory = new InnerModelPackageMetricsSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PreTrainingReportFactory);
    }

    public static CombinedResult<InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport(this InnerModelPackageBiasFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null)
    {
        parentFactory.PostTrainingReportFactory = new InnerModelPackageMetricsSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PostTrainingReportFactory);
    }

    public static CombinedResult<InnerModelPackageBiasFactory, T1, InnerModelPackageMetricsSourceFactory> WithReport<T1>(this CombinedResult<InnerModelPackageBiasFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithReport<T1>(this CombinedResult<T1, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, T4, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, T4, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, T4, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, T4, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReport(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1>(this CombinedResult<InnerModelPackageBiasFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1>(this CombinedResult<T1, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, T4, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, T4, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, T4, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, T4, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPreTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreTrainingReport(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1>(this CombinedResult<InnerModelPackageBiasFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1>(this CombinedResult<T1, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, T4, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageBiasFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, T4, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageBiasFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, T4, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageBiasFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, T4, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageBiasFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageBiasFactory, InnerModelPackageMetricsSourceFactory> WithPostTrainingReport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageBiasFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetricsSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPostTrainingReport(combinedResult.T5, subFactoryAction));
}
