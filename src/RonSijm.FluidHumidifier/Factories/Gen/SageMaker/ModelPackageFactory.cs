// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class ModelPackageFactory(string resourceName = null, Action<Humidifier.SageMaker.ModelPackage> factoryAction = null) : ResourceFactory<Humidifier.SageMaker.ModelPackage>(resourceName)
{

    internal List<InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> AdditionalInferenceSpecificationsToAddFactories { get; set; } = [];

    internal List<InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> AdditionalInferenceSpecificationsFactories { get; set; } = [];

    internal InnerModelPackageDriftCheckBaselinesFactory DriftCheckBaselinesFactory { get; set; }

    internal InnerModelPackageModelMetricsFactory ModelMetricsFactory { get; set; }

    internal InnerModelPackageMetadataPropertiesFactory MetadataPropertiesFactory { get; set; }

    internal InnerModelPackageSourceAlgorithmSpecificationFactory SourceAlgorithmSpecificationFactory { get; set; }

    internal InnerModelPackageModelPackageStatusDetailsFactory ModelPackageStatusDetailsFactory { get; set; }

    internal InnerModelPackageSecurityConfigFactory SecurityConfigFactory { get; set; }

    internal InnerModelPackageInferenceSpecificationFactory InferenceSpecificationFactory { get; set; }

    internal InnerModelPackageModelCardFactory ModelCardFactory { get; set; }

    internal InnerModelPackageValidationSpecificationFactory ValidationSpecificationFactory { get; set; }

    protected override Humidifier.SageMaker.ModelPackage Create()
    {
        var modelPackageResult = CreateModelPackage();
        factoryAction?.Invoke(modelPackageResult);

        return modelPackageResult;
    }

    private Humidifier.SageMaker.ModelPackage CreateModelPackage()
    {
        var modelPackageResult = new Humidifier.SageMaker.ModelPackage
        {
            GivenName = InputResourceName,
        };

        return modelPackageResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.ModelPackage result)
    {
        base.CreateChildren(result);

        result.AdditionalInferenceSpecificationsToAdd = AdditionalInferenceSpecificationsToAddFactories.Any() ? AdditionalInferenceSpecificationsToAddFactories.Select(x => x.Build()).ToList() : null;
        result.AdditionalInferenceSpecifications = AdditionalInferenceSpecificationsFactories.Any() ? AdditionalInferenceSpecificationsFactories.Select(x => x.Build()).ToList() : null;
        result.DriftCheckBaselines ??= DriftCheckBaselinesFactory?.Build();
        result.ModelMetrics ??= ModelMetricsFactory?.Build();
        result.MetadataProperties ??= MetadataPropertiesFactory?.Build();
        result.SourceAlgorithmSpecification ??= SourceAlgorithmSpecificationFactory?.Build();
        result.ModelPackageStatusDetails ??= ModelPackageStatusDetailsFactory?.Build();
        result.SecurityConfig ??= SecurityConfigFactory?.Build();
        result.InferenceSpecification ??= InferenceSpecificationFactory?.Build();
        result.ModelCard ??= ModelCardFactory?.Build();
        result.ValidationSpecification ??= ValidationSpecificationFactory?.Build();
    }

} // End Of Class

public static class ModelPackageFactoryExtensions
{
    public static CombinedResult<ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null)
    {
        var factory = new InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory(subFactoryAction);
        parentFactory.AdditionalInferenceSpecificationsToAddFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null)
    {
        var factory = new InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory(subFactoryAction);
        parentFactory.AdditionalInferenceSpecificationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ModelPackageFactory, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null)
    {
        parentFactory.DriftCheckBaselinesFactory = new InnerModelPackageDriftCheckBaselinesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DriftCheckBaselinesFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageModelMetricsFactory> WithModelMetrics(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null)
    {
        parentFactory.ModelMetricsFactory = new InnerModelPackageModelMetricsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelMetricsFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null)
    {
        parentFactory.MetadataPropertiesFactory = new InnerModelPackageMetadataPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MetadataPropertiesFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null)
    {
        parentFactory.SourceAlgorithmSpecificationFactory = new InnerModelPackageSourceAlgorithmSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceAlgorithmSpecificationFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null)
    {
        parentFactory.ModelPackageStatusDetailsFactory = new InnerModelPackageModelPackageStatusDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelPackageStatusDetailsFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageSecurityConfigFactory> WithSecurityConfig(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null)
    {
        parentFactory.SecurityConfigFactory = new InnerModelPackageSecurityConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SecurityConfigFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null)
    {
        parentFactory.InferenceSpecificationFactory = new InnerModelPackageInferenceSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InferenceSpecificationFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageModelCardFactory> WithModelCard(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null)
    {
        parentFactory.ModelCardFactory = new InnerModelPackageModelCardFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelCardFactory);
    }

    public static CombinedResult<ModelPackageFactory, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification(this ModelPackageFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null)
    {
        parentFactory.ValidationSpecificationFactory = new InnerModelPackageValidationSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ValidationSpecificationFactory);
    }

    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecificationsToAdd<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecificationsToAdd(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageAdditionalInferenceSpecificationDefinitionFactory> WithAdditionalInferenceSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.AdditionalInferenceSpecificationDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdditionalInferenceSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageDriftCheckBaselinesFactory> WithDriftCheckBaselines<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.DriftCheckBaselines> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDriftCheckBaselines(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageModelMetricsFactory> WithModelMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelMetrics(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetadataProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetadataProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageMetadataPropertiesFactory> WithMetadataProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.MetadataProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadataProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageSourceAlgorithmSpecificationFactory> WithSourceAlgorithmSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SourceAlgorithmSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceAlgorithmSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageModelPackageStatusDetailsFactory> WithModelPackageStatusDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelPackageStatusDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelPackageStatusDetails(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecurityConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecurityConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageSecurityConfigFactory> WithSecurityConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.SecurityConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecurityConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageInferenceSpecificationFactory> WithInferenceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.InferenceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageModelCardFactory> WithModelCard<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelCard(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageModelCardFactory> WithModelCard<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelCard(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageModelCardFactory> WithModelCard<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageModelCardFactory> WithModelCard<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageModelCardFactory> WithModelCard<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageModelCardFactory> WithModelCard<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelCard> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelCard(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1>(this CombinedResult<ModelPackageFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithValidationSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1>(this CombinedResult<T1, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithValidationSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2>(this CombinedResult<ModelPackageFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2>(this CombinedResult<T1, ModelPackageFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2>(this CombinedResult<T1, T2, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3>(this CombinedResult<ModelPackageFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3>(this CombinedResult<T1, ModelPackageFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3>(this CombinedResult<T1, T2, ModelPackageFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ModelPackageFactory, T1, T2, T3, T4, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3, T4>(this CombinedResult<ModelPackageFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ModelPackageFactory, T2, T3, T4, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3, T4>(this CombinedResult<T1, ModelPackageFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ModelPackageFactory, T3, T4, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, ModelPackageFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ModelPackageFactory, T4, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ModelPackageFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ModelPackageFactory, InnerModelPackageValidationSpecificationFactory> WithValidationSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ModelPackageFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ValidationSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationSpecification(combinedResult.T5, subFactoryAction));
}
