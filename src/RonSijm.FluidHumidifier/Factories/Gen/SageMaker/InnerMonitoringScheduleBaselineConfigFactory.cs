// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerMonitoringScheduleBaselineConfigFactory(Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig>
{

    internal InnerMonitoringScheduleStatisticsResourceFactory StatisticsResourceFactory { get; set; }

    internal InnerMonitoringScheduleConstraintsResourceFactory ConstraintsResourceFactory { get; set; }

    protected override Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig Create()
    {
        var baselineConfigResult = CreateBaselineConfig();
        factoryAction?.Invoke(baselineConfigResult);

        return baselineConfigResult;
    }

    private Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig CreateBaselineConfig()
    {
        var baselineConfigResult = new Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig();

        return baselineConfigResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig result)
    {
        base.CreateChildren(result);

        result.StatisticsResource ??= StatisticsResourceFactory?.Build();
        result.ConstraintsResource ??= ConstraintsResourceFactory?.Build();
    }

} // End Of Class

public static class InnerMonitoringScheduleBaselineConfigFactoryExtensions
{
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource(this InnerMonitoringScheduleBaselineConfigFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null)
    {
        parentFactory.StatisticsResourceFactory = new InnerMonitoringScheduleStatisticsResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.StatisticsResourceFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource(this InnerMonitoringScheduleBaselineConfigFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null)
    {
        parentFactory.ConstraintsResourceFactory = new InnerMonitoringScheduleConstraintsResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConstraintsResourceFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithStatisticsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithStatisticsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3, T4, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3, T4, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3, T4, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory, T4, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleStatisticsResourceFactory> WithStatisticsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StatisticsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStatisticsResource(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithConstraintsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithConstraintsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3, T4, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleBaselineConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3, T4, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleBaselineConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3, T4, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleBaselineConfigFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory, T4, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleBaselineConfigFactory, InnerMonitoringScheduleConstraintsResourceFactory> WithConstraintsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleBaselineConfigFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.ConstraintsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConstraintsResource(combinedResult.T5, subFactoryAction));
}
