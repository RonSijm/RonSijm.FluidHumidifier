// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerModelPackageModelMetricsFactory(Action<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.ModelPackageTypes.ModelMetrics>
{

    internal InnerModelPackageModelDataQualityFactory ModelDataQualityFactory { get; set; }

    internal InnerModelPackageBiasFactory BiasFactory { get; set; }

    internal InnerModelPackageModelQualityFactory ModelQualityFactory { get; set; }

    internal InnerModelPackageExplainabilityFactory ExplainabilityFactory { get; set; }

    protected override Humidifier.SageMaker.ModelPackageTypes.ModelMetrics Create()
    {
        var modelMetricsResult = CreateModelMetrics();
        factoryAction?.Invoke(modelMetricsResult);

        return modelMetricsResult;
    }

    private Humidifier.SageMaker.ModelPackageTypes.ModelMetrics CreateModelMetrics()
    {
        var modelMetricsResult = new Humidifier.SageMaker.ModelPackageTypes.ModelMetrics();

        return modelMetricsResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.ModelPackageTypes.ModelMetrics result)
    {
        base.CreateChildren(result);

        result.ModelDataQuality ??= ModelDataQualityFactory?.Build();
        result.Bias ??= BiasFactory?.Build();
        result.ModelQuality ??= ModelQualityFactory?.Build();
        result.Explainability ??= ExplainabilityFactory?.Build();
    }

} // End Of Class

public static class InnerModelPackageModelMetricsFactoryExtensions
{
    public static CombinedResult<InnerModelPackageModelMetricsFactory, InnerModelPackageModelDataQualityFactory> WithModelDataQuality(this InnerModelPackageModelMetricsFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null)
    {
        parentFactory.ModelDataQualityFactory = new InnerModelPackageModelDataQualityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelDataQualityFactory);
    }

    public static CombinedResult<InnerModelPackageModelMetricsFactory, InnerModelPackageBiasFactory> WithBias(this InnerModelPackageModelMetricsFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null)
    {
        parentFactory.BiasFactory = new InnerModelPackageBiasFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BiasFactory);
    }

    public static CombinedResult<InnerModelPackageModelMetricsFactory, InnerModelPackageModelQualityFactory> WithModelQuality(this InnerModelPackageModelMetricsFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null)
    {
        parentFactory.ModelQualityFactory = new InnerModelPackageModelQualityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ModelQualityFactory);
    }

    public static CombinedResult<InnerModelPackageModelMetricsFactory, InnerModelPackageExplainabilityFactory> WithExplainability(this InnerModelPackageModelMetricsFactory parentFactory, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null)
    {
        parentFactory.ExplainabilityFactory = new InnerModelPackageExplainabilityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExplainabilityFactory);
    }

    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory, InnerModelPackageModelDataQualityFactory> WithModelDataQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelDataQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelDataQuality(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, InnerModelPackageBiasFactory> WithBias<T1>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, InnerModelPackageBiasFactory> WithBias<T1>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, InnerModelPackageBiasFactory> WithBias<T1, T2>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, InnerModelPackageBiasFactory> WithBias<T1, T2>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, InnerModelPackageBiasFactory> WithBias<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, InnerModelPackageBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, InnerModelPackageBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, InnerModelPackageBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, InnerModelPackageBiasFactory> WithBias<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4, InnerModelPackageBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4, InnerModelPackageBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4, InnerModelPackageBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4, InnerModelPackageBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory, InnerModelPackageBiasFactory> WithBias<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Bias> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBias(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, InnerModelPackageModelQualityFactory> WithModelQuality<T1>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, InnerModelPackageModelQualityFactory> WithModelQuality<T1>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory, InnerModelPackageModelQualityFactory> WithModelQuality<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.ModelQuality> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithModelQuality(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, InnerModelPackageExplainabilityFactory> WithExplainability<T1>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, InnerModelPackageExplainabilityFactory> WithExplainability<T1>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<InnerModelPackageModelMetricsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, InnerModelPackageModelMetricsFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerModelPackageModelMetricsFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerModelPackageModelMetricsFactory, T4> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory, InnerModelPackageExplainabilityFactory> WithExplainability<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerModelPackageModelMetricsFactory> combinedResult, Action<Humidifier.SageMaker.ModelPackageTypes.Explainability> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExplainability(combinedResult.T5, subFactoryAction));
}
