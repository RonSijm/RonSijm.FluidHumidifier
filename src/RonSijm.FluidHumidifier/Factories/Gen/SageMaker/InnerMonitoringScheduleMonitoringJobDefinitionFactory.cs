// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SageMaker;

public class InnerMonitoringScheduleMonitoringJobDefinitionFactory(Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition> factoryAction = null) : SubResourceFactory<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition>
{

    internal InnerMonitoringScheduleMonitoringResourcesFactory MonitoringResourcesFactory { get; set; }

    internal InnerMonitoringScheduleBaselineConfigFactory BaselineConfigFactory { get; set; }

    internal InnerMonitoringScheduleStoppingConditionFactory StoppingConditionFactory { get; set; }

    internal InnerMonitoringScheduleMonitoringAppSpecificationFactory MonitoringAppSpecificationFactory { get; set; }

    internal InnerMonitoringScheduleNetworkConfigFactory NetworkConfigFactory { get; set; }

    internal InnerMonitoringScheduleMonitoringOutputConfigFactory MonitoringOutputConfigFactory { get; set; }

    protected override Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition Create()
    {
        var monitoringJobDefinitionResult = CreateMonitoringJobDefinition();
        factoryAction?.Invoke(monitoringJobDefinitionResult);

        return monitoringJobDefinitionResult;
    }

    private Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition CreateMonitoringJobDefinition()
    {
        var monitoringJobDefinitionResult = new Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition();

        return monitoringJobDefinitionResult;
    }
    public override void CreateChildren(Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringJobDefinition result)
    {
        base.CreateChildren(result);

        result.MonitoringResources ??= MonitoringResourcesFactory?.Build();
        result.BaselineConfig ??= BaselineConfigFactory?.Build();
        result.StoppingCondition ??= StoppingConditionFactory?.Build();
        result.MonitoringAppSpecification ??= MonitoringAppSpecificationFactory?.Build();
        result.NetworkConfig ??= NetworkConfigFactory?.Build();
        result.MonitoringOutputConfig ??= MonitoringOutputConfigFactory?.Build();
    }

} // End Of Class

public static class InnerMonitoringScheduleMonitoringJobDefinitionFactoryExtensions
{
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources(this InnerMonitoringScheduleMonitoringJobDefinitionFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null)
    {
        parentFactory.MonitoringResourcesFactory = new InnerMonitoringScheduleMonitoringResourcesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MonitoringResourcesFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig(this InnerMonitoringScheduleMonitoringJobDefinitionFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null)
    {
        parentFactory.BaselineConfigFactory = new InnerMonitoringScheduleBaselineConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BaselineConfigFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition(this InnerMonitoringScheduleMonitoringJobDefinitionFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null)
    {
        parentFactory.StoppingConditionFactory = new InnerMonitoringScheduleStoppingConditionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.StoppingConditionFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification(this InnerMonitoringScheduleMonitoringJobDefinitionFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null)
    {
        parentFactory.MonitoringAppSpecificationFactory = new InnerMonitoringScheduleMonitoringAppSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MonitoringAppSpecificationFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig(this InnerMonitoringScheduleMonitoringJobDefinitionFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null)
    {
        parentFactory.NetworkConfigFactory = new InnerMonitoringScheduleNetworkConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NetworkConfigFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig(this InnerMonitoringScheduleMonitoringJobDefinitionFactory parentFactory, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null)
    {
        parentFactory.MonitoringOutputConfigFactory = new InnerMonitoringScheduleMonitoringOutputConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MonitoringOutputConfigFactory);
    }

    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringResourcesFactory> WithMonitoringResources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringResources(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithBaselineConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithBaselineConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleBaselineConfigFactory> WithBaselineConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.BaselineConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBaselineConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, WithStoppingCondition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, WithStoppingCondition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleStoppingConditionFactory> WithStoppingCondition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.StoppingCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStoppingCondition(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringAppSpecificationFactory> WithMonitoringAppSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringAppSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringAppSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleNetworkConfigFactory> WithNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.NetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3, T4>(this CombinedResult<InnerMonitoringScheduleMonitoringJobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitoringScheduleMonitoringJobDefinitionFactory, T4> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory, InnerMonitoringScheduleMonitoringOutputConfigFactory> WithMonitoringOutputConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitoringScheduleMonitoringJobDefinitionFactory> combinedResult, Action<Humidifier.SageMaker.MonitoringScheduleTypes.MonitoringOutputConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringOutputConfig(combinedResult.T5, subFactoryAction));
}
