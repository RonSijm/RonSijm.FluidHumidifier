// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ServiceCatalog;

public class CloudFormationProductFactory(string resourceName = null, Action<Humidifier.ServiceCatalog.CloudFormationProduct> factoryAction = null) : ResourceFactory<Humidifier.ServiceCatalog.CloudFormationProduct>(resourceName)
{

    internal List<InnerCloudFormationProductProvisioningArtifactPropertiesFactory> ProvisioningArtifactParametersFactories { get; set; } = [];

    internal InnerCloudFormationProductSourceConnectionFactory SourceConnectionFactory { get; set; }

    protected override Humidifier.ServiceCatalog.CloudFormationProduct Create()
    {
        var cloudFormationProductResult = CreateCloudFormationProduct();
        factoryAction?.Invoke(cloudFormationProductResult);

        return cloudFormationProductResult;
    }

    private Humidifier.ServiceCatalog.CloudFormationProduct CreateCloudFormationProduct()
    {
        var cloudFormationProductResult = new Humidifier.ServiceCatalog.CloudFormationProduct
        {
            GivenName = InputResourceName,
        };

        return cloudFormationProductResult;
    }
    public override void CreateChildren(Humidifier.ServiceCatalog.CloudFormationProduct result)
    {
        base.CreateChildren(result);

        result.ProvisioningArtifactParameters = ProvisioningArtifactParametersFactories.Any() ? ProvisioningArtifactParametersFactories.Select(x => x.Build()).ToList() : null;
        result.SourceConnection ??= SourceConnectionFactory?.Build();
    }

} // End Of Class

public static class CloudFormationProductFactoryExtensions
{
    public static CombinedResult<CloudFormationProductFactory, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters(this CloudFormationProductFactory parentFactory, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null)
    {
        var factory = new InnerCloudFormationProductProvisioningArtifactPropertiesFactory(subFactoryAction);
        parentFactory.ProvisioningArtifactParametersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<CloudFormationProductFactory, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection(this CloudFormationProductFactory parentFactory, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null)
    {
        parentFactory.SourceConnectionFactory = new InnerCloudFormationProductSourceConnectionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceConnectionFactory);
    }

    public static CombinedResult<CloudFormationProductFactory, T1, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1>(this CombinedResult<CloudFormationProductFactory, T1> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1>(this CombinedResult<T1, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, T2, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2>(this CombinedResult<CloudFormationProductFactory, T1, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, T2, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2>(this CombinedResult<T1, CloudFormationProductFactory, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProductFactory, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2>(this CombinedResult<T1, T2, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, T2, T3, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3>(this CombinedResult<CloudFormationProductFactory, T1, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, T2, T3, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3>(this CombinedResult<T1, CloudFormationProductFactory, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProductFactory, T3, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3>(this CombinedResult<T1, T2, CloudFormationProductFactory, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProductFactory, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, T2, T3, T4, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3, T4>(this CombinedResult<CloudFormationProductFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, T2, T3, T4, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3, T4>(this CombinedResult<T1, CloudFormationProductFactory, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProductFactory, T3, T4, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, CloudFormationProductFactory, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProductFactory, T4, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CloudFormationProductFactory, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CloudFormationProductFactory, InnerCloudFormationProductProvisioningArtifactPropertiesFactory> WithProvisioningArtifactParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.ProvisioningArtifactProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningArtifactParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1>(this CombinedResult<CloudFormationProductFactory, T1> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceConnection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1>(this CombinedResult<T1, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceConnection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, T2, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2>(this CombinedResult<CloudFormationProductFactory, T1, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, T2, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2>(this CombinedResult<T1, CloudFormationProductFactory, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProductFactory, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2>(this CombinedResult<T1, T2, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, T2, T3, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3>(this CombinedResult<CloudFormationProductFactory, T1, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, T2, T3, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3>(this CombinedResult<T1, CloudFormationProductFactory, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProductFactory, T3, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3>(this CombinedResult<T1, T2, CloudFormationProductFactory, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProductFactory, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3>(this CombinedResult<T1, T2, T3, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CloudFormationProductFactory, T1, T2, T3, T4, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3, T4>(this CombinedResult<CloudFormationProductFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProductFactory, T2, T3, T4, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3, T4>(this CombinedResult<T1, CloudFormationProductFactory, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProductFactory, T3, T4, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3, T4>(this CombinedResult<T1, T2, CloudFormationProductFactory, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProductFactory, T4, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CloudFormationProductFactory, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CloudFormationProductFactory, InnerCloudFormationProductSourceConnectionFactory> WithSourceConnection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CloudFormationProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProductTypes.SourceConnection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConnection(combinedResult.T5, subFactoryAction));
}
