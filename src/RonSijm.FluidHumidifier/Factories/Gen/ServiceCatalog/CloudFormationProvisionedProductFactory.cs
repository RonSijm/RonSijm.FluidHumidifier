// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ServiceCatalog;

public class CloudFormationProvisionedProductFactory(string resourceName = null, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProduct> factoryAction = null) : ResourceFactory<Humidifier.ServiceCatalog.CloudFormationProvisionedProduct>(resourceName)
{

    internal List<InnerCloudFormationProvisionedProductProvisioningParameterFactory> ProvisioningParametersFactories { get; set; } = [];

    internal InnerCloudFormationProvisionedProductProvisioningPreferencesFactory ProvisioningPreferencesFactory { get; set; }

    protected override Humidifier.ServiceCatalog.CloudFormationProvisionedProduct Create()
    {
        var cloudFormationProvisionedProductResult = CreateCloudFormationProvisionedProduct();
        factoryAction?.Invoke(cloudFormationProvisionedProductResult);

        return cloudFormationProvisionedProductResult;
    }

    private Humidifier.ServiceCatalog.CloudFormationProvisionedProduct CreateCloudFormationProvisionedProduct()
    {
        var cloudFormationProvisionedProductResult = new Humidifier.ServiceCatalog.CloudFormationProvisionedProduct
        {
            GivenName = InputResourceName,
        };

        return cloudFormationProvisionedProductResult;
    }
    public override void CreateChildren(Humidifier.ServiceCatalog.CloudFormationProvisionedProduct result)
    {
        base.CreateChildren(result);

        result.ProvisioningParameters = ProvisioningParametersFactories.Any() ? ProvisioningParametersFactories.Select(x => x.Build()).ToList() : null;
        result.ProvisioningPreferences ??= ProvisioningPreferencesFactory?.Build();
    }

} // End Of Class

public static class CloudFormationProvisionedProductFactoryExtensions
{
    public static CombinedResult<CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters(this CloudFormationProvisionedProductFactory parentFactory, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null)
    {
        var factory = new InnerCloudFormationProvisionedProductProvisioningParameterFactory(subFactoryAction);
        parentFactory.ProvisioningParametersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences(this CloudFormationProvisionedProductFactory parentFactory, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null)
    {
        parentFactory.ProvisioningPreferencesFactory = new InnerCloudFormationProvisionedProductProvisioningPreferencesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProvisioningPreferencesFactory);
    }

    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1>(this CombinedResult<CloudFormationProvisionedProductFactory, T1> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1>(this CombinedResult<T1, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2>(this CombinedResult<CloudFormationProvisionedProductFactory, T1, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2>(this CombinedResult<T1, CloudFormationProvisionedProductFactory, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2>(this CombinedResult<T1, T2, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3>(this CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3>(this CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3>(this CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3, T4, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3, T4>(this CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3, T4, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3, T4>(this CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3, T4, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory, T4, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningParameterFactory> WithProvisioningParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1>(this CombinedResult<CloudFormationProvisionedProductFactory, T1> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1>(this CombinedResult<T1, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2>(this CombinedResult<CloudFormationProvisionedProductFactory, T1, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2>(this CombinedResult<T1, CloudFormationProvisionedProductFactory, T2> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2>(this CombinedResult<T1, T2, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3>(this CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3>(this CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3>(this CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3>(this CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3, T4, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3, T4>(this CombinedResult<CloudFormationProvisionedProductFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3, T4, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3, T4>(this CombinedResult<T1, CloudFormationProvisionedProductFactory, T2, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3, T4, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3, T4>(this CombinedResult<T1, T2, CloudFormationProvisionedProductFactory, T3, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory, T4, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CloudFormationProvisionedProductFactory, T4> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CloudFormationProvisionedProductFactory, InnerCloudFormationProvisionedProductProvisioningPreferencesFactory> WithProvisioningPreferences<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CloudFormationProvisionedProductFactory> combinedResult, Action<Humidifier.ServiceCatalog.CloudFormationProvisionedProductTypes.ProvisioningPreferences> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisioningPreferences(combinedResult.T5, subFactoryAction));
}
