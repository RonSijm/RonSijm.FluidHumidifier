// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.QuickSight;

public class DataSetFactory(string resourceName = null, Action<Humidifier.QuickSight.DataSet> factoryAction = null) : ResourceFactory<Humidifier.QuickSight.DataSet>(resourceName)
{

    internal List<InnerDataSetColumnLevelPermissionRuleFactory> ColumnLevelPermissionRulesFactories { get; set; } = [];

    internal List<InnerDataSetColumnGroupFactory> ColumnGroupsFactories { get; set; } = [];

    internal List<InnerDataSetDatasetParameterFactory> DatasetParametersFactories { get; set; } = [];

    internal List<InnerDataSetResourcePermissionFactory> PermissionsFactories { get; set; } = [];

    internal InnerDataSetRowLevelPermissionDataSetFactory RowLevelPermissionDataSetFactory { get; set; }

    internal InnerDataSetDataSetRefreshPropertiesFactory DataSetRefreshPropertiesFactory { get; set; }

    internal InnerDataSetRowLevelPermissionTagConfigurationFactory RowLevelPermissionTagConfigurationFactory { get; set; }

    internal InnerDataSetIngestionWaitPolicyFactory IngestionWaitPolicyFactory { get; set; }

    internal InnerDataSetDataSetUsageConfigurationFactory DataSetUsageConfigurationFactory { get; set; }

    protected override Humidifier.QuickSight.DataSet Create()
    {
        var dataSetResult = CreateDataSet();
        factoryAction?.Invoke(dataSetResult);

        return dataSetResult;
    }

    private Humidifier.QuickSight.DataSet CreateDataSet()
    {
        var dataSetResult = new Humidifier.QuickSight.DataSet
        {
            GivenName = InputResourceName,
        };

        return dataSetResult;
    }
    public override void CreateChildren(Humidifier.QuickSight.DataSet result)
    {
        base.CreateChildren(result);

        result.ColumnLevelPermissionRules = ColumnLevelPermissionRulesFactories.Any() ? ColumnLevelPermissionRulesFactories.Select(x => x.Build()).ToList() : null;
        result.ColumnGroups = ColumnGroupsFactories.Any() ? ColumnGroupsFactories.Select(x => x.Build()).ToList() : null;
        result.DatasetParameters = DatasetParametersFactories.Any() ? DatasetParametersFactories.Select(x => x.Build()).ToList() : null;
        result.Permissions = PermissionsFactories.Any() ? PermissionsFactories.Select(x => x.Build()).ToList() : null;
        result.RowLevelPermissionDataSet ??= RowLevelPermissionDataSetFactory?.Build();
        result.DataSetRefreshProperties ??= DataSetRefreshPropertiesFactory?.Build();
        result.RowLevelPermissionTagConfiguration ??= RowLevelPermissionTagConfigurationFactory?.Build();
        result.IngestionWaitPolicy ??= IngestionWaitPolicyFactory?.Build();
        result.DataSetUsageConfiguration ??= DataSetUsageConfigurationFactory?.Build();
    }

} // End Of Class

public static class DataSetFactoryExtensions
{
    public static CombinedResult<DataSetFactory, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null)
    {
        var factory = new InnerDataSetColumnLevelPermissionRuleFactory(subFactoryAction);
        parentFactory.ColumnLevelPermissionRulesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DataSetFactory, InnerDataSetColumnGroupFactory> WithColumnGroups(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null)
    {
        var factory = new InnerDataSetColumnGroupFactory(subFactoryAction);
        parentFactory.ColumnGroupsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DataSetFactory, InnerDataSetDatasetParameterFactory> WithDatasetParameters(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null)
    {
        var factory = new InnerDataSetDatasetParameterFactory(subFactoryAction);
        parentFactory.DatasetParametersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DataSetFactory, InnerDataSetResourcePermissionFactory> WithPermissions(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null)
    {
        var factory = new InnerDataSetResourcePermissionFactory(subFactoryAction);
        parentFactory.PermissionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DataSetFactory, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null)
    {
        parentFactory.RowLevelPermissionDataSetFactory = new InnerDataSetRowLevelPermissionDataSetFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RowLevelPermissionDataSetFactory);
    }

    public static CombinedResult<DataSetFactory, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null)
    {
        parentFactory.DataSetRefreshPropertiesFactory = new InnerDataSetDataSetRefreshPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataSetRefreshPropertiesFactory);
    }

    public static CombinedResult<DataSetFactory, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null)
    {
        parentFactory.RowLevelPermissionTagConfigurationFactory = new InnerDataSetRowLevelPermissionTagConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RowLevelPermissionTagConfigurationFactory);
    }

    public static CombinedResult<DataSetFactory, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null)
    {
        parentFactory.IngestionWaitPolicyFactory = new InnerDataSetIngestionWaitPolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IngestionWaitPolicyFactory);
    }

    public static CombinedResult<DataSetFactory, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration(this DataSetFactory parentFactory, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null)
    {
        parentFactory.DataSetUsageConfigurationFactory = new InnerDataSetDataSetUsageConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataSetUsageConfigurationFactory);
    }

    public static CombinedResult<DataSetFactory, T1, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetColumnLevelPermissionRuleFactory> WithColumnLevelPermissionRules<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnLevelPermissionRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnLevelPermissionRules(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetColumnGroupFactory> WithColumnGroups<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, WithColumnGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetColumnGroupFactory> WithColumnGroups<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, WithColumnGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetColumnGroupFactory> WithColumnGroups<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ColumnGroup> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithColumnGroups(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatasetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatasetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetDatasetParameterFactory> WithDatasetParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DatasetParameter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatasetParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetResourcePermissionFactory> WithPermissions<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetResourcePermissionFactory> WithPermissions<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetRowLevelPermissionDataSetFactory> WithRowLevelPermissionDataSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionDataSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionDataSet(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetDataSetRefreshPropertiesFactory> WithDataSetRefreshProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetRefreshProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetRefreshProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetRowLevelPermissionTagConfigurationFactory> WithRowLevelPermissionTagConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.RowLevelPermissionTagConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRowLevelPermissionTagConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetIngestionWaitPolicyFactory> WithIngestionWaitPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.IngestionWaitPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIngestionWaitPolicy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1>(this CombinedResult<DataSetFactory, T1> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1>(this CombinedResult<T1, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2>(this CombinedResult<DataSetFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2>(this CombinedResult<T1, DataSetFactory, T2> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2>(this CombinedResult<T1, T2, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3>(this CombinedResult<DataSetFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3>(this CombinedResult<T1, DataSetFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, DataSetFactory, T3> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataSetFactory, T1, T2, T3, T4, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3, T4>(this CombinedResult<DataSetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataSetFactory, T2, T3, T4, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, DataSetFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataSetFactory, T3, T4, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataSetFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataSetFactory, T4, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataSetFactory, T4> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataSetFactory, InnerDataSetDataSetUsageConfigurationFactory> WithDataSetUsageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataSetFactory> combinedResult, Action<Humidifier.QuickSight.DataSetTypes.DataSetUsageConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSetUsageConfiguration(combinedResult.T5, subFactoryAction));
}
