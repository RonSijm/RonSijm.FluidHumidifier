// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.QuickSight;

public class AnalysisFactory(string resourceName = null, Action<Humidifier.QuickSight.Analysis> factoryAction = null) : ResourceFactory<Humidifier.QuickSight.Analysis>(resourceName)
{

    internal List<InnerAnalysisAnalysisErrorFactory> ErrorsFactories { get; set; } = [];

    internal List<InnerAnalysisResourcePermissionFactory> PermissionsFactories { get; set; } = [];

    internal List<InnerAnalysisSheetFactory> SheetsFactories { get; set; } = [];

    internal InnerAnalysisParametersFactory ParametersFactory { get; set; }

    internal InnerAnalysisAnalysisSourceEntityFactory SourceEntityFactory { get; set; }

    internal InnerAnalysisAnalysisDefinitionFactory DefinitionFactory { get; set; }

    internal InnerAnalysisValidationStrategyFactory ValidationStrategyFactory { get; set; }

    protected override Humidifier.QuickSight.Analysis Create()
    {
        var analysisResult = CreateAnalysis();
        factoryAction?.Invoke(analysisResult);

        return analysisResult;
    }

    private Humidifier.QuickSight.Analysis CreateAnalysis()
    {
        var analysisResult = new Humidifier.QuickSight.Analysis
        {
            GivenName = InputResourceName,
        };

        return analysisResult;
    }
    public override void CreateChildren(Humidifier.QuickSight.Analysis result)
    {
        base.CreateChildren(result);

        result.Errors = ErrorsFactories.Any() ? ErrorsFactories.Select(x => x.Build()).ToList() : null;
        result.Permissions = PermissionsFactories.Any() ? PermissionsFactories.Select(x => x.Build()).ToList() : null;
        result.Sheets = SheetsFactories.Any() ? SheetsFactories.Select(x => x.Build()).ToList() : null;
        result.Parameters ??= ParametersFactory?.Build();
        result.SourceEntity ??= SourceEntityFactory?.Build();
        result.Definition ??= DefinitionFactory?.Build();
        result.ValidationStrategy ??= ValidationStrategyFactory?.Build();
    }

} // End Of Class

public static class AnalysisFactoryExtensions
{
    public static CombinedResult<AnalysisFactory, InnerAnalysisAnalysisErrorFactory> WithErrors(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null)
    {
        var factory = new InnerAnalysisAnalysisErrorFactory(subFactoryAction);
        parentFactory.ErrorsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AnalysisFactory, InnerAnalysisResourcePermissionFactory> WithPermissions(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null)
    {
        var factory = new InnerAnalysisResourcePermissionFactory(subFactoryAction);
        parentFactory.PermissionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AnalysisFactory, InnerAnalysisSheetFactory> WithSheets(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null)
    {
        var factory = new InnerAnalysisSheetFactory(subFactoryAction);
        parentFactory.SheetsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AnalysisFactory, InnerAnalysisParametersFactory> WithParameters(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null)
    {
        parentFactory.ParametersFactory = new InnerAnalysisParametersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ParametersFactory);
    }

    public static CombinedResult<AnalysisFactory, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null)
    {
        parentFactory.SourceEntityFactory = new InnerAnalysisAnalysisSourceEntityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceEntityFactory);
    }

    public static CombinedResult<AnalysisFactory, InnerAnalysisAnalysisDefinitionFactory> WithDefinition(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null)
    {
        parentFactory.DefinitionFactory = new InnerAnalysisAnalysisDefinitionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DefinitionFactory);
    }

    public static CombinedResult<AnalysisFactory, InnerAnalysisValidationStrategyFactory> WithValidationStrategy(this AnalysisFactory parentFactory, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null)
    {
        parentFactory.ValidationStrategyFactory = new InnerAnalysisValidationStrategyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ValidationStrategyFactory);
    }

    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisAnalysisErrorFactory> WithErrors<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, WithErrors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisAnalysisErrorFactory> WithErrors<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, WithErrors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisAnalysisErrorFactory> WithErrors<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisError> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithErrors(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisResourcePermissionFactory> WithPermissions<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisResourcePermissionFactory> WithPermissions<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisResourcePermissionFactory> WithPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ResourcePermission> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPermissions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisSheetFactory> WithSheets<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, WithSheets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisSheetFactory> WithSheets<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, WithSheets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisSheetFactory> WithSheets<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisSheetFactory> WithSheets<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisSheetFactory> WithSheets<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisSheetFactory> WithSheets<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Sheet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheets(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisParametersFactory> WithParameters<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisParametersFactory> WithParameters<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, WithParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisParametersFactory> WithParameters<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisParametersFactory> WithParameters<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisParametersFactory> WithParameters<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisParametersFactory> WithParameters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.Parameters> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParameters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceEntity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceEntity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisAnalysisSourceEntityFactory> WithSourceEntity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisSourceEntity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceEntity(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisAnalysisDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.AnalysisDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1>(this CombinedResult<AnalysisFactory, T1> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithValidationStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1>(this CombinedResult<T1, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithValidationStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2>(this CombinedResult<AnalysisFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2>(this CombinedResult<T1, AnalysisFactory, T2> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2>(this CombinedResult<T1, T2, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3>(this CombinedResult<AnalysisFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3>(this CombinedResult<T1, AnalysisFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3>(this CombinedResult<T1, T2, AnalysisFactory, T3> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3>(this CombinedResult<T1, T2, T3, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AnalysisFactory, T1, T2, T3, T4, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3, T4>(this CombinedResult<AnalysisFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AnalysisFactory, T2, T3, T4, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3, T4>(this CombinedResult<T1, AnalysisFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AnalysisFactory, T3, T4, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, AnalysisFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AnalysisFactory, T4, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AnalysisFactory, T4> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AnalysisFactory, InnerAnalysisValidationStrategyFactory> WithValidationStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AnalysisFactory> combinedResult, Action<Humidifier.QuickSight.AnalysisTypes.ValidationStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidationStrategy(combinedResult.T5, subFactoryAction));
}
