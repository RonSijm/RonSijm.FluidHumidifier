// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.QuickSight;

public class InnerThemeThemeConfigurationFactory(Action<Humidifier.QuickSight.ThemeTypes.ThemeConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.QuickSight.ThemeTypes.ThemeConfiguration>
{

    internal InnerThemeDataColorPaletteFactory DataColorPaletteFactory { get; set; }

    internal InnerThemeUIColorPaletteFactory UIColorPaletteFactory { get; set; }

    internal InnerThemeSheetStyleFactory SheetFactory { get; set; }

    internal InnerThemeTypographyFactory TypographyFactory { get; set; }

    protected override Humidifier.QuickSight.ThemeTypes.ThemeConfiguration Create()
    {
        var themeConfigurationResult = CreateThemeConfiguration();
        factoryAction?.Invoke(themeConfigurationResult);

        return themeConfigurationResult;
    }

    private Humidifier.QuickSight.ThemeTypes.ThemeConfiguration CreateThemeConfiguration()
    {
        var themeConfigurationResult = new Humidifier.QuickSight.ThemeTypes.ThemeConfiguration();

        return themeConfigurationResult;
    }
    public override void CreateChildren(Humidifier.QuickSight.ThemeTypes.ThemeConfiguration result)
    {
        base.CreateChildren(result);

        result.DataColorPalette ??= DataColorPaletteFactory?.Build();
        result.UIColorPalette ??= UIColorPaletteFactory?.Build();
        result.Sheet ??= SheetFactory?.Build();
        result.Typography ??= TypographyFactory?.Build();
    }

} // End Of Class

public static class InnerThemeThemeConfigurationFactoryExtensions
{
    public static CombinedResult<InnerThemeThemeConfigurationFactory, InnerThemeDataColorPaletteFactory> WithDataColorPalette(this InnerThemeThemeConfigurationFactory parentFactory, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null)
    {
        parentFactory.DataColorPaletteFactory = new InnerThemeDataColorPaletteFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataColorPaletteFactory);
    }

    public static CombinedResult<InnerThemeThemeConfigurationFactory, InnerThemeUIColorPaletteFactory> WithUIColorPalette(this InnerThemeThemeConfigurationFactory parentFactory, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null)
    {
        parentFactory.UIColorPaletteFactory = new InnerThemeUIColorPaletteFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.UIColorPaletteFactory);
    }

    public static CombinedResult<InnerThemeThemeConfigurationFactory, InnerThemeSheetStyleFactory> WithSheet(this InnerThemeThemeConfigurationFactory parentFactory, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null)
    {
        parentFactory.SheetFactory = new InnerThemeSheetStyleFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SheetFactory);
    }

    public static CombinedResult<InnerThemeThemeConfigurationFactory, InnerThemeTypographyFactory> WithTypography(this InnerThemeThemeConfigurationFactory parentFactory, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null)
    {
        parentFactory.TypographyFactory = new InnerThemeTypographyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TypographyFactory);
    }

    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3, T4>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory, InnerThemeDataColorPaletteFactory> WithDataColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.DataColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataColorPalette(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, WithUIColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, WithUIColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3, T4>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory, InnerThemeUIColorPaletteFactory> WithUIColorPalette<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.UIColorPalette> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUIColorPalette(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, InnerThemeSheetStyleFactory> WithSheet<T1>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, WithSheet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, InnerThemeSheetStyleFactory> WithSheet<T1>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, WithSheet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, InnerThemeSheetStyleFactory> WithSheet<T1, T2>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, InnerThemeSheetStyleFactory> WithSheet<T1, T2>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, InnerThemeSheetStyleFactory> WithSheet<T1, T2>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3, T4>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3, T4>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory, InnerThemeSheetStyleFactory> WithSheet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.SheetStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSheet(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, InnerThemeTypographyFactory> WithTypography<T1>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, WithTypography(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, InnerThemeTypographyFactory> WithTypography<T1>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, WithTypography(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, InnerThemeTypographyFactory> WithTypography<T1, T2>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, InnerThemeTypographyFactory> WithTypography<T1, T2>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, InnerThemeTypographyFactory> WithTypography<T1, T2>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, InnerThemeTypographyFactory> WithTypography<T1, T2, T3>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, InnerThemeTypographyFactory> WithTypography<T1, T2, T3>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, InnerThemeTypographyFactory> WithTypography<T1, T2, T3>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, InnerThemeTypographyFactory> WithTypography<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4, InnerThemeTypographyFactory> WithTypography<T1, T2, T3, T4>(this CombinedResult<InnerThemeThemeConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4, InnerThemeTypographyFactory> WithTypography<T1, T2, T3, T4>(this CombinedResult<T1, InnerThemeThemeConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4, InnerThemeTypographyFactory> WithTypography<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerThemeThemeConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4, InnerThemeTypographyFactory> WithTypography<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerThemeThemeConfigurationFactory, T4> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory, InnerThemeTypographyFactory> WithTypography<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerThemeThemeConfigurationFactory> combinedResult, Action<Humidifier.QuickSight.ThemeTypes.Typography> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTypography(combinedResult.T5, subFactoryAction));
}
