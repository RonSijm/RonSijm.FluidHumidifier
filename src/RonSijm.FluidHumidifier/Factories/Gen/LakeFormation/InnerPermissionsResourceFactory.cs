// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.LakeFormation;

public class InnerPermissionsResourceFactory(Action<Humidifier.LakeFormation.PermissionsTypes.Resource> factoryAction = null) : SubResourceFactory<Humidifier.LakeFormation.PermissionsTypes.Resource>
{

    internal InnerPermissionsTableResourceFactory TableResourceFactory { get; set; }

    internal InnerPermissionsDatabaseResourceFactory DatabaseResourceFactory { get; set; }

    internal InnerPermissionsDataLocationResourceFactory DataLocationResourceFactory { get; set; }

    internal InnerPermissionsTableWithColumnsResourceFactory TableWithColumnsResourceFactory { get; set; }

    protected override Humidifier.LakeFormation.PermissionsTypes.Resource Create()
    {
        var resourceResult = CreateResource();
        factoryAction?.Invoke(resourceResult);

        return resourceResult;
    }

    private Humidifier.LakeFormation.PermissionsTypes.Resource CreateResource()
    {
        var resourceResult = new Humidifier.LakeFormation.PermissionsTypes.Resource();

        return resourceResult;
    }
    public override void CreateChildren(Humidifier.LakeFormation.PermissionsTypes.Resource result)
    {
        base.CreateChildren(result);

        result.TableResource ??= TableResourceFactory?.Build();
        result.DatabaseResource ??= DatabaseResourceFactory?.Build();
        result.DataLocationResource ??= DataLocationResourceFactory?.Build();
        result.TableWithColumnsResource ??= TableWithColumnsResourceFactory?.Build();
    }

} // End Of Class

public static class InnerPermissionsResourceFactoryExtensions
{
    public static CombinedResult<InnerPermissionsResourceFactory, InnerPermissionsTableResourceFactory> WithTableResource(this InnerPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null)
    {
        parentFactory.TableResourceFactory = new InnerPermissionsTableResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TableResourceFactory);
    }

    public static CombinedResult<InnerPermissionsResourceFactory, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource(this InnerPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null)
    {
        parentFactory.DatabaseResourceFactory = new InnerPermissionsDatabaseResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DatabaseResourceFactory);
    }

    public static CombinedResult<InnerPermissionsResourceFactory, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource(this InnerPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null)
    {
        parentFactory.DataLocationResourceFactory = new InnerPermissionsDataLocationResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataLocationResourceFactory);
    }

    public static CombinedResult<InnerPermissionsResourceFactory, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource(this InnerPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null)
    {
        parentFactory.TableWithColumnsResourceFactory = new InnerPermissionsTableWithColumnsResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TableWithColumnsResourceFactory);
    }

    public static CombinedResult<InnerPermissionsResourceFactory, T1, InnerPermissionsTableResourceFactory> WithTableResource<T1>(this CombinedResult<InnerPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, InnerPermissionsTableResourceFactory> WithTableResource<T1>(this CombinedResult<T1, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3, T4>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3, T4>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory, InnerPermissionsTableResourceFactory> WithTableResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableResource(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1>(this CombinedResult<InnerPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabaseResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1>(this CombinedResult<T1, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabaseResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3, T4>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3, T4>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory, InnerPermissionsDatabaseResourceFactory> WithDatabaseResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseResource(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1>(this CombinedResult<InnerPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataLocationResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1>(this CombinedResult<T1, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataLocationResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3, T4>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3, T4>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory, InnerPermissionsDataLocationResourceFactory> WithDataLocationResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocationResource(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1>(this CombinedResult<InnerPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1>(this CombinedResult<T1, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3, T4>(this CombinedResult<InnerPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3, T4>(this CombinedResult<T1, InnerPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory, InnerPermissionsTableWithColumnsResourceFactory> WithTableWithColumnsResource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumnsResource(combinedResult.T5, subFactoryAction));
}
