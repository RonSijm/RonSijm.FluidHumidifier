// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.LakeFormation;

public class InnerPrincipalPermissionsResourceFactory(Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.Resource> factoryAction = null) : SubResourceFactory<Humidifier.LakeFormation.PrincipalPermissionsTypes.Resource>
{

    internal InnerPrincipalPermissionsLFTagKeyResourceFactory LFTagFactory { get; set; }

    internal InnerPrincipalPermissionsTableResourceFactory TableFactory { get; set; }

    internal InnerPrincipalPermissionsDataCellsFilterResourceFactory DataCellsFilterFactory { get; set; }

    internal InnerPrincipalPermissionsTableWithColumnsResourceFactory TableWithColumnsFactory { get; set; }

    internal InnerPrincipalPermissionsLFTagPolicyResourceFactory LFTagPolicyFactory { get; set; }

    internal InnerPrincipalPermissionsDatabaseResourceFactory DatabaseFactory { get; set; }

    internal InnerPrincipalPermissionsDataLocationResourceFactory DataLocationFactory { get; set; }

    protected override Humidifier.LakeFormation.PrincipalPermissionsTypes.Resource Create()
    {
        var resourceResult = CreateResource();
        factoryAction?.Invoke(resourceResult);

        return resourceResult;
    }

    private Humidifier.LakeFormation.PrincipalPermissionsTypes.Resource CreateResource()
    {
        var resourceResult = new Humidifier.LakeFormation.PrincipalPermissionsTypes.Resource();

        return resourceResult;
    }
    public override void CreateChildren(Humidifier.LakeFormation.PrincipalPermissionsTypes.Resource result)
    {
        base.CreateChildren(result);

        result.LFTag ??= LFTagFactory?.Build();
        result.Table ??= TableFactory?.Build();
        result.DataCellsFilter ??= DataCellsFilterFactory?.Build();
        result.TableWithColumns ??= TableWithColumnsFactory?.Build();
        result.LFTagPolicy ??= LFTagPolicyFactory?.Build();
        result.Database ??= DatabaseFactory?.Build();
        result.DataLocation ??= DataLocationFactory?.Build();
    }

} // End Of Class

public static class InnerPrincipalPermissionsResourceFactoryExtensions
{
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null)
    {
        parentFactory.LFTagFactory = new InnerPrincipalPermissionsLFTagKeyResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LFTagFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableResourceFactory> WithTable(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null)
    {
        parentFactory.TableFactory = new InnerPrincipalPermissionsTableResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TableFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null)
    {
        parentFactory.DataCellsFilterFactory = new InnerPrincipalPermissionsDataCellsFilterResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataCellsFilterFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null)
    {
        parentFactory.TableWithColumnsFactory = new InnerPrincipalPermissionsTableWithColumnsResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TableWithColumnsFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null)
    {
        parentFactory.LFTagPolicyFactory = new InnerPrincipalPermissionsLFTagPolicyResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LFTagPolicyFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null)
    {
        parentFactory.DatabaseFactory = new InnerPrincipalPermissionsDatabaseResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DatabaseFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation(this InnerPrincipalPermissionsResourceFactory parentFactory, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null)
    {
        parentFactory.DataLocationFactory = new InnerPrincipalPermissionsDataLocationResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataLocationFactory);
    }

    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithLFTag(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithLFTag(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagKeyResourceFactory> WithLFTag<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagKeyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTag(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataCellsFilterResourceFactory> WithDataCellsFilter<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataCellsFilterResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCellsFilter(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsLFTagPolicyResourceFactory> WithLFTagPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.LFTagPolicyResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLFTagPolicy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataLocation(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataLocation(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3, T4>(this CombinedResult<InnerPrincipalPermissionsResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3, T4>(this CombinedResult<T1, InnerPrincipalPermissionsResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerPrincipalPermissionsResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerPrincipalPermissionsResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory, InnerPrincipalPermissionsDataLocationResourceFactory> WithDataLocation<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerPrincipalPermissionsResourceFactory> combinedResult, Action<Humidifier.LakeFormation.PrincipalPermissionsTypes.DataLocationResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataLocation(combinedResult.T5, subFactoryAction));
}
