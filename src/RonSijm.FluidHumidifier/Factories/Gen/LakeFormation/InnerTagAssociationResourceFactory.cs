// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.LakeFormation;

public class InnerTagAssociationResourceFactory(Action<Humidifier.LakeFormation.TagAssociationTypes.Resource> factoryAction = null) : SubResourceFactory<Humidifier.LakeFormation.TagAssociationTypes.Resource>
{

    internal InnerTagAssociationTableResourceFactory TableFactory { get; set; }

    internal InnerTagAssociationTableWithColumnsResourceFactory TableWithColumnsFactory { get; set; }

    internal InnerTagAssociationDatabaseResourceFactory DatabaseFactory { get; set; }

    protected override Humidifier.LakeFormation.TagAssociationTypes.Resource Create()
    {
        var resourceResult = CreateResource();
        factoryAction?.Invoke(resourceResult);

        return resourceResult;
    }

    private Humidifier.LakeFormation.TagAssociationTypes.Resource CreateResource()
    {
        var resourceResult = new Humidifier.LakeFormation.TagAssociationTypes.Resource();

        return resourceResult;
    }
    public override void CreateChildren(Humidifier.LakeFormation.TagAssociationTypes.Resource result)
    {
        base.CreateChildren(result);

        result.Table ??= TableFactory?.Build();
        result.TableWithColumns ??= TableWithColumnsFactory?.Build();
        result.Database ??= DatabaseFactory?.Build();
    }

} // End Of Class

public static class InnerTagAssociationResourceFactoryExtensions
{
    public static CombinedResult<InnerTagAssociationResourceFactory, InnerTagAssociationTableResourceFactory> WithTable(this InnerTagAssociationResourceFactory parentFactory, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null)
    {
        parentFactory.TableFactory = new InnerTagAssociationTableResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TableFactory);
    }

    public static CombinedResult<InnerTagAssociationResourceFactory, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns(this InnerTagAssociationResourceFactory parentFactory, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null)
    {
        parentFactory.TableWithColumnsFactory = new InnerTagAssociationTableWithColumnsResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TableWithColumnsFactory);
    }

    public static CombinedResult<InnerTagAssociationResourceFactory, InnerTagAssociationDatabaseResourceFactory> WithDatabase(this InnerTagAssociationResourceFactory parentFactory, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null)
    {
        parentFactory.DatabaseFactory = new InnerTagAssociationDatabaseResourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DatabaseFactory);
    }

    public static CombinedResult<InnerTagAssociationResourceFactory, T1, InnerTagAssociationTableResourceFactory> WithTable<T1>(this CombinedResult<InnerTagAssociationResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, InnerTagAssociationTableResourceFactory> WithTable<T1>(this CombinedResult<T1, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, InnerTagAssociationTableResourceFactory> WithTable<T1, T2>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, InnerTagAssociationTableResourceFactory> WithTable<T1, T2>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, InnerTagAssociationTableResourceFactory> WithTable<T1, T2>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, T4, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, T4, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, T4, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, T4, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerTagAssociationResourceFactory, InnerTagAssociationTableResourceFactory> WithTable<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTable(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1>(this CombinedResult<InnerTagAssociationResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1>(this CombinedResult<T1, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, T4, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, T4, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, T4, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, T4, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerTagAssociationResourceFactory, InnerTagAssociationTableWithColumnsResourceFactory> WithTableWithColumns<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.TableWithColumnsResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTableWithColumns(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1>(this CombinedResult<InnerTagAssociationResourceFactory, T1> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1>(this CombinedResult<T1, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, T4, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<InnerTagAssociationResourceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, T4, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, InnerTagAssociationResourceFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, T4, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerTagAssociationResourceFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, T4, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerTagAssociationResourceFactory, T4> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerTagAssociationResourceFactory, InnerTagAssociationDatabaseResourceFactory> WithDatabase<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerTagAssociationResourceFactory> combinedResult, Action<Humidifier.LakeFormation.TagAssociationTypes.DatabaseResource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabase(combinedResult.T5, subFactoryAction));
}
