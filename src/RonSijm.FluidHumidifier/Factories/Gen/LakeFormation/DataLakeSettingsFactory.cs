// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.LakeFormation;

public class DataLakeSettingsFactory(string resourceName = null, Action<Humidifier.LakeFormation.DataLakeSettings> factoryAction = null) : ResourceFactory<Humidifier.LakeFormation.DataLakeSettings>(resourceName)
{

    internal InnerDataLakeSettingsExternalDataFilteringAllowListFactory ExternalDataFilteringAllowListFactory { get; set; }

    internal InnerDataLakeSettingsCreateTableDefaultPermissionsFactory CreateTableDefaultPermissionsFactory { get; set; }

    internal InnerDataLakeSettingsAdminsFactory AdminsFactory { get; set; }

    internal InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory CreateDatabaseDefaultPermissionsFactory { get; set; }

    protected override Humidifier.LakeFormation.DataLakeSettings Create()
    {
        var dataLakeSettingsResult = CreateDataLakeSettings();
        factoryAction?.Invoke(dataLakeSettingsResult);

        return dataLakeSettingsResult;
    }

    private Humidifier.LakeFormation.DataLakeSettings CreateDataLakeSettings()
    {
        var dataLakeSettingsResult = new Humidifier.LakeFormation.DataLakeSettings
        {
            GivenName = InputResourceName,
        };

        return dataLakeSettingsResult;
    }
    public override void CreateChildren(Humidifier.LakeFormation.DataLakeSettings result)
    {
        base.CreateChildren(result);

        result.ExternalDataFilteringAllowList ??= ExternalDataFilteringAllowListFactory?.Build();
        result.CreateTableDefaultPermissions ??= CreateTableDefaultPermissionsFactory?.Build();
        result.Admins ??= AdminsFactory?.Build();
        result.CreateDatabaseDefaultPermissions ??= CreateDatabaseDefaultPermissionsFactory?.Build();
    }

} // End Of Class

public static class DataLakeSettingsFactoryExtensions
{
    public static CombinedResult<DataLakeSettingsFactory, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList(this DataLakeSettingsFactory parentFactory, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null)
    {
        parentFactory.ExternalDataFilteringAllowListFactory = new InnerDataLakeSettingsExternalDataFilteringAllowListFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExternalDataFilteringAllowListFactory);
    }

    public static CombinedResult<DataLakeSettingsFactory, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions(this DataLakeSettingsFactory parentFactory, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null)
    {
        parentFactory.CreateTableDefaultPermissionsFactory = new InnerDataLakeSettingsCreateTableDefaultPermissionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CreateTableDefaultPermissionsFactory);
    }

    public static CombinedResult<DataLakeSettingsFactory, InnerDataLakeSettingsAdminsFactory> WithAdmins(this DataLakeSettingsFactory parentFactory, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null)
    {
        parentFactory.AdminsFactory = new InnerDataLakeSettingsAdminsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AdminsFactory);
    }

    public static CombinedResult<DataLakeSettingsFactory, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions(this DataLakeSettingsFactory parentFactory, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null)
    {
        parentFactory.CreateDatabaseDefaultPermissionsFactory = new InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CreateDatabaseDefaultPermissionsFactory);
    }

    public static CombinedResult<DataLakeSettingsFactory, T1, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1>(this CombinedResult<DataLakeSettingsFactory, T1> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1>(this CombinedResult<T1, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2>(this CombinedResult<DataLakeSettingsFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2>(this CombinedResult<T1, DataLakeSettingsFactory, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2>(this CombinedResult<T1, T2, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3, T4>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3, T4>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory, InnerDataLakeSettingsExternalDataFilteringAllowListFactory> WithExternalDataFilteringAllowList<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.ExternalDataFilteringAllowList> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExternalDataFilteringAllowList(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1>(this CombinedResult<DataLakeSettingsFactory, T1> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1>(this CombinedResult<T1, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2>(this CombinedResult<DataLakeSettingsFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2>(this CombinedResult<T1, DataLakeSettingsFactory, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2>(this CombinedResult<T1, T2, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory, InnerDataLakeSettingsCreateTableDefaultPermissionsFactory> WithCreateTableDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateTableDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateTableDefaultPermissions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1>(this CombinedResult<DataLakeSettingsFactory, T1> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdmins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1>(this CombinedResult<T1, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdmins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2>(this CombinedResult<DataLakeSettingsFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2>(this CombinedResult<T1, DataLakeSettingsFactory, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2>(this CombinedResult<T1, T2, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3, T4>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3, T4>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory, InnerDataLakeSettingsAdminsFactory> WithAdmins<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.Admins> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdmins(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1>(this CombinedResult<DataLakeSettingsFactory, T1> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1>(this CombinedResult<T1, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2>(this CombinedResult<DataLakeSettingsFactory, T1, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2>(this CombinedResult<T1, DataLakeSettingsFactory, T2> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2>(this CombinedResult<T1, T2, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<DataLakeSettingsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, DataLakeSettingsFactory, T2, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DataLakeSettingsFactory, T3, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DataLakeSettingsFactory, T4> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory, InnerDataLakeSettingsCreateDatabaseDefaultPermissionsFactory> WithCreateDatabaseDefaultPermissions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DataLakeSettingsFactory> combinedResult, Action<Humidifier.LakeFormation.DataLakeSettingsTypes.CreateDatabaseDefaultPermissions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreateDatabaseDefaultPermissions(combinedResult.T5, subFactoryAction));
}
