// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.DataZone;

public class InnerDataSourceRedshiftRunConfigurationInputFactory(Action<Humidifier.DataZone.DataSourceTypes.RedshiftRunConfigurationInput> factoryAction = null) : SubResourceFactory<Humidifier.DataZone.DataSourceTypes.RedshiftRunConfigurationInput>
{

    internal InnerDataSourceRedshiftCredentialConfigurationFactory RedshiftCredentialConfigurationFactory { get; set; }

    internal InnerDataSourceRedshiftStorageFactory RedshiftStorageFactory { get; set; }

    protected override Humidifier.DataZone.DataSourceTypes.RedshiftRunConfigurationInput Create()
    {
        var redshiftRunConfigurationInputResult = CreateRedshiftRunConfigurationInput();
        factoryAction?.Invoke(redshiftRunConfigurationInputResult);

        return redshiftRunConfigurationInputResult;
    }

    private Humidifier.DataZone.DataSourceTypes.RedshiftRunConfigurationInput CreateRedshiftRunConfigurationInput()
    {
        var redshiftRunConfigurationInputResult = new Humidifier.DataZone.DataSourceTypes.RedshiftRunConfigurationInput();

        return redshiftRunConfigurationInputResult;
    }
    public override void CreateChildren(Humidifier.DataZone.DataSourceTypes.RedshiftRunConfigurationInput result)
    {
        base.CreateChildren(result);

        result.RedshiftCredentialConfiguration ??= RedshiftCredentialConfigurationFactory?.Build();
        result.RedshiftStorage ??= RedshiftStorageFactory?.Build();
    }

} // End Of Class

public static class InnerDataSourceRedshiftRunConfigurationInputFactoryExtensions
{
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration(this InnerDataSourceRedshiftRunConfigurationInputFactory parentFactory, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null)
    {
        parentFactory.RedshiftCredentialConfigurationFactory = new InnerDataSourceRedshiftCredentialConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RedshiftCredentialConfigurationFactory);
    }

    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage(this InnerDataSourceRedshiftRunConfigurationInputFactory parentFactory, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null)
    {
        parentFactory.RedshiftStorageFactory = new InnerDataSourceRedshiftStorageFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RedshiftStorageFactory);
    }

    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3, T4, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3, T4, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3, T4, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory, T4, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftCredentialConfigurationFactory> WithRedshiftCredentialConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftCredentialConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftCredentialConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3, T4, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceRedshiftRunConfigurationInputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3, T4, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceRedshiftRunConfigurationInputFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3, T4, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceRedshiftRunConfigurationInputFactory, T3, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory, T4, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceRedshiftRunConfigurationInputFactory, T4> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceRedshiftRunConfigurationInputFactory, InnerDataSourceRedshiftStorageFactory> WithRedshiftStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceRedshiftRunConfigurationInputFactory> combinedResult, Action<Humidifier.DataZone.DataSourceTypes.RedshiftStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRedshiftStorage(combinedResult.T5, subFactoryAction));
}
