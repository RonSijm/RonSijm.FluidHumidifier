// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.FSx;

public class InnerFileSystemOpenZFSConfigurationFactory(Action<Humidifier.FSx.FileSystemTypes.OpenZFSConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.FSx.FileSystemTypes.OpenZFSConfiguration>
{

    internal InnerFileSystemRootVolumeConfigurationFactory RootVolumeConfigurationFactory { get; set; }

    internal InnerFileSystemDiskIopsConfigurationFactory DiskIopsConfigurationFactory { get; set; }

    protected override Humidifier.FSx.FileSystemTypes.OpenZFSConfiguration Create()
    {
        var openZFSConfigurationResult = CreateOpenZFSConfiguration();
        factoryAction?.Invoke(openZFSConfigurationResult);

        return openZFSConfigurationResult;
    }

    private Humidifier.FSx.FileSystemTypes.OpenZFSConfiguration CreateOpenZFSConfiguration()
    {
        var openZFSConfigurationResult = new Humidifier.FSx.FileSystemTypes.OpenZFSConfiguration();

        return openZFSConfigurationResult;
    }
    public override void CreateChildren(Humidifier.FSx.FileSystemTypes.OpenZFSConfiguration result)
    {
        base.CreateChildren(result);

        result.RootVolumeConfiguration ??= RootVolumeConfigurationFactory?.Build();
        result.DiskIopsConfiguration ??= DiskIopsConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerFileSystemOpenZFSConfigurationFactoryExtensions
{
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration(this InnerFileSystemOpenZFSConfigurationFactory parentFactory, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null)
    {
        parentFactory.RootVolumeConfigurationFactory = new InnerFileSystemRootVolumeConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RootVolumeConfigurationFactory);
    }

    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration(this InnerFileSystemOpenZFSConfigurationFactory parentFactory, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null)
    {
        parentFactory.DiskIopsConfigurationFactory = new InnerFileSystemDiskIopsConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DiskIopsConfigurationFactory);
    }

    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3, T4, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3, T4, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3, T4, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory, T4, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemRootVolumeConfigurationFactory> WithRootVolumeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.RootVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootVolumeConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3, T4, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerFileSystemOpenZFSConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3, T4, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerFileSystemOpenZFSConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3, T4, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFileSystemOpenZFSConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory, T4, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFileSystemOpenZFSConfigurationFactory, T4> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFileSystemOpenZFSConfigurationFactory, InnerFileSystemDiskIopsConfigurationFactory> WithDiskIopsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFileSystemOpenZFSConfigurationFactory> combinedResult, Action<Humidifier.FSx.FileSystemTypes.DiskIopsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDiskIopsConfiguration(combinedResult.T5, subFactoryAction));
}
