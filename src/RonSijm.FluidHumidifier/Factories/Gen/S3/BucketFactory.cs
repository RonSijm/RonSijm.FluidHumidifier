// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.S3;

public class BucketFactory(string resourceName = null, Action<Humidifier.S3.Bucket> factoryAction = null) : ResourceFactory<Humidifier.S3.Bucket>(resourceName)
{

    internal List<InnerBucketInventoryConfigurationFactory> InventoryConfigurationsFactories { get; set; } = [];

    internal List<InnerBucketMetricsConfigurationFactory> MetricsConfigurationsFactories { get; set; } = [];

    internal List<InnerBucketIntelligentTieringConfigurationFactory> IntelligentTieringConfigurationsFactories { get; set; } = [];

    internal List<InnerBucketAnalyticsConfigurationFactory> AnalyticsConfigurationsFactories { get; set; } = [];

    internal InnerBucketBucketEncryptionFactory BucketEncryptionFactory { get; set; }

    internal InnerBucketWebsiteConfigurationFactory WebsiteConfigurationFactory { get; set; }

    internal InnerBucketNotificationConfigurationFactory NotificationConfigurationFactory { get; set; }

    internal InnerBucketLifecycleConfigurationFactory LifecycleConfigurationFactory { get; set; }

    internal InnerBucketVersioningConfigurationFactory VersioningConfigurationFactory { get; set; }

    internal InnerBucketAccelerateConfigurationFactory AccelerateConfigurationFactory { get; set; }

    internal InnerBucketPublicAccessBlockConfigurationFactory PublicAccessBlockConfigurationFactory { get; set; }

    internal InnerBucketCorsConfigurationFactory CorsConfigurationFactory { get; set; }

    internal InnerBucketOwnershipControlsFactory OwnershipControlsFactory { get; set; }

    internal InnerBucketObjectLockConfigurationFactory ObjectLockConfigurationFactory { get; set; }

    internal InnerBucketLoggingConfigurationFactory LoggingConfigurationFactory { get; set; }

    internal InnerBucketReplicationConfigurationFactory ReplicationConfigurationFactory { get; set; }

    protected override Humidifier.S3.Bucket Create()
    {
        var bucketResult = CreateBucket();
        factoryAction?.Invoke(bucketResult);

        return bucketResult;
    }

    private Humidifier.S3.Bucket CreateBucket()
    {
        var bucketResult = new Humidifier.S3.Bucket
        {
            GivenName = InputResourceName,
        };

        return bucketResult;
    }
    public override void CreateChildren(Humidifier.S3.Bucket result)
    {
        base.CreateChildren(result);

        result.InventoryConfigurations = InventoryConfigurationsFactories.Any() ? InventoryConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.MetricsConfigurations = MetricsConfigurationsFactories.Any() ? MetricsConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.IntelligentTieringConfigurations = IntelligentTieringConfigurationsFactories.Any() ? IntelligentTieringConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.AnalyticsConfigurations = AnalyticsConfigurationsFactories.Any() ? AnalyticsConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.BucketEncryption ??= BucketEncryptionFactory?.Build();
        result.WebsiteConfiguration ??= WebsiteConfigurationFactory?.Build();
        result.NotificationConfiguration ??= NotificationConfigurationFactory?.Build();
        result.LifecycleConfiguration ??= LifecycleConfigurationFactory?.Build();
        result.VersioningConfiguration ??= VersioningConfigurationFactory?.Build();
        result.AccelerateConfiguration ??= AccelerateConfigurationFactory?.Build();
        result.PublicAccessBlockConfiguration ??= PublicAccessBlockConfigurationFactory?.Build();
        result.CorsConfiguration ??= CorsConfigurationFactory?.Build();
        result.OwnershipControls ??= OwnershipControlsFactory?.Build();
        result.ObjectLockConfiguration ??= ObjectLockConfigurationFactory?.Build();
        result.LoggingConfiguration ??= LoggingConfigurationFactory?.Build();
        result.ReplicationConfiguration ??= ReplicationConfigurationFactory?.Build();
    }

} // End Of Class

public static class BucketFactoryExtensions
{
    public static CombinedResult<BucketFactory, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null)
    {
        var factory = new InnerBucketInventoryConfigurationFactory(subFactoryAction);
        parentFactory.InventoryConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<BucketFactory, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null)
    {
        var factory = new InnerBucketMetricsConfigurationFactory(subFactoryAction);
        parentFactory.MetricsConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<BucketFactory, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null)
    {
        var factory = new InnerBucketIntelligentTieringConfigurationFactory(subFactoryAction);
        parentFactory.IntelligentTieringConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<BucketFactory, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null)
    {
        var factory = new InnerBucketAnalyticsConfigurationFactory(subFactoryAction);
        parentFactory.AnalyticsConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<BucketFactory, InnerBucketBucketEncryptionFactory> WithBucketEncryption(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null)
    {
        parentFactory.BucketEncryptionFactory = new InnerBucketBucketEncryptionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BucketEncryptionFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null)
    {
        parentFactory.WebsiteConfigurationFactory = new InnerBucketWebsiteConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.WebsiteConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null)
    {
        parentFactory.NotificationConfigurationFactory = new InnerBucketNotificationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NotificationConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null)
    {
        parentFactory.LifecycleConfigurationFactory = new InnerBucketLifecycleConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LifecycleConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null)
    {
        parentFactory.VersioningConfigurationFactory = new InnerBucketVersioningConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VersioningConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null)
    {
        parentFactory.AccelerateConfigurationFactory = new InnerBucketAccelerateConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AccelerateConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null)
    {
        parentFactory.PublicAccessBlockConfigurationFactory = new InnerBucketPublicAccessBlockConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PublicAccessBlockConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketCorsConfigurationFactory> WithCorsConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null)
    {
        parentFactory.CorsConfigurationFactory = new InnerBucketCorsConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CorsConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketOwnershipControlsFactory> WithOwnershipControls(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null)
    {
        parentFactory.OwnershipControlsFactory = new InnerBucketOwnershipControlsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OwnershipControlsFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null)
    {
        parentFactory.ObjectLockConfigurationFactory = new InnerBucketObjectLockConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ObjectLockConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null)
    {
        parentFactory.LoggingConfigurationFactory = new InnerBucketLoggingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoggingConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration(this BucketFactory parentFactory, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null)
    {
        parentFactory.ReplicationConfigurationFactory = new InnerBucketReplicationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ReplicationConfigurationFactory);
    }

    public static CombinedResult<BucketFactory, T1, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketInventoryConfigurationFactory> WithInventoryConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.InventoryConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInventoryConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketMetricsConfigurationFactory> WithMetricsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.MetricsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketIntelligentTieringConfigurationFactory> WithIntelligentTieringConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.IntelligentTieringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIntelligentTieringConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketAnalyticsConfigurationFactory> WithAnalyticsConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AnalyticsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnalyticsConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, WithBucketEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, WithBucketEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketBucketEncryptionFactory> WithBucketEncryption<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.BucketEncryption> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketEncryption(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketWebsiteConfigurationFactory> WithWebsiteConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.WebsiteConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWebsiteConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketNotificationConfigurationFactory> WithNotificationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketLifecycleConfigurationFactory> WithLifecycleConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LifecycleConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketVersioningConfigurationFactory> WithVersioningConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.VersioningConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVersioningConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketAccelerateConfigurationFactory> WithAccelerateConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.AccelerateConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccelerateConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketPublicAccessBlockConfigurationFactory> WithPublicAccessBlockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.PublicAccessBlockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPublicAccessBlockConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketCorsConfigurationFactory> WithCorsConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.CorsConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCorsConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, WithOwnershipControls(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, WithOwnershipControls(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketOwnershipControlsFactory> WithOwnershipControls<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.OwnershipControls> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOwnershipControls(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketObjectLockConfigurationFactory> WithObjectLockConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ObjectLockConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithObjectLockConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1>(this CombinedResult<BucketFactory, T1> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1>(this CombinedResult<T1, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2>(this CombinedResult<BucketFactory, T1, T2> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2>(this CombinedResult<T1, BucketFactory, T2> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2>(this CombinedResult<T1, T2, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<BucketFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<T1, BucketFactory, T2, T3> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, BucketFactory, T3> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BucketFactory, T1, T2, T3, T4, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<BucketFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BucketFactory, T2, T3, T4, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, BucketFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BucketFactory, T3, T4, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, BucketFactory, T3, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BucketFactory, T4, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BucketFactory, T4> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BucketFactory, InnerBucketReplicationConfigurationFactory> WithReplicationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BucketFactory> combinedResult, Action<Humidifier.S3.BucketTypes.ReplicationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicationConfiguration(combinedResult.T5, subFactoryAction));
}
