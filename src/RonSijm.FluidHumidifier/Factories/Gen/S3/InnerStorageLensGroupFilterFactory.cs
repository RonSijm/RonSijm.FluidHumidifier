// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.S3;

public class InnerStorageLensGroupFilterFactory(Action<Humidifier.S3.StorageLensGroupTypes.Filter> factoryAction = null) : SubResourceFactory<Humidifier.S3.StorageLensGroupTypes.Filter>
{

    internal InnerStorageLensGroupMatchObjectAgeFactory MatchObjectAgeFactory { get; set; }

    internal InnerStorageLensGroupOrFactory OrFactory { get; set; }

    internal InnerStorageLensGroupAndFactory AndFactory { get; set; }

    internal InnerStorageLensGroupMatchObjectSizeFactory MatchObjectSizeFactory { get; set; }

    protected override Humidifier.S3.StorageLensGroupTypes.Filter Create()
    {
        var filterResult = CreateFilter();
        factoryAction?.Invoke(filterResult);

        return filterResult;
    }

    private Humidifier.S3.StorageLensGroupTypes.Filter CreateFilter()
    {
        var filterResult = new Humidifier.S3.StorageLensGroupTypes.Filter();

        return filterResult;
    }
    public override void CreateChildren(Humidifier.S3.StorageLensGroupTypes.Filter result)
    {
        base.CreateChildren(result);

        result.MatchObjectAge ??= MatchObjectAgeFactory?.Build();
        result.Or ??= OrFactory?.Build();
        result.And ??= AndFactory?.Build();
        result.MatchObjectSize ??= MatchObjectSizeFactory?.Build();
    }

} // End Of Class

public static class InnerStorageLensGroupFilterFactoryExtensions
{
    public static CombinedResult<InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge(this InnerStorageLensGroupFilterFactory parentFactory, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null)
    {
        parentFactory.MatchObjectAgeFactory = new InnerStorageLensGroupMatchObjectAgeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MatchObjectAgeFactory);
    }

    public static CombinedResult<InnerStorageLensGroupFilterFactory, InnerStorageLensGroupOrFactory> WithOr(this InnerStorageLensGroupFilterFactory parentFactory, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null)
    {
        parentFactory.OrFactory = new InnerStorageLensGroupOrFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OrFactory);
    }

    public static CombinedResult<InnerStorageLensGroupFilterFactory, InnerStorageLensGroupAndFactory> WithAnd(this InnerStorageLensGroupFilterFactory parentFactory, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null)
    {
        parentFactory.AndFactory = new InnerStorageLensGroupAndFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AndFactory);
    }

    public static CombinedResult<InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize(this InnerStorageLensGroupFilterFactory parentFactory, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null)
    {
        parentFactory.MatchObjectSizeFactory = new InnerStorageLensGroupMatchObjectSizeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MatchObjectSizeFactory);
    }

    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectAgeFactory> WithMatchObjectAge<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectAge> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectAge(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, InnerStorageLensGroupOrFactory> WithOr<T1>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, WithOr(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupOrFactory> WithOr<T1>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, WithOr(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, InnerStorageLensGroupOrFactory> WithOr<T1, T2>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, InnerStorageLensGroupOrFactory> WithOr<T1, T2>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupOrFactory> WithOr<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupOrFactory> WithOr<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.Or> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOr(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, InnerStorageLensGroupAndFactory> WithAnd<T1>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, WithAnd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupAndFactory> WithAnd<T1>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, WithAnd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, InnerStorageLensGroupAndFactory> WithAnd<T1, T2>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, InnerStorageLensGroupAndFactory> WithAnd<T1, T2>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupAndFactory> WithAnd<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupAndFactory> WithAnd<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.And> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAnd(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensGroupFilterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensGroupFilterFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensGroupFilterFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensGroupFilterFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory, InnerStorageLensGroupMatchObjectSizeFactory> WithMatchObjectSize<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensGroupFilterFactory> combinedResult, Action<Humidifier.S3.StorageLensGroupTypes.MatchObjectSize> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMatchObjectSize(combinedResult.T5, subFactoryAction));
}
