// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.S3;

public class InnerStorageLensStorageLensConfigurationFactory(Action<Humidifier.S3.StorageLensTypes.StorageLensConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.S3.StorageLensTypes.StorageLensConfiguration>
{

    internal InnerStorageLensAccountLevelFactory AccountLevelFactory { get; set; }

    internal InnerStorageLensBucketsAndRegionsFactory ExcludeFactory { get; set; }

    internal InnerStorageLensBucketsAndRegionsFactory IncludeFactory { get; set; }

    internal InnerStorageLensAwsOrgFactory AwsOrgFactory { get; set; }

    internal InnerStorageLensDataExportFactory DataExportFactory { get; set; }

    protected override Humidifier.S3.StorageLensTypes.StorageLensConfiguration Create()
    {
        var storageLensConfigurationResult = CreateStorageLensConfiguration();
        factoryAction?.Invoke(storageLensConfigurationResult);

        return storageLensConfigurationResult;
    }

    private Humidifier.S3.StorageLensTypes.StorageLensConfiguration CreateStorageLensConfiguration()
    {
        var storageLensConfigurationResult = new Humidifier.S3.StorageLensTypes.StorageLensConfiguration();

        return storageLensConfigurationResult;
    }
    public override void CreateChildren(Humidifier.S3.StorageLensTypes.StorageLensConfiguration result)
    {
        base.CreateChildren(result);

        result.AccountLevel ??= AccountLevelFactory?.Build();
        result.Exclude ??= ExcludeFactory?.Build();
        result.Include ??= IncludeFactory?.Build();
        result.AwsOrg ??= AwsOrgFactory?.Build();
        result.DataExport ??= DataExportFactory?.Build();
    }

} // End Of Class

public static class InnerStorageLensStorageLensConfigurationFactoryExtensions
{
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAccountLevelFactory> WithAccountLevel(this InnerStorageLensStorageLensConfigurationFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null)
    {
        parentFactory.AccountLevelFactory = new InnerStorageLensAccountLevelFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AccountLevelFactory);
    }

    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithExclude(this InnerStorageLensStorageLensConfigurationFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null)
    {
        parentFactory.ExcludeFactory = new InnerStorageLensBucketsAndRegionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExcludeFactory);
    }

    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithInclude(this InnerStorageLensStorageLensConfigurationFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null)
    {
        parentFactory.IncludeFactory = new InnerStorageLensBucketsAndRegionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IncludeFactory);
    }

    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAwsOrgFactory> WithAwsOrg(this InnerStorageLensStorageLensConfigurationFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null)
    {
        parentFactory.AwsOrgFactory = new InnerStorageLensAwsOrgFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AwsOrgFactory);
    }

    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensDataExportFactory> WithDataExport(this InnerStorageLensStorageLensConfigurationFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null)
    {
        parentFactory.DataExportFactory = new InnerStorageLensDataExportFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataExportFactory);
    }

    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, WithAccountLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, WithAccountLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAccountLevelFactory> WithAccountLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AccountLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccountLevel(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, WithExclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, WithExclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithExclude<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclude(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, WithInclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, WithInclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensBucketsAndRegionsFactory> WithInclude<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketsAndRegions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInclude(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, WithAwsOrg(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, WithAwsOrg(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensAwsOrgFactory> WithAwsOrg<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AwsOrg> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAwsOrg(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, InnerStorageLensDataExportFactory> WithDataExport<T1>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataExport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensDataExportFactory> WithDataExport<T1>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataExport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, InnerStorageLensDataExportFactory> WithDataExport<T1, T2>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, InnerStorageLensDataExportFactory> WithDataExport<T1, T2>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensDataExportFactory> WithDataExport<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensStorageLensConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensStorageLensConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensStorageLensConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensStorageLensConfigurationFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory, InnerStorageLensDataExportFactory> WithDataExport<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensStorageLensConfigurationFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DataExport> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataExport(combinedResult.T5, subFactoryAction));
}
