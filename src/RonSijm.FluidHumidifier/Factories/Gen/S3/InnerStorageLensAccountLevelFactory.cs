// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.S3;

public class InnerStorageLensAccountLevelFactory(Action<Humidifier.S3.StorageLensTypes.AccountLevel> factoryAction = null) : SubResourceFactory<Humidifier.S3.StorageLensTypes.AccountLevel>
{

    internal InnerStorageLensAdvancedDataProtectionMetricsFactory AdvancedDataProtectionMetricsFactory { get; set; }

    internal InnerStorageLensStorageLensGroupLevelFactory StorageLensGroupLevelFactory { get; set; }

    internal InnerStorageLensActivityMetricsFactory ActivityMetricsFactory { get; set; }

    internal InnerStorageLensBucketLevelFactory BucketLevelFactory { get; set; }

    internal InnerStorageLensAdvancedCostOptimizationMetricsFactory AdvancedCostOptimizationMetricsFactory { get; set; }

    internal InnerStorageLensDetailedStatusCodesMetricsFactory DetailedStatusCodesMetricsFactory { get; set; }

    protected override Humidifier.S3.StorageLensTypes.AccountLevel Create()
    {
        var accountLevelResult = CreateAccountLevel();
        factoryAction?.Invoke(accountLevelResult);

        return accountLevelResult;
    }

    private Humidifier.S3.StorageLensTypes.AccountLevel CreateAccountLevel()
    {
        var accountLevelResult = new Humidifier.S3.StorageLensTypes.AccountLevel();

        return accountLevelResult;
    }
    public override void CreateChildren(Humidifier.S3.StorageLensTypes.AccountLevel result)
    {
        base.CreateChildren(result);

        result.AdvancedDataProtectionMetrics ??= AdvancedDataProtectionMetricsFactory?.Build();
        result.StorageLensGroupLevel ??= StorageLensGroupLevelFactory?.Build();
        result.ActivityMetrics ??= ActivityMetricsFactory?.Build();
        result.BucketLevel ??= BucketLevelFactory?.Build();
        result.AdvancedCostOptimizationMetrics ??= AdvancedCostOptimizationMetricsFactory?.Build();
        result.DetailedStatusCodesMetrics ??= DetailedStatusCodesMetricsFactory?.Build();
    }

} // End Of Class

public static class InnerStorageLensAccountLevelFactoryExtensions
{
    public static CombinedResult<InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics(this InnerStorageLensAccountLevelFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null)
    {
        parentFactory.AdvancedDataProtectionMetricsFactory = new InnerStorageLensAdvancedDataProtectionMetricsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AdvancedDataProtectionMetricsFactory);
    }

    public static CombinedResult<InnerStorageLensAccountLevelFactory, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel(this InnerStorageLensAccountLevelFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null)
    {
        parentFactory.StorageLensGroupLevelFactory = new InnerStorageLensStorageLensGroupLevelFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.StorageLensGroupLevelFactory);
    }

    public static CombinedResult<InnerStorageLensAccountLevelFactory, InnerStorageLensActivityMetricsFactory> WithActivityMetrics(this InnerStorageLensAccountLevelFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null)
    {
        parentFactory.ActivityMetricsFactory = new InnerStorageLensActivityMetricsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ActivityMetricsFactory);
    }

    public static CombinedResult<InnerStorageLensAccountLevelFactory, InnerStorageLensBucketLevelFactory> WithBucketLevel(this InnerStorageLensAccountLevelFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null)
    {
        parentFactory.BucketLevelFactory = new InnerStorageLensBucketLevelFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BucketLevelFactory);
    }

    public static CombinedResult<InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics(this InnerStorageLensAccountLevelFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null)
    {
        parentFactory.AdvancedCostOptimizationMetricsFactory = new InnerStorageLensAdvancedCostOptimizationMetricsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AdvancedCostOptimizationMetricsFactory);
    }

    public static CombinedResult<InnerStorageLensAccountLevelFactory, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics(this InnerStorageLensAccountLevelFactory parentFactory, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null)
    {
        parentFactory.DetailedStatusCodesMetricsFactory = new InnerStorageLensDetailedStatusCodesMetricsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DetailedStatusCodesMetricsFactory);
    }

    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedDataProtectionMetricsFactory> WithAdvancedDataProtectionMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedDataProtectionMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedDataProtectionMetrics(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory, InnerStorageLensStorageLensGroupLevelFactory> WithStorageLensGroupLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.StorageLensGroupLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStorageLensGroupLevel(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithActivityMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithActivityMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory, InnerStorageLensActivityMetricsFactory> WithActivityMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.ActivityMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActivityMetrics(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, WithBucketLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, WithBucketLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory, InnerStorageLensBucketLevelFactory> WithBucketLevel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.BucketLevel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBucketLevel(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory, InnerStorageLensAdvancedCostOptimizationMetricsFactory> WithAdvancedCostOptimizationMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.AdvancedCostOptimizationMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedCostOptimizationMetrics(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3, T4>(this CombinedResult<InnerStorageLensAccountLevelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3, T4>(this CombinedResult<T1, InnerStorageLensAccountLevelFactory, T2, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStorageLensAccountLevelFactory, T3, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStorageLensAccountLevelFactory, T4> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory, InnerStorageLensDetailedStatusCodesMetricsFactory> WithDetailedStatusCodesMetrics<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStorageLensAccountLevelFactory> combinedResult, Action<Humidifier.S3.StorageLensTypes.DetailedStatusCodesMetrics> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDetailedStatusCodesMetrics(combinedResult.T5, subFactoryAction));
}
