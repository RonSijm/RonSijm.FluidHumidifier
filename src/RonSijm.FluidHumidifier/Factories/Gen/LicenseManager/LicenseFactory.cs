// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.LicenseManager;

public class LicenseFactory(string resourceName = null, Action<Humidifier.LicenseManager.License> factoryAction = null) : ResourceFactory<Humidifier.LicenseManager.License>(resourceName)
{

    internal List<InnerLicenseEntitlementFactory> EntitlementsFactories { get; set; } = [];

    internal List<InnerLicenseMetadataFactory> LicenseMetadataFactories { get; set; } = [];

    internal InnerLicenseConsumptionConfigurationFactory ConsumptionConfigurationFactory { get; set; }

    internal InnerLicenseValidityDateFormatFactory ValidityFactory { get; set; }

    internal InnerLicenseIssuerDataFactory IssuerFactory { get; set; }

    protected override Humidifier.LicenseManager.License Create()
    {
        var licenseResult = CreateLicense();
        factoryAction?.Invoke(licenseResult);

        return licenseResult;
    }

    private Humidifier.LicenseManager.License CreateLicense()
    {
        var licenseResult = new Humidifier.LicenseManager.License
        {
            GivenName = InputResourceName,
        };

        return licenseResult;
    }
    public override void CreateChildren(Humidifier.LicenseManager.License result)
    {
        base.CreateChildren(result);

        result.Entitlements = EntitlementsFactories.Any() ? EntitlementsFactories.Select(x => x.Build()).ToList() : null;
        result.LicenseMetadata = LicenseMetadataFactories.Any() ? LicenseMetadataFactories.Select(x => x.Build()).ToList() : null;
        result.ConsumptionConfiguration ??= ConsumptionConfigurationFactory?.Build();
        result.Validity ??= ValidityFactory?.Build();
        result.Issuer ??= IssuerFactory?.Build();
    }

} // End Of Class

public static class LicenseFactoryExtensions
{
    public static CombinedResult<LicenseFactory, InnerLicenseEntitlementFactory> WithEntitlements(this LicenseFactory parentFactory, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null)
    {
        var factory = new InnerLicenseEntitlementFactory(subFactoryAction);
        parentFactory.EntitlementsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<LicenseFactory, InnerLicenseMetadataFactory> WithLicenseMetadata(this LicenseFactory parentFactory, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null)
    {
        var factory = new InnerLicenseMetadataFactory(subFactoryAction);
        parentFactory.LicenseMetadataFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<LicenseFactory, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration(this LicenseFactory parentFactory, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null)
    {
        parentFactory.ConsumptionConfigurationFactory = new InnerLicenseConsumptionConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConsumptionConfigurationFactory);
    }

    public static CombinedResult<LicenseFactory, InnerLicenseValidityDateFormatFactory> WithValidity(this LicenseFactory parentFactory, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null)
    {
        parentFactory.ValidityFactory = new InnerLicenseValidityDateFormatFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ValidityFactory);
    }

    public static CombinedResult<LicenseFactory, InnerLicenseIssuerDataFactory> WithIssuer(this LicenseFactory parentFactory, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null)
    {
        parentFactory.IssuerFactory = new InnerLicenseIssuerDataFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IssuerFactory);
    }

    public static CombinedResult<LicenseFactory, T1, InnerLicenseEntitlementFactory> WithEntitlements<T1>(this CombinedResult<LicenseFactory, T1> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, WithEntitlements(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, InnerLicenseEntitlementFactory> WithEntitlements<T1>(this CombinedResult<T1, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, WithEntitlements(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2>(this CombinedResult<LicenseFactory, T1, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2>(this CombinedResult<T1, LicenseFactory, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2>(this CombinedResult<T1, T2, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3>(this CombinedResult<LicenseFactory, T1, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3>(this CombinedResult<T1, LicenseFactory, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3>(this CombinedResult<T1, T2, LicenseFactory, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3>(this CombinedResult<T1, T2, T3, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, T4, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3, T4>(this CombinedResult<LicenseFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, T4, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3, T4>(this CombinedResult<T1, LicenseFactory, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, T4, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3, T4>(this CombinedResult<T1, T2, LicenseFactory, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, T4, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LicenseFactory, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LicenseFactory, InnerLicenseEntitlementFactory> WithEntitlements<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Entitlement> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEntitlements(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, InnerLicenseMetadataFactory> WithLicenseMetadata<T1>(this CombinedResult<LicenseFactory, T1> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, InnerLicenseMetadataFactory> WithLicenseMetadata<T1>(this CombinedResult<T1, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2>(this CombinedResult<LicenseFactory, T1, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2>(this CombinedResult<T1, LicenseFactory, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2>(this CombinedResult<T1, T2, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3>(this CombinedResult<LicenseFactory, T1, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3>(this CombinedResult<T1, LicenseFactory, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3>(this CombinedResult<T1, T2, LicenseFactory, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3>(this CombinedResult<T1, T2, T3, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, T4, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3, T4>(this CombinedResult<LicenseFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, T4, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3, T4>(this CombinedResult<T1, LicenseFactory, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, T4, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3, T4>(this CombinedResult<T1, T2, LicenseFactory, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, T4, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LicenseFactory, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LicenseFactory, InnerLicenseMetadataFactory> WithLicenseMetadata<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseMetadata(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1>(this CombinedResult<LicenseFactory, T1> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1>(this CombinedResult<T1, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2>(this CombinedResult<LicenseFactory, T1, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2>(this CombinedResult<T1, LicenseFactory, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2>(this CombinedResult<T1, T2, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3>(this CombinedResult<LicenseFactory, T1, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3>(this CombinedResult<T1, LicenseFactory, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, LicenseFactory, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, T4, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3, T4>(this CombinedResult<LicenseFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, T4, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, LicenseFactory, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, T4, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, LicenseFactory, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, T4, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LicenseFactory, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LicenseFactory, InnerLicenseConsumptionConfigurationFactory> WithConsumptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ConsumptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConsumptionConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, InnerLicenseValidityDateFormatFactory> WithValidity<T1>(this CombinedResult<LicenseFactory, T1> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, WithValidity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, InnerLicenseValidityDateFormatFactory> WithValidity<T1>(this CombinedResult<T1, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, WithValidity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2>(this CombinedResult<LicenseFactory, T1, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2>(this CombinedResult<T1, LicenseFactory, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2>(this CombinedResult<T1, T2, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3>(this CombinedResult<LicenseFactory, T1, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3>(this CombinedResult<T1, LicenseFactory, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3>(this CombinedResult<T1, T2, LicenseFactory, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3>(this CombinedResult<T1, T2, T3, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, T4, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3, T4>(this CombinedResult<LicenseFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, T4, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3, T4>(this CombinedResult<T1, LicenseFactory, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, T4, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3, T4>(this CombinedResult<T1, T2, LicenseFactory, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, T4, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LicenseFactory, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LicenseFactory, InnerLicenseValidityDateFormatFactory> WithValidity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.ValidityDateFormat> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithValidity(combinedResult.T5, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, InnerLicenseIssuerDataFactory> WithIssuer<T1>(this CombinedResult<LicenseFactory, T1> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, WithIssuer(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, InnerLicenseIssuerDataFactory> WithIssuer<T1>(this CombinedResult<T1, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, WithIssuer(combinedResult.T2, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2>(this CombinedResult<LicenseFactory, T1, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2>(this CombinedResult<T1, LicenseFactory, T2> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2>(this CombinedResult<T1, T2, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T3, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3>(this CombinedResult<LicenseFactory, T1, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3>(this CombinedResult<T1, LicenseFactory, T2, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3>(this CombinedResult<T1, T2, LicenseFactory, T3> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3>(this CombinedResult<T1, T2, T3, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T4, subFactoryAction));
    public static CombinedResult<LicenseFactory, T1, T2, T3, T4, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3, T4>(this CombinedResult<LicenseFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, LicenseFactory, T2, T3, T4, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3, T4>(this CombinedResult<T1, LicenseFactory, T2, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, LicenseFactory, T3, T4, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3, T4>(this CombinedResult<T1, T2, LicenseFactory, T3, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, LicenseFactory, T4, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, LicenseFactory, T4> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, LicenseFactory, InnerLicenseIssuerDataFactory> WithIssuer<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, LicenseFactory> combinedResult, Action<Humidifier.LicenseManager.LicenseTypes.IssuerData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIssuer(combinedResult.T5, subFactoryAction));
}
