// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ApplicationAutoScaling;

public class ScalingPolicyFactory(string resourceName = null, Action<Humidifier.ApplicationAutoScaling.ScalingPolicy> factoryAction = null) : ResourceFactory<Humidifier.ApplicationAutoScaling.ScalingPolicy>(resourceName)
{

    internal InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory TargetTrackingScalingPolicyConfigurationFactory { get; set; }

    internal InnerScalingPolicyStepScalingPolicyConfigurationFactory StepScalingPolicyConfigurationFactory { get; set; }

    protected override Humidifier.ApplicationAutoScaling.ScalingPolicy Create()
    {
        var scalingPolicyResult = CreateScalingPolicy();
        factoryAction?.Invoke(scalingPolicyResult);

        return scalingPolicyResult;
    }

    private Humidifier.ApplicationAutoScaling.ScalingPolicy CreateScalingPolicy()
    {
        var scalingPolicyResult = new Humidifier.ApplicationAutoScaling.ScalingPolicy
        {
            GivenName = InputResourceName,
        };

        return scalingPolicyResult;
    }
    public override void CreateChildren(Humidifier.ApplicationAutoScaling.ScalingPolicy result)
    {
        base.CreateChildren(result);

        result.TargetTrackingScalingPolicyConfiguration ??= TargetTrackingScalingPolicyConfigurationFactory?.Build();
        result.StepScalingPolicyConfiguration ??= StepScalingPolicyConfigurationFactory?.Build();
    }

} // End Of Class

public static class ScalingPolicyFactoryExtensions
{
    public static CombinedResult<ScalingPolicyFactory, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration(this ScalingPolicyFactory parentFactory, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null)
    {
        parentFactory.TargetTrackingScalingPolicyConfigurationFactory = new InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TargetTrackingScalingPolicyConfigurationFactory);
    }

    public static CombinedResult<ScalingPolicyFactory, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration(this ScalingPolicyFactory parentFactory, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null)
    {
        parentFactory.StepScalingPolicyConfigurationFactory = new InnerScalingPolicyStepScalingPolicyConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.StepScalingPolicyConfigurationFactory);
    }

    public static CombinedResult<ScalingPolicyFactory, T1, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1>(this CombinedResult<ScalingPolicyFactory, T1> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1>(this CombinedResult<T1, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2>(this CombinedResult<ScalingPolicyFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2>(this CombinedResult<T1, ScalingPolicyFactory, T2> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2>(this CombinedResult<T1, T2, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingScalingPolicyConfigurationFactory> WithTargetTrackingScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.TargetTrackingScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingScalingPolicyConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1>(this CombinedResult<ScalingPolicyFactory, T1> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1>(this CombinedResult<T1, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2>(this CombinedResult<ScalingPolicyFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2>(this CombinedResult<T1, ScalingPolicyFactory, T2> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2>(this CombinedResult<T1, T2, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory, InnerScalingPolicyStepScalingPolicyConfigurationFactory> WithStepScalingPolicyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory> combinedResult, Action<Humidifier.ApplicationAutoScaling.ScalingPolicyTypes.StepScalingPolicyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepScalingPolicyConfiguration(combinedResult.T5, subFactoryAction));
}
