// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EC2;

public class ClientVpnEndpointFactory(string resourceName = null, Action<Humidifier.EC2.ClientVpnEndpoint> factoryAction = null) : ResourceFactory<Humidifier.EC2.ClientVpnEndpoint>(resourceName)
{

    internal List<InnerClientVpnEndpointTagSpecificationFactory> TagSpecificationsFactories { get; set; } = [];

    internal List<InnerClientVpnEndpointClientAuthenticationRequestFactory> AuthenticationOptionsFactories { get; set; } = [];

    internal InnerClientVpnEndpointClientConnectOptionsFactory ClientConnectOptionsFactory { get; set; }

    internal InnerClientVpnEndpointConnectionLogOptionsFactory ConnectionLogOptionsFactory { get; set; }

    internal InnerClientVpnEndpointClientLoginBannerOptionsFactory ClientLoginBannerOptionsFactory { get; set; }

    protected override Humidifier.EC2.ClientVpnEndpoint Create()
    {
        var clientVpnEndpointResult = CreateClientVpnEndpoint();
        factoryAction?.Invoke(clientVpnEndpointResult);

        return clientVpnEndpointResult;
    }

    private Humidifier.EC2.ClientVpnEndpoint CreateClientVpnEndpoint()
    {
        var clientVpnEndpointResult = new Humidifier.EC2.ClientVpnEndpoint
        {
            GivenName = InputResourceName,
        };

        return clientVpnEndpointResult;
    }
    public override void CreateChildren(Humidifier.EC2.ClientVpnEndpoint result)
    {
        base.CreateChildren(result);

        result.TagSpecifications = TagSpecificationsFactories.Any() ? TagSpecificationsFactories.Select(x => x.Build()).ToList() : null;
        result.AuthenticationOptions = AuthenticationOptionsFactories.Any() ? AuthenticationOptionsFactories.Select(x => x.Build()).ToList() : null;
        result.ClientConnectOptions ??= ClientConnectOptionsFactory?.Build();
        result.ConnectionLogOptions ??= ConnectionLogOptionsFactory?.Build();
        result.ClientLoginBannerOptions ??= ClientLoginBannerOptionsFactory?.Build();
    }

} // End Of Class

public static class ClientVpnEndpointFactoryExtensions
{
    public static CombinedResult<ClientVpnEndpointFactory, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications(this ClientVpnEndpointFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null)
    {
        var factory = new InnerClientVpnEndpointTagSpecificationFactory(subFactoryAction);
        parentFactory.TagSpecificationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ClientVpnEndpointFactory, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions(this ClientVpnEndpointFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null)
    {
        var factory = new InnerClientVpnEndpointClientAuthenticationRequestFactory(subFactoryAction);
        parentFactory.AuthenticationOptionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ClientVpnEndpointFactory, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions(this ClientVpnEndpointFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null)
    {
        parentFactory.ClientConnectOptionsFactory = new InnerClientVpnEndpointClientConnectOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ClientConnectOptionsFactory);
    }

    public static CombinedResult<ClientVpnEndpointFactory, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions(this ClientVpnEndpointFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null)
    {
        parentFactory.ConnectionLogOptionsFactory = new InnerClientVpnEndpointConnectionLogOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConnectionLogOptionsFactory);
    }

    public static CombinedResult<ClientVpnEndpointFactory, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions(this ClientVpnEndpointFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null)
    {
        parentFactory.ClientLoginBannerOptionsFactory = new InnerClientVpnEndpointClientLoginBannerOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ClientLoginBannerOptionsFactory);
    }

    public static CombinedResult<ClientVpnEndpointFactory, T1, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1>(this CombinedResult<ClientVpnEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1>(this CombinedResult<T1, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2>(this CombinedResult<ClientVpnEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2>(this CombinedResult<T1, ClientVpnEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2>(this CombinedResult<T1, T2, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory, InnerClientVpnEndpointTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1>(this CombinedResult<ClientVpnEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1>(this CombinedResult<T1, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2>(this CombinedResult<ClientVpnEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2>(this CombinedResult<T1, ClientVpnEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2>(this CombinedResult<T1, T2, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3, T4>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3, T4>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory, InnerClientVpnEndpointClientAuthenticationRequestFactory> WithAuthenticationOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAuthenticationOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1>(this CombinedResult<ClientVpnEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1>(this CombinedResult<T1, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2>(this CombinedResult<ClientVpnEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2>(this CombinedResult<T1, ClientVpnEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2>(this CombinedResult<T1, T2, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3, T4>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3, T4>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory, InnerClientVpnEndpointClientConnectOptionsFactory> WithClientConnectOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientConnectOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientConnectOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1>(this CombinedResult<ClientVpnEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1>(this CombinedResult<T1, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2>(this CombinedResult<ClientVpnEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2>(this CombinedResult<T1, ClientVpnEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2>(this CombinedResult<T1, T2, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3, T4>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3, T4>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory, InnerClientVpnEndpointConnectionLogOptionsFactory> WithConnectionLogOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ConnectionLogOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectionLogOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1>(this CombinedResult<ClientVpnEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1>(this CombinedResult<T1, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2>(this CombinedResult<ClientVpnEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2>(this CombinedResult<T1, ClientVpnEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2>(this CombinedResult<T1, T2, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3, T4>(this CombinedResult<ClientVpnEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3, T4>(this CombinedResult<T1, ClientVpnEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClientVpnEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClientVpnEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory, InnerClientVpnEndpointClientLoginBannerOptionsFactory> WithClientLoginBannerOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClientVpnEndpointFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientLoginBannerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClientLoginBannerOptions(combinedResult.T5, subFactoryAction));
}
