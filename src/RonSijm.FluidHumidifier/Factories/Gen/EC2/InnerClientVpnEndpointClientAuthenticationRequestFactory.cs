// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EC2;

public class InnerClientVpnEndpointClientAuthenticationRequestFactory(Action<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest> factoryAction = null) : SubResourceFactory<Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest>
{

    internal InnerClientVpnEndpointCertificateAuthenticationRequestFactory MutualAuthenticationFactory { get; set; }

    internal InnerClientVpnEndpointFederatedAuthenticationRequestFactory FederatedAuthenticationFactory { get; set; }

    internal InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory ActiveDirectoryFactory { get; set; }

    protected override Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest Create()
    {
        var clientAuthenticationRequestResult = CreateClientAuthenticationRequest();
        factoryAction?.Invoke(clientAuthenticationRequestResult);

        return clientAuthenticationRequestResult;
    }

    private Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest CreateClientAuthenticationRequest()
    {
        var clientAuthenticationRequestResult = new Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest();

        return clientAuthenticationRequestResult;
    }
    public override void CreateChildren(Humidifier.EC2.ClientVpnEndpointTypes.ClientAuthenticationRequest result)
    {
        base.CreateChildren(result);

        result.MutualAuthentication ??= MutualAuthenticationFactory?.Build();
        result.FederatedAuthentication ??= FederatedAuthenticationFactory?.Build();
        result.ActiveDirectory ??= ActiveDirectoryFactory?.Build();
    }

} // End Of Class

public static class InnerClientVpnEndpointClientAuthenticationRequestFactoryExtensions
{
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication(this InnerClientVpnEndpointClientAuthenticationRequestFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null)
    {
        parentFactory.MutualAuthenticationFactory = new InnerClientVpnEndpointCertificateAuthenticationRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MutualAuthenticationFactory);
    }

    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication(this InnerClientVpnEndpointClientAuthenticationRequestFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null)
    {
        parentFactory.FederatedAuthenticationFactory = new InnerClientVpnEndpointFederatedAuthenticationRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FederatedAuthenticationFactory);
    }

    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory(this InnerClientVpnEndpointClientAuthenticationRequestFactory parentFactory, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null)
    {
        parentFactory.ActiveDirectoryFactory = new InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ActiveDirectoryFactory);
    }

    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, T4, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, T4, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, T4, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, T4, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointCertificateAuthenticationRequestFactory> WithMutualAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.CertificateAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMutualAuthentication(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, T4, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3, T4>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, T4, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, T4, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, T4, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointFederatedAuthenticationRequestFactory> WithFederatedAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.FederatedAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFederatedAuthentication(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithActiveDirectory(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithActiveDirectory(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, T4, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3, T4>(this CombinedResult<InnerClientVpnEndpointClientAuthenticationRequestFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, T4, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3, T4>(this CombinedResult<T1, InnerClientVpnEndpointClientAuthenticationRequestFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, T4, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerClientVpnEndpointClientAuthenticationRequestFactory, T3, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, T4, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerClientVpnEndpointClientAuthenticationRequestFactory, T4> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory, InnerClientVpnEndpointDirectoryServiceAuthenticationRequestFactory> WithActiveDirectory<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerClientVpnEndpointClientAuthenticationRequestFactory> combinedResult, Action<Humidifier.EC2.ClientVpnEndpointTypes.DirectoryServiceAuthenticationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActiveDirectory(combinedResult.T5, subFactoryAction));
}
