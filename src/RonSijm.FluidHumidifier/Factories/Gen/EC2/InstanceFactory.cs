// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EC2;

public class InstanceFactory(string resourceName = null, Action<Humidifier.EC2.Instance> factoryAction = null) : ResourceFactory<Humidifier.EC2.Instance>(resourceName)
{

    internal List<InnerInstanceBlockDeviceMappingFactory> BlockDeviceMappingsFactories { get; set; } = [];

    internal List<InnerInstanceInstanceIpv6AddressFactory> Ipv6AddressesFactories { get; set; } = [];

    internal List<InnerInstanceElasticGpuSpecificationFactory> ElasticGpuSpecificationsFactories { get; set; } = [];

    internal List<InnerInstanceElasticInferenceAcceleratorFactory> ElasticInferenceAcceleratorsFactories { get; set; } = [];

    internal List<InnerInstanceVolumeFactory> VolumesFactories { get; set; } = [];

    internal List<InnerInstanceNetworkInterfaceFactory> NetworkInterfacesFactories { get; set; } = [];

    internal List<InnerInstanceLicenseSpecificationFactory> LicenseSpecificationsFactories { get; set; } = [];

    internal List<InnerInstanceSsmAssociationFactory> SsmAssociationsFactories { get; set; } = [];

    internal InnerInstanceLaunchTemplateSpecificationFactory LaunchTemplateFactory { get; set; }

    internal InnerInstanceEnclaveOptionsFactory EnclaveOptionsFactory { get; set; }

    internal InnerInstanceHibernationOptionsFactory HibernationOptionsFactory { get; set; }

    internal InnerInstanceCpuOptionsFactory CpuOptionsFactory { get; set; }

    internal InnerInstancePrivateDnsNameOptionsFactory PrivateDnsNameOptionsFactory { get; set; }

    internal InnerInstanceCreditSpecificationFactory CreditSpecificationFactory { get; set; }

    protected override Humidifier.EC2.Instance Create()
    {
        var instanceResult = CreateInstance();
        factoryAction?.Invoke(instanceResult);

        return instanceResult;
    }

    private Humidifier.EC2.Instance CreateInstance()
    {
        var instanceResult = new Humidifier.EC2.Instance
        {
            GivenName = InputResourceName,
        };

        return instanceResult;
    }
    public override void CreateChildren(Humidifier.EC2.Instance result)
    {
        base.CreateChildren(result);

        result.BlockDeviceMappings = BlockDeviceMappingsFactories.Any() ? BlockDeviceMappingsFactories.Select(x => x.Build()).ToList() : null;
        result.Ipv6Addresses = Ipv6AddressesFactories.Any() ? Ipv6AddressesFactories.Select(x => x.Build()).ToList() : null;
        result.ElasticGpuSpecifications = ElasticGpuSpecificationsFactories.Any() ? ElasticGpuSpecificationsFactories.Select(x => x.Build()).ToList() : null;
        result.ElasticInferenceAccelerators = ElasticInferenceAcceleratorsFactories.Any() ? ElasticInferenceAcceleratorsFactories.Select(x => x.Build()).ToList() : null;
        result.Volumes = VolumesFactories.Any() ? VolumesFactories.Select(x => x.Build()).ToList() : null;
        result.NetworkInterfaces = NetworkInterfacesFactories.Any() ? NetworkInterfacesFactories.Select(x => x.Build()).ToList() : null;
        result.LicenseSpecifications = LicenseSpecificationsFactories.Any() ? LicenseSpecificationsFactories.Select(x => x.Build()).ToList() : null;
        result.SsmAssociations = SsmAssociationsFactories.Any() ? SsmAssociationsFactories.Select(x => x.Build()).ToList() : null;
        result.LaunchTemplate ??= LaunchTemplateFactory?.Build();
        result.EnclaveOptions ??= EnclaveOptionsFactory?.Build();
        result.HibernationOptions ??= HibernationOptionsFactory?.Build();
        result.CpuOptions ??= CpuOptionsFactory?.Build();
        result.PrivateDnsNameOptions ??= PrivateDnsNameOptionsFactory?.Build();
        result.CreditSpecification ??= CreditSpecificationFactory?.Build();
    }

} // End Of Class

public static class InstanceFactoryExtensions
{
    public static CombinedResult<InstanceFactory, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null)
    {
        var factory = new InnerInstanceBlockDeviceMappingFactory(subFactoryAction);
        parentFactory.BlockDeviceMappingsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null)
    {
        var factory = new InnerInstanceInstanceIpv6AddressFactory(subFactoryAction);
        parentFactory.Ipv6AddressesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null)
    {
        var factory = new InnerInstanceElasticGpuSpecificationFactory(subFactoryAction);
        parentFactory.ElasticGpuSpecificationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null)
    {
        var factory = new InnerInstanceElasticInferenceAcceleratorFactory(subFactoryAction);
        parentFactory.ElasticInferenceAcceleratorsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceVolumeFactory> WithVolumes(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null)
    {
        var factory = new InnerInstanceVolumeFactory(subFactoryAction);
        parentFactory.VolumesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null)
    {
        var factory = new InnerInstanceNetworkInterfaceFactory(subFactoryAction);
        parentFactory.NetworkInterfacesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null)
    {
        var factory = new InnerInstanceLicenseSpecificationFactory(subFactoryAction);
        parentFactory.LicenseSpecificationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceSsmAssociationFactory> WithSsmAssociations(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null)
    {
        var factory = new InnerInstanceSsmAssociationFactory(subFactoryAction);
        parentFactory.SsmAssociationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InstanceFactory, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null)
    {
        parentFactory.LaunchTemplateFactory = new InnerInstanceLaunchTemplateSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LaunchTemplateFactory);
    }

    public static CombinedResult<InstanceFactory, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null)
    {
        parentFactory.EnclaveOptionsFactory = new InnerInstanceEnclaveOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EnclaveOptionsFactory);
    }

    public static CombinedResult<InstanceFactory, InnerInstanceHibernationOptionsFactory> WithHibernationOptions(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null)
    {
        parentFactory.HibernationOptionsFactory = new InnerInstanceHibernationOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.HibernationOptionsFactory);
    }

    public static CombinedResult<InstanceFactory, InnerInstanceCpuOptionsFactory> WithCpuOptions(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null)
    {
        parentFactory.CpuOptionsFactory = new InnerInstanceCpuOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CpuOptionsFactory);
    }

    public static CombinedResult<InstanceFactory, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null)
    {
        parentFactory.PrivateDnsNameOptionsFactory = new InnerInstancePrivateDnsNameOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PrivateDnsNameOptionsFactory);
    }

    public static CombinedResult<InstanceFactory, InnerInstanceCreditSpecificationFactory> WithCreditSpecification(this InstanceFactory parentFactory, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null)
    {
        parentFactory.CreditSpecificationFactory = new InnerInstanceCreditSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CreditSpecificationFactory);
    }

    public static CombinedResult<InstanceFactory, T1, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceBlockDeviceMappingFactory> WithBlockDeviceMappings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.BlockDeviceMapping> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlockDeviceMappings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceInstanceIpv6AddressFactory> WithIpv6Addresses<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.InstanceIpv6Address> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIpv6Addresses(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceElasticGpuSpecificationFactory> WithElasticGpuSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticGpuSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticGpuSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceElasticInferenceAcceleratorFactory> WithElasticInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.ElasticInferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticInferenceAccelerators(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceVolumeFactory> WithVolumes<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceVolumeFactory> WithVolumes<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceVolumeFactory> WithVolumes<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceVolumeFactory> WithVolumes<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceVolumeFactory> WithVolumes<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceNetworkInterfaceFactory> WithNetworkInterfaces<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.NetworkInterface> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaces(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceLicenseSpecificationFactory> WithLicenseSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LicenseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLicenseSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, WithSsmAssociations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, WithSsmAssociations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceSsmAssociationFactory> WithSsmAssociations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.SsmAssociation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSsmAssociations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceEnclaveOptionsFactory> WithEnclaveOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.EnclaveOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnclaveOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithHibernationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithHibernationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceHibernationOptionsFactory> WithHibernationOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.HibernationOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithHibernationOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCpuOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCpuOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceCpuOptionsFactory> WithCpuOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CpuOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCpuOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstancePrivateDnsNameOptionsFactory> WithPrivateDnsNameOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.PrivateDnsNameOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPrivateDnsNameOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1>(this CombinedResult<InstanceFactory, T1> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithCreditSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1>(this CombinedResult<T1, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithCreditSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2>(this CombinedResult<InstanceFactory, T1, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2>(this CombinedResult<T1, InstanceFactory, T2> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2>(this CombinedResult<T1, T2, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3>(this CombinedResult<InstanceFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3>(this CombinedResult<T1, InstanceFactory, T2, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3>(this CombinedResult<T1, T2, InstanceFactory, T3> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InstanceFactory, T1, T2, T3, T4, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3, T4>(this CombinedResult<InstanceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InstanceFactory, T2, T3, T4, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3, T4>(this CombinedResult<T1, InstanceFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InstanceFactory, T3, T4, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, InstanceFactory, T3, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InstanceFactory, T4, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InstanceFactory, T4> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InstanceFactory, InnerInstanceCreditSpecificationFactory> WithCreditSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InstanceFactory> combinedResult, Action<Humidifier.EC2.InstanceTypes.CreditSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCreditSpecification(combinedResult.T5, subFactoryAction));
}
