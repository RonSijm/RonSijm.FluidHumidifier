// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EC2;

public class InnerVerifiedAccessInstanceVerifiedAccessLogsFactory(Action<Humidifier.EC2.VerifiedAccessInstanceTypes.VerifiedAccessLogs> factoryAction = null) : SubResourceFactory<Humidifier.EC2.VerifiedAccessInstanceTypes.VerifiedAccessLogs>
{

    internal InnerVerifiedAccessInstanceS3Factory S3Factory { get; set; }

    internal InnerVerifiedAccessInstanceKinesisDataFirehoseFactory KinesisDataFirehoseFactory { get; set; }

    internal InnerVerifiedAccessInstanceCloudWatchLogsFactory CloudWatchLogsFactory { get; set; }

    protected override Humidifier.EC2.VerifiedAccessInstanceTypes.VerifiedAccessLogs Create()
    {
        var verifiedAccessLogsResult = CreateVerifiedAccessLogs();
        factoryAction?.Invoke(verifiedAccessLogsResult);

        return verifiedAccessLogsResult;
    }

    private Humidifier.EC2.VerifiedAccessInstanceTypes.VerifiedAccessLogs CreateVerifiedAccessLogs()
    {
        var verifiedAccessLogsResult = new Humidifier.EC2.VerifiedAccessInstanceTypes.VerifiedAccessLogs();

        return verifiedAccessLogsResult;
    }
    public override void CreateChildren(Humidifier.EC2.VerifiedAccessInstanceTypes.VerifiedAccessLogs result)
    {
        base.CreateChildren(result);

        result.S3 ??= S3Factory?.Build();
        result.KinesisDataFirehose ??= KinesisDataFirehoseFactory?.Build();
        result.CloudWatchLogs ??= CloudWatchLogsFactory?.Build();
    }

} // End Of Class

public static class InnerVerifiedAccessInstanceVerifiedAccessLogsFactoryExtensions
{
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceS3Factory> WithS3(this InnerVerifiedAccessInstanceVerifiedAccessLogsFactory parentFactory, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null)
    {
        parentFactory.S3Factory = new InnerVerifiedAccessInstanceS3Factory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3Factory);
    }

    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose(this InnerVerifiedAccessInstanceVerifiedAccessLogsFactory parentFactory, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null)
    {
        parentFactory.KinesisDataFirehoseFactory = new InnerVerifiedAccessInstanceKinesisDataFirehoseFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisDataFirehoseFactory);
    }

    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs(this InnerVerifiedAccessInstanceVerifiedAccessLogsFactory parentFactory, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null)
    {
        parentFactory.CloudWatchLogsFactory = new InnerVerifiedAccessInstanceCloudWatchLogsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLogsFactory);
    }

    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, InnerVerifiedAccessInstanceS3Factory> WithS3<T1>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceS3Factory> WithS3<T1>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, T4, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3, T4>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, T4, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, T4, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T4, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceS3Factory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.S3> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, T4, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3, T4>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, T4, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3, T4>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, T4, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T4, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceKinesisDataFirehoseFactory> WithKinesisDataFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.KinesisDataFirehose> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataFirehose(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, T4, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, T4, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, T4, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T4, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory, InnerVerifiedAccessInstanceCloudWatchLogsFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerVerifiedAccessInstanceVerifiedAccessLogsFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessInstanceTypes.CloudWatchLogs> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T5, subFactoryAction));
}
