// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EC2;

public class EC2FleetFactory(string resourceName = null, Action<Humidifier.EC2.EC2Fleet> factoryAction = null) : ResourceFactory<Humidifier.EC2.EC2Fleet>(resourceName)
{

    internal List<InnerEC2FleetTagSpecificationFactory> TagSpecificationsFactories { get; set; } = [];

    internal List<InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> LaunchTemplateConfigsFactories { get; set; } = [];

    internal InnerEC2FleetTargetCapacitySpecificationRequestFactory TargetCapacitySpecificationFactory { get; set; }

    internal InnerEC2FleetOnDemandOptionsRequestFactory OnDemandOptionsFactory { get; set; }

    internal InnerEC2FleetSpotOptionsRequestFactory SpotOptionsFactory { get; set; }

    protected override Humidifier.EC2.EC2Fleet Create()
    {
        var eC2FleetResult = CreateEC2Fleet();
        factoryAction?.Invoke(eC2FleetResult);

        return eC2FleetResult;
    }

    private Humidifier.EC2.EC2Fleet CreateEC2Fleet()
    {
        var eC2FleetResult = new Humidifier.EC2.EC2Fleet
        {
            GivenName = InputResourceName,
        };

        return eC2FleetResult;
    }
    public override void CreateChildren(Humidifier.EC2.EC2Fleet result)
    {
        base.CreateChildren(result);

        result.TagSpecifications = TagSpecificationsFactories.Any() ? TagSpecificationsFactories.Select(x => x.Build()).ToList() : null;
        result.LaunchTemplateConfigs = LaunchTemplateConfigsFactories.Any() ? LaunchTemplateConfigsFactories.Select(x => x.Build()).ToList() : null;
        result.TargetCapacitySpecification ??= TargetCapacitySpecificationFactory?.Build();
        result.OnDemandOptions ??= OnDemandOptionsFactory?.Build();
        result.SpotOptions ??= SpotOptionsFactory?.Build();
    }

} // End Of Class

public static class EC2FleetFactoryExtensions
{
    public static CombinedResult<EC2FleetFactory, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications(this EC2FleetFactory parentFactory, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null)
    {
        var factory = new InnerEC2FleetTagSpecificationFactory(subFactoryAction);
        parentFactory.TagSpecificationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<EC2FleetFactory, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs(this EC2FleetFactory parentFactory, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null)
    {
        var factory = new InnerEC2FleetFleetLaunchTemplateConfigRequestFactory(subFactoryAction);
        parentFactory.LaunchTemplateConfigsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<EC2FleetFactory, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification(this EC2FleetFactory parentFactory, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null)
    {
        parentFactory.TargetCapacitySpecificationFactory = new InnerEC2FleetTargetCapacitySpecificationRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TargetCapacitySpecificationFactory);
    }

    public static CombinedResult<EC2FleetFactory, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions(this EC2FleetFactory parentFactory, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null)
    {
        parentFactory.OnDemandOptionsFactory = new InnerEC2FleetOnDemandOptionsRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OnDemandOptionsFactory);
    }

    public static CombinedResult<EC2FleetFactory, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions(this EC2FleetFactory parentFactory, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null)
    {
        parentFactory.SpotOptionsFactory = new InnerEC2FleetSpotOptionsRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SpotOptionsFactory);
    }

    public static CombinedResult<EC2FleetFactory, T1, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1>(this CombinedResult<EC2FleetFactory, T1> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1>(this CombinedResult<T1, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2>(this CombinedResult<EC2FleetFactory, T1, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2>(this CombinedResult<T1, EC2FleetFactory, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2>(this CombinedResult<T1, T2, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<EC2FleetFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<T1, EC2FleetFactory, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, EC2FleetFactory, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3>(this CombinedResult<T1, T2, T3, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, T4, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<EC2FleetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, T4, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, EC2FleetFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, T4, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, EC2FleetFactory, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, T4, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, EC2FleetFactory, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, EC2FleetFactory, InnerEC2FleetTagSpecificationFactory> WithTagSpecifications<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TagSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTagSpecifications(combinedResult.T5, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1>(this CombinedResult<EC2FleetFactory, T1> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1>(this CombinedResult<T1, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2>(this CombinedResult<EC2FleetFactory, T1, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2>(this CombinedResult<T1, EC2FleetFactory, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2>(this CombinedResult<T1, T2, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3>(this CombinedResult<EC2FleetFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3>(this CombinedResult<T1, EC2FleetFactory, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3>(this CombinedResult<T1, T2, EC2FleetFactory, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3>(this CombinedResult<T1, T2, T3, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, T4, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3, T4>(this CombinedResult<EC2FleetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, T4, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3, T4>(this CombinedResult<T1, EC2FleetFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, T4, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3, T4>(this CombinedResult<T1, T2, EC2FleetFactory, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, T4, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, EC2FleetFactory, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, EC2FleetFactory, InnerEC2FleetFleetLaunchTemplateConfigRequestFactory> WithLaunchTemplateConfigs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.FleetLaunchTemplateConfigRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplateConfigs(combinedResult.T5, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1>(this CombinedResult<EC2FleetFactory, T1> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1>(this CombinedResult<T1, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2>(this CombinedResult<EC2FleetFactory, T1, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2>(this CombinedResult<T1, EC2FleetFactory, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2>(this CombinedResult<T1, T2, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3>(this CombinedResult<EC2FleetFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3>(this CombinedResult<T1, EC2FleetFactory, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3>(this CombinedResult<T1, T2, EC2FleetFactory, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, T4, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3, T4>(this CombinedResult<EC2FleetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, T4, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3, T4>(this CombinedResult<T1, EC2FleetFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, T4, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, EC2FleetFactory, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, T4, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, EC2FleetFactory, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, EC2FleetFactory, InnerEC2FleetTargetCapacitySpecificationRequestFactory> WithTargetCapacitySpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.TargetCapacitySpecificationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetCapacitySpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1>(this CombinedResult<EC2FleetFactory, T1> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1>(this CombinedResult<T1, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2>(this CombinedResult<EC2FleetFactory, T1, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2>(this CombinedResult<T1, EC2FleetFactory, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2>(this CombinedResult<T1, T2, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3>(this CombinedResult<EC2FleetFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3>(this CombinedResult<T1, EC2FleetFactory, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3>(this CombinedResult<T1, T2, EC2FleetFactory, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, T4, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3, T4>(this CombinedResult<EC2FleetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, T4, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3, T4>(this CombinedResult<T1, EC2FleetFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, T4, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, EC2FleetFactory, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, T4, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, EC2FleetFactory, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, EC2FleetFactory, InnerEC2FleetOnDemandOptionsRequestFactory> WithOnDemandOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.OnDemandOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1>(this CombinedResult<EC2FleetFactory, T1> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithSpotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1>(this CombinedResult<T1, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithSpotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2>(this CombinedResult<EC2FleetFactory, T1, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2>(this CombinedResult<T1, EC2FleetFactory, T2> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2>(this CombinedResult<T1, T2, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3>(this CombinedResult<EC2FleetFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3>(this CombinedResult<T1, EC2FleetFactory, T2, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3>(this CombinedResult<T1, T2, EC2FleetFactory, T3> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<EC2FleetFactory, T1, T2, T3, T4, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3, T4>(this CombinedResult<EC2FleetFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, EC2FleetFactory, T2, T3, T4, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3, T4>(this CombinedResult<T1, EC2FleetFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, EC2FleetFactory, T3, T4, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, EC2FleetFactory, T3, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, EC2FleetFactory, T4, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, EC2FleetFactory, T4> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, EC2FleetFactory, InnerEC2FleetSpotOptionsRequestFactory> WithSpotOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, EC2FleetFactory> combinedResult, Action<Humidifier.EC2.EC2FleetTypes.SpotOptionsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSpotOptions(combinedResult.T5, subFactoryAction));
}
