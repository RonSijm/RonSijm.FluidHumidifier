// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EC2;

public class VerifiedAccessEndpointFactory(string resourceName = null, Action<Humidifier.EC2.VerifiedAccessEndpoint> factoryAction = null) : ResourceFactory<Humidifier.EC2.VerifiedAccessEndpoint>(resourceName)
{

    internal InnerVerifiedAccessEndpointLoadBalancerOptionsFactory LoadBalancerOptionsFactory { get; set; }

    internal InnerVerifiedAccessEndpointSseSpecificationFactory SseSpecificationFactory { get; set; }

    internal InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory NetworkInterfaceOptionsFactory { get; set; }

    protected override Humidifier.EC2.VerifiedAccessEndpoint Create()
    {
        var verifiedAccessEndpointResult = CreateVerifiedAccessEndpoint();
        factoryAction?.Invoke(verifiedAccessEndpointResult);

        return verifiedAccessEndpointResult;
    }

    private Humidifier.EC2.VerifiedAccessEndpoint CreateVerifiedAccessEndpoint()
    {
        var verifiedAccessEndpointResult = new Humidifier.EC2.VerifiedAccessEndpoint
        {
            GivenName = InputResourceName,
        };

        return verifiedAccessEndpointResult;
    }
    public override void CreateChildren(Humidifier.EC2.VerifiedAccessEndpoint result)
    {
        base.CreateChildren(result);

        result.LoadBalancerOptions ??= LoadBalancerOptionsFactory?.Build();
        result.SseSpecification ??= SseSpecificationFactory?.Build();
        result.NetworkInterfaceOptions ??= NetworkInterfaceOptionsFactory?.Build();
    }

} // End Of Class

public static class VerifiedAccessEndpointFactoryExtensions
{
    public static CombinedResult<VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions(this VerifiedAccessEndpointFactory parentFactory, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null)
    {
        parentFactory.LoadBalancerOptionsFactory = new InnerVerifiedAccessEndpointLoadBalancerOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoadBalancerOptionsFactory);
    }

    public static CombinedResult<VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification(this VerifiedAccessEndpointFactory parentFactory, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null)
    {
        parentFactory.SseSpecificationFactory = new InnerVerifiedAccessEndpointSseSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SseSpecificationFactory);
    }

    public static CombinedResult<VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions(this VerifiedAccessEndpointFactory parentFactory, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null)
    {
        parentFactory.NetworkInterfaceOptionsFactory = new InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NetworkInterfaceOptionsFactory);
    }

    public static CombinedResult<VerifiedAccessEndpointFactory, T1, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1>(this CombinedResult<VerifiedAccessEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1>(this CombinedResult<T1, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, T4, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3, T4>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, T4, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3, T4>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, T4, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, T4, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointLoadBalancerOptionsFactory> WithLoadBalancerOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.LoadBalancerOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1>(this CombinedResult<VerifiedAccessEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSseSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1>(this CombinedResult<T1, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSseSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, T4, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3, T4>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, T4, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3, T4>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, T4, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, T4, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointSseSpecificationFactory> WithSseSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.SseSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1>(this CombinedResult<VerifiedAccessEndpointFactory, T1> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1>(this CombinedResult<T1, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, T4, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3, T4>(this CombinedResult<VerifiedAccessEndpointFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, T4, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3, T4>(this CombinedResult<T1, VerifiedAccessEndpointFactory, T2, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, T4, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, VerifiedAccessEndpointFactory, T3, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, T4, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, VerifiedAccessEndpointFactory, T4> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, VerifiedAccessEndpointFactory, InnerVerifiedAccessEndpointNetworkInterfaceOptionsFactory> WithNetworkInterfaceOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, VerifiedAccessEndpointFactory> combinedResult, Action<Humidifier.EC2.VerifiedAccessEndpointTypes.NetworkInterfaceOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkInterfaceOptions(combinedResult.T5, subFactoryAction));
}
