// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.DataBrew;

public class InnerDatasetInputFactory(Action<Humidifier.DataBrew.DatasetTypes.Input> factoryAction = null) : SubResourceFactory<Humidifier.DataBrew.DatasetTypes.Input>
{

    internal InnerDatasetDatabaseInputDefinitionFactory DatabaseInputDefinitionFactory { get; set; }

    internal InnerDatasetS3LocationFactory S3InputDefinitionFactory { get; set; }

    internal InnerDatasetMetadataFactory MetadataFactory { get; set; }

    internal InnerDatasetDataCatalogInputDefinitionFactory DataCatalogInputDefinitionFactory { get; set; }

    protected override Humidifier.DataBrew.DatasetTypes.Input Create()
    {
        var inputResult = CreateInput();
        factoryAction?.Invoke(inputResult);

        return inputResult;
    }

    private Humidifier.DataBrew.DatasetTypes.Input CreateInput()
    {
        var inputResult = new Humidifier.DataBrew.DatasetTypes.Input();

        return inputResult;
    }
    public override void CreateChildren(Humidifier.DataBrew.DatasetTypes.Input result)
    {
        base.CreateChildren(result);

        result.DatabaseInputDefinition ??= DatabaseInputDefinitionFactory?.Build();
        result.S3InputDefinition ??= S3InputDefinitionFactory?.Build();
        result.Metadata ??= MetadataFactory?.Build();
        result.DataCatalogInputDefinition ??= DataCatalogInputDefinitionFactory?.Build();
    }

} // End Of Class

public static class InnerDatasetInputFactoryExtensions
{
    public static CombinedResult<InnerDatasetInputFactory, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition(this InnerDatasetInputFactory parentFactory, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null)
    {
        parentFactory.DatabaseInputDefinitionFactory = new InnerDatasetDatabaseInputDefinitionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DatabaseInputDefinitionFactory);
    }

    public static CombinedResult<InnerDatasetInputFactory, InnerDatasetS3LocationFactory> WithS3InputDefinition(this InnerDatasetInputFactory parentFactory, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null)
    {
        parentFactory.S3InputDefinitionFactory = new InnerDatasetS3LocationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3InputDefinitionFactory);
    }

    public static CombinedResult<InnerDatasetInputFactory, InnerDatasetMetadataFactory> WithMetadata(this InnerDatasetInputFactory parentFactory, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null)
    {
        parentFactory.MetadataFactory = new InnerDatasetMetadataFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MetadataFactory);
    }

    public static CombinedResult<InnerDatasetInputFactory, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition(this InnerDatasetInputFactory parentFactory, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null)
    {
        parentFactory.DataCatalogInputDefinitionFactory = new InnerDatasetDataCatalogInputDefinitionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataCatalogInputDefinitionFactory);
    }

    public static CombinedResult<InnerDatasetInputFactory, T1, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1>(this CombinedResult<InnerDatasetInputFactory, T1> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1>(this CombinedResult<T1, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2>(this CombinedResult<InnerDatasetInputFactory, T1, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2>(this CombinedResult<T1, InnerDatasetInputFactory, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2>(this CombinedResult<T1, T2, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3, T4>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory, InnerDatasetDatabaseInputDefinitionFactory> WithDatabaseInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DatabaseInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatabaseInputDefinition(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1>(this CombinedResult<InnerDatasetInputFactory, T1> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1>(this CombinedResult<T1, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2>(this CombinedResult<InnerDatasetInputFactory, T1, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2>(this CombinedResult<T1, InnerDatasetInputFactory, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2>(this CombinedResult<T1, T2, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3, T4>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory, InnerDatasetS3LocationFactory> WithS3InputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3InputDefinition(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, InnerDatasetMetadataFactory> WithMetadata<T1>(this CombinedResult<InnerDatasetInputFactory, T1> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, InnerDatasetMetadataFactory> WithMetadata<T1>(this CombinedResult<T1, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, InnerDatasetMetadataFactory> WithMetadata<T1, T2>(this CombinedResult<InnerDatasetInputFactory, T1, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, InnerDatasetMetadataFactory> WithMetadata<T1, T2>(this CombinedResult<T1, InnerDatasetInputFactory, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, InnerDatasetMetadataFactory> WithMetadata<T1, T2>(this CombinedResult<T1, T2, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3, T4>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3, T4>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory, InnerDatasetMetadataFactory> WithMetadata<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.Metadata> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetadata(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1>(this CombinedResult<InnerDatasetInputFactory, T1> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1>(this CombinedResult<T1, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2>(this CombinedResult<InnerDatasetInputFactory, T1, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2>(this CombinedResult<T1, InnerDatasetInputFactory, T2> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2>(this CombinedResult<T1, T2, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3, T4>(this CombinedResult<InnerDatasetInputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, InnerDatasetInputFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDatasetInputFactory, T3, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDatasetInputFactory, T4> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory, InnerDatasetDataCatalogInputDefinitionFactory> WithDataCatalogInputDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDatasetInputFactory> combinedResult, Action<Humidifier.DataBrew.DatasetTypes.DataCatalogInputDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataCatalogInputDefinition(combinedResult.T5, subFactoryAction));
}
