// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KafkaConnect;

public class ConnectorFactory(string resourceName = null, Action<Humidifier.KafkaConnect.Connector> factoryAction = null) : ResourceFactory<Humidifier.KafkaConnect.Connector>(resourceName)
{

    internal List<InnerConnectorPluginFactory> PluginsFactories { get; set; } = [];

    internal InnerConnectorKafkaClusterFactory KafkaClusterFactory { get; set; }

    internal InnerConnectorLogDeliveryFactory LogDeliveryFactory { get; set; }

    internal InnerConnectorWorkerConfigurationFactory WorkerConfigurationFactory { get; set; }

    internal InnerConnectorCapacityFactory CapacityFactory { get; set; }

    internal InnerConnectorKafkaClusterEncryptionInTransitFactory KafkaClusterEncryptionInTransitFactory { get; set; }

    internal InnerConnectorKafkaClusterClientAuthenticationFactory KafkaClusterClientAuthenticationFactory { get; set; }

    protected override Humidifier.KafkaConnect.Connector Create()
    {
        var connectorResult = CreateConnector();
        factoryAction?.Invoke(connectorResult);

        return connectorResult;
    }

    private Humidifier.KafkaConnect.Connector CreateConnector()
    {
        var connectorResult = new Humidifier.KafkaConnect.Connector
        {
            GivenName = InputResourceName,
        };

        return connectorResult;
    }
    public override void CreateChildren(Humidifier.KafkaConnect.Connector result)
    {
        base.CreateChildren(result);

        result.Plugins = PluginsFactories.Any() ? PluginsFactories.Select(x => x.Build()).ToList() : null;
        result.KafkaCluster ??= KafkaClusterFactory?.Build();
        result.LogDelivery ??= LogDeliveryFactory?.Build();
        result.WorkerConfiguration ??= WorkerConfigurationFactory?.Build();
        result.Capacity ??= CapacityFactory?.Build();
        result.KafkaClusterEncryptionInTransit ??= KafkaClusterEncryptionInTransitFactory?.Build();
        result.KafkaClusterClientAuthentication ??= KafkaClusterClientAuthenticationFactory?.Build();
    }

} // End Of Class

public static class ConnectorFactoryExtensions
{
    public static CombinedResult<ConnectorFactory, InnerConnectorPluginFactory> WithPlugins(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null)
    {
        var factory = new InnerConnectorPluginFactory(subFactoryAction);
        parentFactory.PluginsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ConnectorFactory, InnerConnectorKafkaClusterFactory> WithKafkaCluster(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null)
    {
        parentFactory.KafkaClusterFactory = new InnerConnectorKafkaClusterFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KafkaClusterFactory);
    }

    public static CombinedResult<ConnectorFactory, InnerConnectorLogDeliveryFactory> WithLogDelivery(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null)
    {
        parentFactory.LogDeliveryFactory = new InnerConnectorLogDeliveryFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LogDeliveryFactory);
    }

    public static CombinedResult<ConnectorFactory, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null)
    {
        parentFactory.WorkerConfigurationFactory = new InnerConnectorWorkerConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.WorkerConfigurationFactory);
    }

    public static CombinedResult<ConnectorFactory, InnerConnectorCapacityFactory> WithCapacity(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null)
    {
        parentFactory.CapacityFactory = new InnerConnectorCapacityFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CapacityFactory);
    }

    public static CombinedResult<ConnectorFactory, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null)
    {
        parentFactory.KafkaClusterEncryptionInTransitFactory = new InnerConnectorKafkaClusterEncryptionInTransitFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KafkaClusterEncryptionInTransitFactory);
    }

    public static CombinedResult<ConnectorFactory, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication(this ConnectorFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null)
    {
        parentFactory.KafkaClusterClientAuthenticationFactory = new InnerConnectorKafkaClusterClientAuthenticationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KafkaClusterClientAuthenticationFactory);
    }

    public static CombinedResult<ConnectorFactory, T1, InnerConnectorPluginFactory> WithPlugins<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlugins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorPluginFactory> WithPlugins<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlugins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorPluginFactory> WithPlugins<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorPluginFactory> WithPlugins<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorPluginFactory> WithPlugins<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorPluginFactory> WithPlugins<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Plugin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlugins(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, WithKafkaCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, WithKafkaCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorKafkaClusterFactory> WithKafkaCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaCluster> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaCluster(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogDelivery(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogDelivery(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorLogDeliveryFactory> WithLogDelivery<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogDelivery(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorWorkerConfigurationFactory> WithWorkerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkerConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, InnerConnectorCapacityFactory> WithCapacity<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, WithCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorCapacityFactory> WithCapacity<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, WithCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorCapacityFactory> WithCapacity<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorCapacityFactory> WithCapacity<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorCapacityFactory> WithCapacity<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorCapacityFactory> WithCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.Capacity> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacity(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorKafkaClusterEncryptionInTransitFactory> WithKafkaClusterEncryptionInTransit<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterEncryptionInTransit> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterEncryptionInTransit(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1>(this CombinedResult<ConnectorFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1>(this CombinedResult<T1, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2>(this CombinedResult<ConnectorFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2>(this CombinedResult<T1, ConnectorFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2>(this CombinedResult<T1, T2, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3>(this CombinedResult<ConnectorFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3>(this CombinedResult<T1, ConnectorFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, ConnectorFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3>(this CombinedResult<T1, T2, T3, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ConnectorFactory, T1, T2, T3, T4, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3, T4>(this CombinedResult<ConnectorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ConnectorFactory, T2, T3, T4, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, ConnectorFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ConnectorFactory, T3, T4, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, ConnectorFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ConnectorFactory, T4, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ConnectorFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ConnectorFactory, InnerConnectorKafkaClusterClientAuthenticationFactory> WithKafkaClusterClientAuthentication<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ConnectorFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.KafkaClusterClientAuthentication> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKafkaClusterClientAuthentication(combinedResult.T5, subFactoryAction));
}
