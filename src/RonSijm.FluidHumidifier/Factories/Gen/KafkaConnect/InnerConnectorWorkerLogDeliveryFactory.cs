// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KafkaConnect;

public class InnerConnectorWorkerLogDeliveryFactory(Action<Humidifier.KafkaConnect.ConnectorTypes.WorkerLogDelivery> factoryAction = null) : SubResourceFactory<Humidifier.KafkaConnect.ConnectorTypes.WorkerLogDelivery>
{

    internal InnerConnectorS3LogDeliveryFactory S3Factory { get; set; }

    internal InnerConnectorFirehoseLogDeliveryFactory FirehoseFactory { get; set; }

    internal InnerConnectorCloudWatchLogsLogDeliveryFactory CloudWatchLogsFactory { get; set; }

    protected override Humidifier.KafkaConnect.ConnectorTypes.WorkerLogDelivery Create()
    {
        var workerLogDeliveryResult = CreateWorkerLogDelivery();
        factoryAction?.Invoke(workerLogDeliveryResult);

        return workerLogDeliveryResult;
    }

    private Humidifier.KafkaConnect.ConnectorTypes.WorkerLogDelivery CreateWorkerLogDelivery()
    {
        var workerLogDeliveryResult = new Humidifier.KafkaConnect.ConnectorTypes.WorkerLogDelivery();

        return workerLogDeliveryResult;
    }
    public override void CreateChildren(Humidifier.KafkaConnect.ConnectorTypes.WorkerLogDelivery result)
    {
        base.CreateChildren(result);

        result.S3 ??= S3Factory?.Build();
        result.Firehose ??= FirehoseFactory?.Build();
        result.CloudWatchLogs ??= CloudWatchLogsFactory?.Build();
    }

} // End Of Class

public static class InnerConnectorWorkerLogDeliveryFactoryExtensions
{
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, InnerConnectorS3LogDeliveryFactory> WithS3(this InnerConnectorWorkerLogDeliveryFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null)
    {
        parentFactory.S3Factory = new InnerConnectorS3LogDeliveryFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3Factory);
    }

    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose(this InnerConnectorWorkerLogDeliveryFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null)
    {
        parentFactory.FirehoseFactory = new InnerConnectorFirehoseLogDeliveryFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FirehoseFactory);
    }

    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs(this InnerConnectorWorkerLogDeliveryFactory parentFactory, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null)
    {
        parentFactory.CloudWatchLogsFactory = new InnerConnectorCloudWatchLogsLogDeliveryFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLogsFactory);
    }

    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, InnerConnectorS3LogDeliveryFactory> WithS3<T1>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorS3LogDeliveryFactory> WithS3<T1>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, T4, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, T4, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, T4, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, T4, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorS3LogDeliveryFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.S3LogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, T4, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, T4, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, T4, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, T4, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorFirehoseLogDeliveryFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.FirehoseLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, T4, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<InnerConnectorWorkerLogDeliveryFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, T4, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, InnerConnectorWorkerLogDeliveryFactory, T2, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, T4, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerConnectorWorkerLogDeliveryFactory, T3, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, T4, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerConnectorWorkerLogDeliveryFactory, T4> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerConnectorWorkerLogDeliveryFactory, InnerConnectorCloudWatchLogsLogDeliveryFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerConnectorWorkerLogDeliveryFactory> combinedResult, Action<Humidifier.KafkaConnect.ConnectorTypes.CloudWatchLogsLogDelivery> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T5, subFactoryAction));
}
