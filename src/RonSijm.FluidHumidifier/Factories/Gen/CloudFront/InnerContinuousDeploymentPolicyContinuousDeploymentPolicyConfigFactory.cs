// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CloudFront;

public class InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory(Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.ContinuousDeploymentPolicyConfig> factoryAction = null) : SubResourceFactory<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.ContinuousDeploymentPolicyConfig>
{

    internal InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory SingleHeaderPolicyConfigFactory { get; set; }

    internal InnerContinuousDeploymentPolicyTrafficConfigFactory TrafficConfigFactory { get; set; }

    internal InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory SingleWeightPolicyConfigFactory { get; set; }

    protected override Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.ContinuousDeploymentPolicyConfig Create()
    {
        var continuousDeploymentPolicyConfigResult = CreateContinuousDeploymentPolicyConfig();
        factoryAction?.Invoke(continuousDeploymentPolicyConfigResult);

        return continuousDeploymentPolicyConfigResult;
    }

    private Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.ContinuousDeploymentPolicyConfig CreateContinuousDeploymentPolicyConfig()
    {
        var continuousDeploymentPolicyConfigResult = new Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.ContinuousDeploymentPolicyConfig();

        return continuousDeploymentPolicyConfigResult;
    }
    public override void CreateChildren(Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.ContinuousDeploymentPolicyConfig result)
    {
        base.CreateChildren(result);

        result.SingleHeaderPolicyConfig ??= SingleHeaderPolicyConfigFactory?.Build();
        result.TrafficConfig ??= TrafficConfigFactory?.Build();
        result.SingleWeightPolicyConfig ??= SingleWeightPolicyConfigFactory?.Build();
    }

} // End Of Class

public static class InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactoryExtensions
{
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig(this InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory parentFactory, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null)
    {
        parentFactory.SingleHeaderPolicyConfigFactory = new InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SingleHeaderPolicyConfigFactory);
    }

    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig(this InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory parentFactory, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null)
    {
        parentFactory.TrafficConfigFactory = new InnerContinuousDeploymentPolicyTrafficConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TrafficConfigFactory);
    }

    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig(this InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory parentFactory, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null)
    {
        parentFactory.SingleWeightPolicyConfigFactory = new InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SingleWeightPolicyConfigFactory);
    }

    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, T4, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3, T4>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, T4, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, T4, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T4, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleHeaderPolicyConfigFactory> WithSingleHeaderPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleHeaderPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleHeaderPolicyConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTrafficConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTrafficConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, T4, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3, T4>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, T4, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, T4, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T4, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicyTrafficConfigFactory> WithTrafficConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.TrafficConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrafficConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, T4, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3, T4>(this CombinedResult<InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, T4, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, T4, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T4, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory, InnerContinuousDeploymentPolicySingleWeightPolicyConfigFactory> WithSingleWeightPolicyConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerContinuousDeploymentPolicyContinuousDeploymentPolicyConfigFactory> combinedResult, Action<Humidifier.CloudFront.ContinuousDeploymentPolicyTypes.SingleWeightPolicyConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSingleWeightPolicyConfig(combinedResult.T5, subFactoryAction));
}
