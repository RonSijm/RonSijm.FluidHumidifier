// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CloudFront;

public class InnerDistributionDistributionConfigFactory(Action<Humidifier.CloudFront.DistributionTypes.DistributionConfig> factoryAction = null) : SubResourceFactory<Humidifier.CloudFront.DistributionTypes.DistributionConfig>
{

    internal InnerDistributionLoggingFactory LoggingFactory { get; set; }

    internal InnerDistributionViewerCertificateFactory ViewerCertificateFactory { get; set; }

    internal InnerDistributionLegacyCustomOriginFactory CustomOriginFactory { get; set; }

    internal InnerDistributionLegacyS3OriginFactory S3OriginFactory { get; set; }

    internal InnerDistributionDefaultCacheBehaviorFactory DefaultCacheBehaviorFactory { get; set; }

    internal InnerDistributionOriginGroupsFactory OriginGroupsFactory { get; set; }

    internal InnerDistributionRestrictionsFactory RestrictionsFactory { get; set; }

    protected override Humidifier.CloudFront.DistributionTypes.DistributionConfig Create()
    {
        var distributionConfigResult = CreateDistributionConfig();
        factoryAction?.Invoke(distributionConfigResult);

        return distributionConfigResult;
    }

    private Humidifier.CloudFront.DistributionTypes.DistributionConfig CreateDistributionConfig()
    {
        var distributionConfigResult = new Humidifier.CloudFront.DistributionTypes.DistributionConfig();

        return distributionConfigResult;
    }
    public override void CreateChildren(Humidifier.CloudFront.DistributionTypes.DistributionConfig result)
    {
        base.CreateChildren(result);

        result.Logging ??= LoggingFactory?.Build();
        result.ViewerCertificate ??= ViewerCertificateFactory?.Build();
        result.CustomOrigin ??= CustomOriginFactory?.Build();
        result.S3Origin ??= S3OriginFactory?.Build();
        result.DefaultCacheBehavior ??= DefaultCacheBehaviorFactory?.Build();
        result.OriginGroups ??= OriginGroupsFactory?.Build();
        result.Restrictions ??= RestrictionsFactory?.Build();
    }

} // End Of Class

public static class InnerDistributionDistributionConfigFactoryExtensions
{
    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionLoggingFactory> WithLogging(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null)
    {
        parentFactory.LoggingFactory = new InnerDistributionLoggingFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoggingFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionViewerCertificateFactory> WithViewerCertificate(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null)
    {
        parentFactory.ViewerCertificateFactory = new InnerDistributionViewerCertificateFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ViewerCertificateFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null)
    {
        parentFactory.CustomOriginFactory = new InnerDistributionLegacyCustomOriginFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CustomOriginFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionLegacyS3OriginFactory> WithS3Origin(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null)
    {
        parentFactory.S3OriginFactory = new InnerDistributionLegacyS3OriginFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3OriginFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null)
    {
        parentFactory.DefaultCacheBehaviorFactory = new InnerDistributionDefaultCacheBehaviorFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DefaultCacheBehaviorFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionOriginGroupsFactory> WithOriginGroups(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null)
    {
        parentFactory.OriginGroupsFactory = new InnerDistributionOriginGroupsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OriginGroupsFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, InnerDistributionRestrictionsFactory> WithRestrictions(this InnerDistributionDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null)
    {
        parentFactory.RestrictionsFactory = new InnerDistributionRestrictionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RestrictionsFactory);
    }

    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionLoggingFactory> WithLogging<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionLoggingFactory> WithLogging<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionLoggingFactory> WithLogging<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionLoggingFactory> WithLogging<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionLoggingFactory> WithLogging<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, WithViewerCertificate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, WithViewerCertificate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionViewerCertificateFactory> WithViewerCertificate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.ViewerCertificate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithViewerCertificate(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyCustomOriginFactory> WithCustomOrigin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyCustomOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomOrigin(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionLegacyS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.LegacyS3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionDefaultCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.DefaultCacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, WithOriginGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, WithOriginGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionOriginGroupsFactory> WithOriginGroups<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.OriginGroups> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOriginGroups(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, InnerDistributionRestrictionsFactory> WithRestrictions<T1>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, WithRestrictions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, InnerDistributionRestrictionsFactory> WithRestrictions<T1>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, WithRestrictions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3, T4>(this CombinedResult<InnerDistributionDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3, T4>(this CombinedResult<T1, InnerDistributionDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDistributionDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDistributionDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory, InnerDistributionRestrictionsFactory> WithRestrictions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDistributionDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.DistributionTypes.Restrictions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRestrictions(combinedResult.T5, subFactoryAction));
}
