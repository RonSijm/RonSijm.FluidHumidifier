// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CloudFront;

public class InnerStreamingDistributionStreamingDistributionConfigFactory(Action<Humidifier.CloudFront.StreamingDistributionTypes.StreamingDistributionConfig> factoryAction = null) : SubResourceFactory<Humidifier.CloudFront.StreamingDistributionTypes.StreamingDistributionConfig>
{

    internal InnerStreamingDistributionLoggingFactory LoggingFactory { get; set; }

    internal InnerStreamingDistributionS3OriginFactory S3OriginFactory { get; set; }

    internal InnerStreamingDistributionTrustedSignersFactory TrustedSignersFactory { get; set; }

    protected override Humidifier.CloudFront.StreamingDistributionTypes.StreamingDistributionConfig Create()
    {
        var streamingDistributionConfigResult = CreateStreamingDistributionConfig();
        factoryAction?.Invoke(streamingDistributionConfigResult);

        return streamingDistributionConfigResult;
    }

    private Humidifier.CloudFront.StreamingDistributionTypes.StreamingDistributionConfig CreateStreamingDistributionConfig()
    {
        var streamingDistributionConfigResult = new Humidifier.CloudFront.StreamingDistributionTypes.StreamingDistributionConfig();

        return streamingDistributionConfigResult;
    }
    public override void CreateChildren(Humidifier.CloudFront.StreamingDistributionTypes.StreamingDistributionConfig result)
    {
        base.CreateChildren(result);

        result.Logging ??= LoggingFactory?.Build();
        result.S3Origin ??= S3OriginFactory?.Build();
        result.TrustedSigners ??= TrustedSignersFactory?.Build();
    }

} // End Of Class

public static class InnerStreamingDistributionStreamingDistributionConfigFactoryExtensions
{
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionLoggingFactory> WithLogging(this InnerStreamingDistributionStreamingDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null)
    {
        parentFactory.LoggingFactory = new InnerStreamingDistributionLoggingFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoggingFactory);
    }

    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionS3OriginFactory> WithS3Origin(this InnerStreamingDistributionStreamingDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null)
    {
        parentFactory.S3OriginFactory = new InnerStreamingDistributionS3OriginFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3OriginFactory);
    }

    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners(this InnerStreamingDistributionStreamingDistributionConfigFactory parentFactory, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null)
    {
        parentFactory.TrustedSignersFactory = new InnerStreamingDistributionTrustedSignersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TrustedSignersFactory);
    }

    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, InnerStreamingDistributionLoggingFactory> WithLogging<T1>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionLoggingFactory> WithLogging<T1>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, T4, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, T4, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, T4, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, T4, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, T4, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, T4, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, T4, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, T4, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionS3OriginFactory> WithS3Origin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.S3Origin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Origin(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, WithTrustedSigners(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, WithTrustedSigners(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, T4, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3, T4>(this CombinedResult<InnerStreamingDistributionStreamingDistributionConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, T4, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3, T4>(this CombinedResult<T1, InnerStreamingDistributionStreamingDistributionConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, T4, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerStreamingDistributionStreamingDistributionConfigFactory, T3, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, T4, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerStreamingDistributionStreamingDistributionConfigFactory, T4> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerStreamingDistributionStreamingDistributionConfigFactory, InnerStreamingDistributionTrustedSignersFactory> WithTrustedSigners<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerStreamingDistributionStreamingDistributionConfigFactory> combinedResult, Action<Humidifier.CloudFront.StreamingDistributionTypes.TrustedSigners> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTrustedSigners(combinedResult.T5, subFactoryAction));
}
