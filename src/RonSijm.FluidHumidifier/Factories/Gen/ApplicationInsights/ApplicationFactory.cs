// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ApplicationInsights;

public class ApplicationFactory(string resourceName = null, Action<Humidifier.ApplicationInsights.Application> factoryAction = null) : ResourceFactory<Humidifier.ApplicationInsights.Application>(resourceName)
{

    internal List<InnerApplicationCustomComponentFactory> CustomComponentsFactories { get; set; } = [];

    internal List<InnerApplicationLogPatternSetFactory> LogPatternSetsFactories { get; set; } = [];

    internal List<InnerApplicationComponentMonitoringSettingFactory> ComponentMonitoringSettingsFactories { get; set; } = [];

    protected override Humidifier.ApplicationInsights.Application Create()
    {
        var applicationResult = CreateApplication();
        factoryAction?.Invoke(applicationResult);

        return applicationResult;
    }

    private Humidifier.ApplicationInsights.Application CreateApplication()
    {
        var applicationResult = new Humidifier.ApplicationInsights.Application
        {
            GivenName = InputResourceName,
        };

        return applicationResult;
    }
    public override void CreateChildren(Humidifier.ApplicationInsights.Application result)
    {
        base.CreateChildren(result);

        result.CustomComponents = CustomComponentsFactories.Any() ? CustomComponentsFactories.Select(x => x.Build()).ToList() : null;
        result.LogPatternSets = LogPatternSetsFactories.Any() ? LogPatternSetsFactories.Select(x => x.Build()).ToList() : null;
        result.ComponentMonitoringSettings = ComponentMonitoringSettingsFactories.Any() ? ComponentMonitoringSettingsFactories.Select(x => x.Build()).ToList() : null;
    }

} // End Of Class

public static class ApplicationFactoryExtensions
{
    public static CombinedResult<ApplicationFactory, InnerApplicationCustomComponentFactory> WithCustomComponents(this ApplicationFactory parentFactory, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null)
    {
        var factory = new InnerApplicationCustomComponentFactory(subFactoryAction);
        parentFactory.CustomComponentsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ApplicationFactory, InnerApplicationLogPatternSetFactory> WithLogPatternSets(this ApplicationFactory parentFactory, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null)
    {
        var factory = new InnerApplicationLogPatternSetFactory(subFactoryAction);
        parentFactory.LogPatternSetsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ApplicationFactory, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings(this ApplicationFactory parentFactory, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null)
    {
        var factory = new InnerApplicationComponentMonitoringSettingFactory(subFactoryAction);
        parentFactory.ComponentMonitoringSettingsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationCustomComponentFactory> WithCustomComponents<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationCustomComponentFactory> WithCustomComponents<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationCustomComponentFactory> WithCustomComponents<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.CustomComponent> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomComponents(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogPatternSets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogPatternSets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationLogPatternSetFactory> WithLogPatternSets<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.LogPatternSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogPatternSets(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationComponentMonitoringSettingFactory> WithComponentMonitoringSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.ApplicationInsights.ApplicationTypes.ComponentMonitoringSetting> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComponentMonitoringSettings(combinedResult.T5, subFactoryAction));
}
