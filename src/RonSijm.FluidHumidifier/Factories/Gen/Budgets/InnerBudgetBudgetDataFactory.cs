// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Budgets;

public class InnerBudgetBudgetDataFactory(Action<Humidifier.Budgets.BudgetTypes.BudgetData> factoryAction = null) : SubResourceFactory<Humidifier.Budgets.BudgetTypes.BudgetData>
{

    internal InnerBudgetSpendFactory BudgetLimitFactory { get; set; }

    internal InnerBudgetTimePeriodFactory TimePeriodFactory { get; set; }

    internal InnerBudgetAutoAdjustDataFactory AutoAdjustDataFactory { get; set; }

    internal InnerBudgetCostTypesFactory CostTypesFactory { get; set; }

    protected override Humidifier.Budgets.BudgetTypes.BudgetData Create()
    {
        var budgetDataResult = CreateBudgetData();
        factoryAction?.Invoke(budgetDataResult);

        return budgetDataResult;
    }

    private Humidifier.Budgets.BudgetTypes.BudgetData CreateBudgetData()
    {
        var budgetDataResult = new Humidifier.Budgets.BudgetTypes.BudgetData();

        return budgetDataResult;
    }
    public override void CreateChildren(Humidifier.Budgets.BudgetTypes.BudgetData result)
    {
        base.CreateChildren(result);

        result.BudgetLimit ??= BudgetLimitFactory?.Build();
        result.TimePeriod ??= TimePeriodFactory?.Build();
        result.AutoAdjustData ??= AutoAdjustDataFactory?.Build();
        result.CostTypes ??= CostTypesFactory?.Build();
    }

} // End Of Class

public static class InnerBudgetBudgetDataFactoryExtensions
{
    public static CombinedResult<InnerBudgetBudgetDataFactory, InnerBudgetSpendFactory> WithBudgetLimit(this InnerBudgetBudgetDataFactory parentFactory, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null)
    {
        parentFactory.BudgetLimitFactory = new InnerBudgetSpendFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BudgetLimitFactory);
    }

    public static CombinedResult<InnerBudgetBudgetDataFactory, InnerBudgetTimePeriodFactory> WithTimePeriod(this InnerBudgetBudgetDataFactory parentFactory, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null)
    {
        parentFactory.TimePeriodFactory = new InnerBudgetTimePeriodFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TimePeriodFactory);
    }

    public static CombinedResult<InnerBudgetBudgetDataFactory, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData(this InnerBudgetBudgetDataFactory parentFactory, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null)
    {
        parentFactory.AutoAdjustDataFactory = new InnerBudgetAutoAdjustDataFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AutoAdjustDataFactory);
    }

    public static CombinedResult<InnerBudgetBudgetDataFactory, InnerBudgetCostTypesFactory> WithCostTypes(this InnerBudgetBudgetDataFactory parentFactory, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null)
    {
        parentFactory.CostTypesFactory = new InnerBudgetCostTypesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CostTypesFactory);
    }

    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, InnerBudgetSpendFactory> WithBudgetLimit<T1>(this CombinedResult<InnerBudgetBudgetDataFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, WithBudgetLimit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, InnerBudgetSpendFactory> WithBudgetLimit<T1>(this CombinedResult<T1, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, WithBudgetLimit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3, T4>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3, T4>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory, InnerBudgetSpendFactory> WithBudgetLimit<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.Spend> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBudgetLimit(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, InnerBudgetTimePeriodFactory> WithTimePeriod<T1>(this CombinedResult<InnerBudgetBudgetDataFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimePeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, InnerBudgetTimePeriodFactory> WithTimePeriod<T1>(this CombinedResult<T1, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimePeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3, T4>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3, T4>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory, InnerBudgetTimePeriodFactory> WithTimePeriod<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.TimePeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimePeriod(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1>(this CombinedResult<InnerBudgetBudgetDataFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1>(this CombinedResult<T1, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3, T4>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3, T4>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory, InnerBudgetAutoAdjustDataFactory> WithAutoAdjustData<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.AutoAdjustData> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoAdjustData(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, InnerBudgetCostTypesFactory> WithCostTypes<T1>(this CombinedResult<InnerBudgetBudgetDataFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, WithCostTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, InnerBudgetCostTypesFactory> WithCostTypes<T1>(this CombinedResult<T1, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, WithCostTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3, T4>(this CombinedResult<InnerBudgetBudgetDataFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3, T4>(this CombinedResult<T1, InnerBudgetBudgetDataFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerBudgetBudgetDataFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerBudgetBudgetDataFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory, InnerBudgetCostTypesFactory> WithCostTypes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerBudgetBudgetDataFactory> combinedResult, Action<Humidifier.Budgets.BudgetTypes.CostTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCostTypes(combinedResult.T5, subFactoryAction));
}
