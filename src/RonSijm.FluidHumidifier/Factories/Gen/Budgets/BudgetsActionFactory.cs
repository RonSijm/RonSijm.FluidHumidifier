// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Budgets;

public class BudgetsActionFactory(string resourceName = null, Action<Humidifier.Budgets.BudgetsAction> factoryAction = null) : ResourceFactory<Humidifier.Budgets.BudgetsAction>(resourceName)
{

    internal List<InnerBudgetsActionResourceTagFactory> ResourceTagsFactories { get; set; } = [];

    internal List<InnerBudgetsActionSubscriberFactory> SubscribersFactories { get; set; } = [];

    internal InnerBudgetsActionActionThresholdFactory ActionThresholdFactory { get; set; }

    internal InnerBudgetsActionDefinitionFactory DefinitionFactory { get; set; }

    protected override Humidifier.Budgets.BudgetsAction Create()
    {
        var budgetsActionResult = CreateBudgetsAction();
        factoryAction?.Invoke(budgetsActionResult);

        return budgetsActionResult;
    }

    private Humidifier.Budgets.BudgetsAction CreateBudgetsAction()
    {
        var budgetsActionResult = new Humidifier.Budgets.BudgetsAction
        {
            GivenName = InputResourceName,
        };

        return budgetsActionResult;
    }
    public override void CreateChildren(Humidifier.Budgets.BudgetsAction result)
    {
        base.CreateChildren(result);

        result.ResourceTags = ResourceTagsFactories.Any() ? ResourceTagsFactories.Select(x => x.Build()).ToList() : null;
        result.Subscribers = SubscribersFactories.Any() ? SubscribersFactories.Select(x => x.Build()).ToList() : null;
        result.ActionThreshold ??= ActionThresholdFactory?.Build();
        result.Definition ??= DefinitionFactory?.Build();
    }

} // End Of Class

public static class BudgetsActionFactoryExtensions
{
    public static CombinedResult<BudgetsActionFactory, InnerBudgetsActionResourceTagFactory> WithResourceTags(this BudgetsActionFactory parentFactory, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null)
    {
        var factory = new InnerBudgetsActionResourceTagFactory(subFactoryAction);
        parentFactory.ResourceTagsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<BudgetsActionFactory, InnerBudgetsActionSubscriberFactory> WithSubscribers(this BudgetsActionFactory parentFactory, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null)
    {
        var factory = new InnerBudgetsActionSubscriberFactory(subFactoryAction);
        parentFactory.SubscribersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<BudgetsActionFactory, InnerBudgetsActionActionThresholdFactory> WithActionThreshold(this BudgetsActionFactory parentFactory, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null)
    {
        parentFactory.ActionThresholdFactory = new InnerBudgetsActionActionThresholdFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ActionThresholdFactory);
    }

    public static CombinedResult<BudgetsActionFactory, InnerBudgetsActionDefinitionFactory> WithDefinition(this BudgetsActionFactory parentFactory, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null)
    {
        parentFactory.DefinitionFactory = new InnerBudgetsActionDefinitionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DefinitionFactory);
    }

    public static CombinedResult<BudgetsActionFactory, T1, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1>(this CombinedResult<BudgetsActionFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, WithResourceTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1>(this CombinedResult<T1, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, WithResourceTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2>(this CombinedResult<BudgetsActionFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2>(this CombinedResult<T1, BudgetsActionFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2>(this CombinedResult<T1, T2, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3>(this CombinedResult<BudgetsActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3>(this CombinedResult<T1, BudgetsActionFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3>(this CombinedResult<T1, T2, BudgetsActionFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3>(this CombinedResult<T1, T2, T3, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, T4, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3, T4>(this CombinedResult<BudgetsActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, T4, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3, T4>(this CombinedResult<T1, BudgetsActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, T4, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, BudgetsActionFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, T4, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BudgetsActionFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BudgetsActionFactory, InnerBudgetsActionResourceTagFactory> WithResourceTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ResourceTag> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourceTags(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1>(this CombinedResult<BudgetsActionFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, WithSubscribers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1>(this CombinedResult<T1, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, WithSubscribers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2>(this CombinedResult<BudgetsActionFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2>(this CombinedResult<T1, BudgetsActionFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2>(this CombinedResult<T1, T2, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3>(this CombinedResult<BudgetsActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3>(this CombinedResult<T1, BudgetsActionFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3>(this CombinedResult<T1, T2, BudgetsActionFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3>(this CombinedResult<T1, T2, T3, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, T4, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3, T4>(this CombinedResult<BudgetsActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, T4, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3, T4>(this CombinedResult<T1, BudgetsActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, T4, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3, T4>(this CombinedResult<T1, T2, BudgetsActionFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, T4, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BudgetsActionFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BudgetsActionFactory, InnerBudgetsActionSubscriberFactory> WithSubscribers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Subscriber> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSubscribers(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1>(this CombinedResult<BudgetsActionFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, WithActionThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1>(this CombinedResult<T1, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, WithActionThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2>(this CombinedResult<BudgetsActionFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2>(this CombinedResult<T1, BudgetsActionFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2>(this CombinedResult<T1, T2, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3>(this CombinedResult<BudgetsActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3>(this CombinedResult<T1, BudgetsActionFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3>(this CombinedResult<T1, T2, BudgetsActionFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3>(this CombinedResult<T1, T2, T3, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, T4, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3, T4>(this CombinedResult<BudgetsActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, T4, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3, T4>(this CombinedResult<T1, BudgetsActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, T4, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3, T4>(this CombinedResult<T1, T2, BudgetsActionFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, T4, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BudgetsActionFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BudgetsActionFactory, InnerBudgetsActionActionThresholdFactory> WithActionThreshold<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.ActionThreshold> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActionThreshold(combinedResult.T5, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, InnerBudgetsActionDefinitionFactory> WithDefinition<T1>(this CombinedResult<BudgetsActionFactory, T1> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, InnerBudgetsActionDefinitionFactory> WithDefinition<T1>(this CombinedResult<T1, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2>(this CombinedResult<BudgetsActionFactory, T1, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2>(this CombinedResult<T1, BudgetsActionFactory, T2> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2>(this CombinedResult<T1, T2, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<BudgetsActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<T1, BudgetsActionFactory, T2, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<T1, T2, BudgetsActionFactory, T3> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3>(this CombinedResult<T1, T2, T3, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<BudgetsActionFactory, T1, T2, T3, T4, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<BudgetsActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, BudgetsActionFactory, T2, T3, T4, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, BudgetsActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, BudgetsActionFactory, T3, T4, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, BudgetsActionFactory, T3, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, BudgetsActionFactory, T4, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, BudgetsActionFactory, T4> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, BudgetsActionFactory, InnerBudgetsActionDefinitionFactory> WithDefinition<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, BudgetsActionFactory> combinedResult, Action<Humidifier.Budgets.BudgetsActionTypes.Definition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinition(combinedResult.T5, subFactoryAction));
}
