// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.WAFv2;

public class InnerRuleGroupRuleActionFactory(Action<Humidifier.WAFv2.RuleGroupTypes.RuleAction> factoryAction = null) : SubResourceFactory<Humidifier.WAFv2.RuleGroupTypes.RuleAction>
{

    internal InnerRuleGroupCaptchaActionFactory CaptchaFactory { get; set; }

    internal InnerRuleGroupBlockActionFactory BlockFactory { get; set; }

    internal InnerRuleGroupCountActionFactory CountFactory { get; set; }

    internal InnerRuleGroupAllowActionFactory AllowFactory { get; set; }

    internal InnerRuleGroupChallengeActionFactory ChallengeFactory { get; set; }

    protected override Humidifier.WAFv2.RuleGroupTypes.RuleAction Create()
    {
        var ruleActionResult = CreateRuleAction();
        factoryAction?.Invoke(ruleActionResult);

        return ruleActionResult;
    }

    private Humidifier.WAFv2.RuleGroupTypes.RuleAction CreateRuleAction()
    {
        var ruleActionResult = new Humidifier.WAFv2.RuleGroupTypes.RuleAction();

        return ruleActionResult;
    }
    public override void CreateChildren(Humidifier.WAFv2.RuleGroupTypes.RuleAction result)
    {
        base.CreateChildren(result);

        result.Captcha ??= CaptchaFactory?.Build();
        result.Block ??= BlockFactory?.Build();
        result.Count ??= CountFactory?.Build();
        result.Allow ??= AllowFactory?.Build();
        result.Challenge ??= ChallengeFactory?.Build();
    }

} // End Of Class

public static class InnerRuleGroupRuleActionFactoryExtensions
{
    public static CombinedResult<InnerRuleGroupRuleActionFactory, InnerRuleGroupCaptchaActionFactory> WithCaptcha(this InnerRuleGroupRuleActionFactory parentFactory, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null)
    {
        parentFactory.CaptchaFactory = new InnerRuleGroupCaptchaActionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CaptchaFactory);
    }

    public static CombinedResult<InnerRuleGroupRuleActionFactory, InnerRuleGroupBlockActionFactory> WithBlock(this InnerRuleGroupRuleActionFactory parentFactory, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null)
    {
        parentFactory.BlockFactory = new InnerRuleGroupBlockActionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BlockFactory);
    }

    public static CombinedResult<InnerRuleGroupRuleActionFactory, InnerRuleGroupCountActionFactory> WithCount(this InnerRuleGroupRuleActionFactory parentFactory, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null)
    {
        parentFactory.CountFactory = new InnerRuleGroupCountActionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CountFactory);
    }

    public static CombinedResult<InnerRuleGroupRuleActionFactory, InnerRuleGroupAllowActionFactory> WithAllow(this InnerRuleGroupRuleActionFactory parentFactory, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null)
    {
        parentFactory.AllowFactory = new InnerRuleGroupAllowActionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AllowFactory);
    }

    public static CombinedResult<InnerRuleGroupRuleActionFactory, InnerRuleGroupChallengeActionFactory> WithChallenge(this InnerRuleGroupRuleActionFactory parentFactory, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null)
    {
        parentFactory.ChallengeFactory = new InnerRuleGroupChallengeActionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ChallengeFactory);
    }

    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithCaptcha(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithCaptcha(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3, T4>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3, T4>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory, InnerRuleGroupCaptchaActionFactory> WithCaptcha<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CaptchaAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCaptcha(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, InnerRuleGroupBlockActionFactory> WithBlock<T1>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithBlock(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, InnerRuleGroupBlockActionFactory> WithBlock<T1>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithBlock(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3, T4>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3, T4>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory, InnerRuleGroupBlockActionFactory> WithBlock<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.BlockAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlock(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, InnerRuleGroupCountActionFactory> WithCount<T1>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, InnerRuleGroupCountActionFactory> WithCount<T1>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, InnerRuleGroupCountActionFactory> WithCount<T1, T2>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, InnerRuleGroupCountActionFactory> WithCount<T1, T2>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, InnerRuleGroupCountActionFactory> WithCount<T1, T2>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3, T4>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3, T4>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory, InnerRuleGroupCountActionFactory> WithCount<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.CountAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCount(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, InnerRuleGroupAllowActionFactory> WithAllow<T1>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithAllow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, InnerRuleGroupAllowActionFactory> WithAllow<T1>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithAllow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3, T4>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3, T4>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory, InnerRuleGroupAllowActionFactory> WithAllow<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.AllowAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAllow(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, InnerRuleGroupChallengeActionFactory> WithChallenge<T1>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithChallenge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, InnerRuleGroupChallengeActionFactory> WithChallenge<T1>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, WithChallenge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3, T4>(this CombinedResult<InnerRuleGroupRuleActionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3, T4>(this CombinedResult<T1, InnerRuleGroupRuleActionFactory, T2, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerRuleGroupRuleActionFactory, T3, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerRuleGroupRuleActionFactory, T4> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory, InnerRuleGroupChallengeActionFactory> WithChallenge<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerRuleGroupRuleActionFactory> combinedResult, Action<Humidifier.WAFv2.RuleGroupTypes.ChallengeAction> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChallenge(combinedResult.T5, subFactoryAction));
}
