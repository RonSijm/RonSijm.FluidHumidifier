// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Batch;

public class JobDefinitionFactory(string resourceName = null, Action<Humidifier.Batch.JobDefinition> factoryAction = null) : ResourceFactory<Humidifier.Batch.JobDefinition>(resourceName)
{

    internal InnerJobDefinitionTimeoutFactory TimeoutFactory { get; set; }

    internal InnerJobDefinitionEksPropertiesFactory EksPropertiesFactory { get; set; }

    internal InnerJobDefinitionNodePropertiesFactory NodePropertiesFactory { get; set; }

    internal InnerJobDefinitionContainerPropertiesFactory ContainerPropertiesFactory { get; set; }

    internal InnerJobDefinitionEcsPropertiesFactory EcsPropertiesFactory { get; set; }

    internal InnerJobDefinitionRetryStrategyFactory RetryStrategyFactory { get; set; }

    protected override Humidifier.Batch.JobDefinition Create()
    {
        var jobDefinitionResult = CreateJobDefinition();
        factoryAction?.Invoke(jobDefinitionResult);

        return jobDefinitionResult;
    }

    private Humidifier.Batch.JobDefinition CreateJobDefinition()
    {
        var jobDefinitionResult = new Humidifier.Batch.JobDefinition
        {
            GivenName = InputResourceName,
        };

        return jobDefinitionResult;
    }
    public override void CreateChildren(Humidifier.Batch.JobDefinition result)
    {
        base.CreateChildren(result);

        result.Timeout ??= TimeoutFactory?.Build();
        result.EksProperties ??= EksPropertiesFactory?.Build();
        result.NodeProperties ??= NodePropertiesFactory?.Build();
        result.ContainerProperties ??= ContainerPropertiesFactory?.Build();
        result.EcsProperties ??= EcsPropertiesFactory?.Build();
        result.RetryStrategy ??= RetryStrategyFactory?.Build();
    }

} // End Of Class

public static class JobDefinitionFactoryExtensions
{
    public static CombinedResult<JobDefinitionFactory, InnerJobDefinitionTimeoutFactory> WithTimeout(this JobDefinitionFactory parentFactory, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null)
    {
        parentFactory.TimeoutFactory = new InnerJobDefinitionTimeoutFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TimeoutFactory);
    }

    public static CombinedResult<JobDefinitionFactory, InnerJobDefinitionEksPropertiesFactory> WithEksProperties(this JobDefinitionFactory parentFactory, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null)
    {
        parentFactory.EksPropertiesFactory = new InnerJobDefinitionEksPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EksPropertiesFactory);
    }

    public static CombinedResult<JobDefinitionFactory, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties(this JobDefinitionFactory parentFactory, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null)
    {
        parentFactory.NodePropertiesFactory = new InnerJobDefinitionNodePropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NodePropertiesFactory);
    }

    public static CombinedResult<JobDefinitionFactory, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties(this JobDefinitionFactory parentFactory, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null)
    {
        parentFactory.ContainerPropertiesFactory = new InnerJobDefinitionContainerPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ContainerPropertiesFactory);
    }

    public static CombinedResult<JobDefinitionFactory, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties(this JobDefinitionFactory parentFactory, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null)
    {
        parentFactory.EcsPropertiesFactory = new InnerJobDefinitionEcsPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EcsPropertiesFactory);
    }

    public static CombinedResult<JobDefinitionFactory, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy(this JobDefinitionFactory parentFactory, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null)
    {
        parentFactory.RetryStrategyFactory = new InnerJobDefinitionRetryStrategyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RetryStrategyFactory);
    }

    public static CombinedResult<JobDefinitionFactory, T1, InnerJobDefinitionTimeoutFactory> WithTimeout<T1>(this CombinedResult<JobDefinitionFactory, T1> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeout(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, InnerJobDefinitionTimeoutFactory> WithTimeout<T1>(this CombinedResult<T1, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeout(combinedResult.T2, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2>(this CombinedResult<JobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2>(this CombinedResult<T1, JobDefinitionFactory, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2>(this CombinedResult<T1, T2, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T3, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3>(this CombinedResult<JobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3>(this CombinedResult<T1, JobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3>(this CombinedResult<T1, T2, JobDefinitionFactory, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3>(this CombinedResult<T1, T2, T3, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T4, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, T4, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3, T4>(this CombinedResult<JobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, T4, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3, T4>(this CombinedResult<T1, JobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, T4, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3, T4>(this CombinedResult<T1, T2, JobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, T4, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, JobDefinitionFactory, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, JobDefinitionFactory, InnerJobDefinitionTimeoutFactory> WithTimeout<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.Timeout> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeout(combinedResult.T5, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1>(this CombinedResult<JobDefinitionFactory, T1> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithEksProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1>(this CombinedResult<T1, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithEksProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2>(this CombinedResult<JobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2>(this CombinedResult<T1, JobDefinitionFactory, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2>(this CombinedResult<T1, T2, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3>(this CombinedResult<JobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3>(this CombinedResult<T1, JobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3>(this CombinedResult<T1, T2, JobDefinitionFactory, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, T4, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3, T4>(this CombinedResult<JobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, T4, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3, T4>(this CombinedResult<T1, JobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, T4, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, JobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, T4, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, JobDefinitionFactory, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, JobDefinitionFactory, InnerJobDefinitionEksPropertiesFactory> WithEksProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EksProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1>(this CombinedResult<JobDefinitionFactory, T1> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithNodeProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1>(this CombinedResult<T1, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithNodeProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2>(this CombinedResult<JobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2>(this CombinedResult<T1, JobDefinitionFactory, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2>(this CombinedResult<T1, T2, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3>(this CombinedResult<JobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3>(this CombinedResult<T1, JobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3>(this CombinedResult<T1, T2, JobDefinitionFactory, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, T4, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3, T4>(this CombinedResult<JobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, T4, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3, T4>(this CombinedResult<T1, JobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, T4, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, JobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, T4, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, JobDefinitionFactory, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, JobDefinitionFactory, InnerJobDefinitionNodePropertiesFactory> WithNodeProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.NodeProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1>(this CombinedResult<JobDefinitionFactory, T1> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithContainerProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1>(this CombinedResult<T1, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithContainerProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2>(this CombinedResult<JobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2>(this CombinedResult<T1, JobDefinitionFactory, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2>(this CombinedResult<T1, T2, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3>(this CombinedResult<JobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3>(this CombinedResult<T1, JobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3>(this CombinedResult<T1, T2, JobDefinitionFactory, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, T4, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3, T4>(this CombinedResult<JobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, T4, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3, T4>(this CombinedResult<T1, JobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, T4, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, JobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, T4, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, JobDefinitionFactory, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, JobDefinitionFactory, InnerJobDefinitionContainerPropertiesFactory> WithContainerProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.ContainerProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1>(this CombinedResult<JobDefinitionFactory, T1> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithEcsProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1>(this CombinedResult<T1, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithEcsProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2>(this CombinedResult<JobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2>(this CombinedResult<T1, JobDefinitionFactory, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2>(this CombinedResult<T1, T2, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3>(this CombinedResult<JobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3>(this CombinedResult<T1, JobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3>(this CombinedResult<T1, T2, JobDefinitionFactory, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, T4, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3, T4>(this CombinedResult<JobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, T4, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3, T4>(this CombinedResult<T1, JobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, T4, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, JobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, T4, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, JobDefinitionFactory, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, JobDefinitionFactory, InnerJobDefinitionEcsPropertiesFactory> WithEcsProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.EcsProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEcsProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1>(this CombinedResult<JobDefinitionFactory, T1> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1>(this CombinedResult<T1, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2>(this CombinedResult<JobDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2>(this CombinedResult<T1, JobDefinitionFactory, T2> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2>(this CombinedResult<T1, T2, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<JobDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<T1, JobDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<T1, T2, JobDefinitionFactory, T3> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3>(this CombinedResult<T1, T2, T3, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<JobDefinitionFactory, T1, T2, T3, T4, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<JobDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, JobDefinitionFactory, T2, T3, T4, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, JobDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, JobDefinitionFactory, T3, T4, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, JobDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, JobDefinitionFactory, T4, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, JobDefinitionFactory, T4> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, JobDefinitionFactory, InnerJobDefinitionRetryStrategyFactory> WithRetryStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, JobDefinitionFactory> combinedResult, Action<Humidifier.Batch.JobDefinitionTypes.RetryStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetryStrategy(combinedResult.T5, subFactoryAction));
}
