// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Batch;

public class ComputeEnvironmentFactory(string resourceName = null, Action<Humidifier.Batch.ComputeEnvironment> factoryAction = null) : ResourceFactory<Humidifier.Batch.ComputeEnvironment>(resourceName)
{

    internal InnerComputeEnvironmentUpdatePolicyFactory UpdatePolicyFactory { get; set; }

    internal InnerComputeEnvironmentEksConfigurationFactory EksConfigurationFactory { get; set; }

    internal InnerComputeEnvironmentComputeResourcesFactory ComputeResourcesFactory { get; set; }

    protected override Humidifier.Batch.ComputeEnvironment Create()
    {
        var computeEnvironmentResult = CreateComputeEnvironment();
        factoryAction?.Invoke(computeEnvironmentResult);

        return computeEnvironmentResult;
    }

    private Humidifier.Batch.ComputeEnvironment CreateComputeEnvironment()
    {
        var computeEnvironmentResult = new Humidifier.Batch.ComputeEnvironment
        {
            GivenName = InputResourceName,
        };

        return computeEnvironmentResult;
    }
    public override void CreateChildren(Humidifier.Batch.ComputeEnvironment result)
    {
        base.CreateChildren(result);

        result.UpdatePolicy ??= UpdatePolicyFactory?.Build();
        result.EksConfiguration ??= EksConfigurationFactory?.Build();
        result.ComputeResources ??= ComputeResourcesFactory?.Build();
    }

} // End Of Class

public static class ComputeEnvironmentFactoryExtensions
{
    public static CombinedResult<ComputeEnvironmentFactory, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy(this ComputeEnvironmentFactory parentFactory, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null)
    {
        parentFactory.UpdatePolicyFactory = new InnerComputeEnvironmentUpdatePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.UpdatePolicyFactory);
    }

    public static CombinedResult<ComputeEnvironmentFactory, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration(this ComputeEnvironmentFactory parentFactory, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null)
    {
        parentFactory.EksConfigurationFactory = new InnerComputeEnvironmentEksConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EksConfigurationFactory);
    }

    public static CombinedResult<ComputeEnvironmentFactory, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources(this ComputeEnvironmentFactory parentFactory, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null)
    {
        parentFactory.ComputeResourcesFactory = new InnerComputeEnvironmentComputeResourcesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ComputeResourcesFactory);
    }

    public static CombinedResult<ComputeEnvironmentFactory, T1, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1>(this CombinedResult<ComputeEnvironmentFactory, T1> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1>(this CombinedResult<T1, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2>(this CombinedResult<ComputeEnvironmentFactory, T1, T2> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2>(this CombinedResult<T1, ComputeEnvironmentFactory, T2> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2>(this CombinedResult<T1, T2, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3>(this CombinedResult<ComputeEnvironmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3>(this CombinedResult<T1, ComputeEnvironmentFactory, T2, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3>(this CombinedResult<T1, T2, ComputeEnvironmentFactory, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, T4, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3, T4>(this CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, T4, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3, T4>(this CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, T4, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, T4, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ComputeEnvironmentFactory, InnerComputeEnvironmentUpdatePolicyFactory> WithUpdatePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.UpdatePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdatePolicy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1>(this CombinedResult<ComputeEnvironmentFactory, T1> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithEksConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1>(this CombinedResult<T1, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithEksConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2>(this CombinedResult<ComputeEnvironmentFactory, T1, T2> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2>(this CombinedResult<T1, ComputeEnvironmentFactory, T2> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2>(this CombinedResult<T1, T2, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3>(this CombinedResult<ComputeEnvironmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3>(this CombinedResult<T1, ComputeEnvironmentFactory, T2, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ComputeEnvironmentFactory, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, T4, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3, T4>(this CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, T4, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, T4, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, T4, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ComputeEnvironmentFactory, InnerComputeEnvironmentEksConfigurationFactory> WithEksConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.EksConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEksConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1>(this CombinedResult<ComputeEnvironmentFactory, T1> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, WithComputeResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1>(this CombinedResult<T1, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, WithComputeResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2>(this CombinedResult<ComputeEnvironmentFactory, T1, T2> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2>(this CombinedResult<T1, ComputeEnvironmentFactory, T2> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2>(this CombinedResult<T1, T2, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3>(this CombinedResult<ComputeEnvironmentFactory, T1, T2, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3>(this CombinedResult<T1, ComputeEnvironmentFactory, T2, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3>(this CombinedResult<T1, T2, ComputeEnvironmentFactory, T3> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3>(this CombinedResult<T1, T2, T3, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, T4, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3, T4>(this CombinedResult<ComputeEnvironmentFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, T4, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3, T4>(this CombinedResult<T1, ComputeEnvironmentFactory, T2, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, T4, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3, T4>(this CombinedResult<T1, T2, ComputeEnvironmentFactory, T3, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, T4, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ComputeEnvironmentFactory, T4> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ComputeEnvironmentFactory, InnerComputeEnvironmentComputeResourcesFactory> WithComputeResources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ComputeEnvironmentFactory> combinedResult, Action<Humidifier.Batch.ComputeEnvironmentTypes.ComputeResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithComputeResources(combinedResult.T5, subFactoryAction));
}
