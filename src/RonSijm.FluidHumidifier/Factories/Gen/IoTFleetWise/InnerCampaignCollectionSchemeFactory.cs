// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoTFleetWise;

public class InnerCampaignCollectionSchemeFactory(Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> factoryAction = null) : SubResourceFactory<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme>
{

    internal InnerCampaignTimeBasedCollectionSchemeFactory TimeBasedCollectionSchemeFactory { get; set; }

    internal InnerCampaignConditionBasedCollectionSchemeFactory ConditionBasedCollectionSchemeFactory { get; set; }

    protected override Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme Create()
    {
        var collectionSchemeResult = CreateCollectionScheme();
        factoryAction?.Invoke(collectionSchemeResult);

        return collectionSchemeResult;
    }

    private Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme CreateCollectionScheme()
    {
        var collectionSchemeResult = new Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme();

        return collectionSchemeResult;
    }
    public override void CreateChildren(Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme result)
    {
        base.CreateChildren(result);

        result.TimeBasedCollectionScheme ??= TimeBasedCollectionSchemeFactory?.Build();
        result.ConditionBasedCollectionScheme ??= ConditionBasedCollectionSchemeFactory?.Build();
    }

} // End Of Class

public static class InnerCampaignCollectionSchemeFactoryExtensions
{
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme(this InnerCampaignCollectionSchemeFactory parentFactory, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null)
    {
        parentFactory.TimeBasedCollectionSchemeFactory = new InnerCampaignTimeBasedCollectionSchemeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TimeBasedCollectionSchemeFactory);
    }

    public static CombinedResult<InnerCampaignCollectionSchemeFactory, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme(this InnerCampaignCollectionSchemeFactory parentFactory, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null)
    {
        parentFactory.ConditionBasedCollectionSchemeFactory = new InnerCampaignConditionBasedCollectionSchemeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConditionBasedCollectionSchemeFactory);
    }

    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2>(this CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3>(this CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3, T4, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3, T4, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3, T4, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory, T4, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerCampaignCollectionSchemeFactory, InnerCampaignTimeBasedCollectionSchemeFactory> WithTimeBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.TimeBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeBasedCollectionScheme(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2>(this CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3>(this CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3, T4, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<InnerCampaignCollectionSchemeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3, T4, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, InnerCampaignCollectionSchemeFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3, T4, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerCampaignCollectionSchemeFactory, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory, T4, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerCampaignCollectionSchemeFactory, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerCampaignCollectionSchemeFactory, InnerCampaignConditionBasedCollectionSchemeFactory> WithConditionBasedCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerCampaignCollectionSchemeFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.ConditionBasedCollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConditionBasedCollectionScheme(combinedResult.T5, subFactoryAction));
}
