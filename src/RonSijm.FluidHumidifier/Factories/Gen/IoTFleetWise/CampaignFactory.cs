// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoTFleetWise;

public class CampaignFactory(string resourceName = null, Action<Humidifier.IoTFleetWise.Campaign> factoryAction = null) : ResourceFactory<Humidifier.IoTFleetWise.Campaign>(resourceName)
{

    internal List<InnerCampaignSignalInformationFactory> SignalsToCollectFactories { get; set; } = [];

    internal List<InnerCampaignSignalFetchInformationFactory> SignalsToFetchFactories { get; set; } = [];

    internal List<InnerCampaignDataDestinationConfigFactory> DataDestinationConfigsFactories { get; set; } = [];

    internal InnerCampaignCollectionSchemeFactory CollectionSchemeFactory { get; set; }

    protected override Humidifier.IoTFleetWise.Campaign Create()
    {
        var campaignResult = CreateCampaign();
        factoryAction?.Invoke(campaignResult);

        return campaignResult;
    }

    private Humidifier.IoTFleetWise.Campaign CreateCampaign()
    {
        var campaignResult = new Humidifier.IoTFleetWise.Campaign
        {
            GivenName = InputResourceName,
        };

        return campaignResult;
    }
    public override void CreateChildren(Humidifier.IoTFleetWise.Campaign result)
    {
        base.CreateChildren(result);

        result.SignalsToCollect = SignalsToCollectFactories.Any() ? SignalsToCollectFactories.Select(x => x.Build()).ToList() : null;
        result.SignalsToFetch = SignalsToFetchFactories.Any() ? SignalsToFetchFactories.Select(x => x.Build()).ToList() : null;
        result.DataDestinationConfigs = DataDestinationConfigsFactories.Any() ? DataDestinationConfigsFactories.Select(x => x.Build()).ToList() : null;
        result.CollectionScheme ??= CollectionSchemeFactory?.Build();
    }

} // End Of Class

public static class CampaignFactoryExtensions
{
    public static CombinedResult<CampaignFactory, InnerCampaignSignalInformationFactory> WithSignalsToCollect(this CampaignFactory parentFactory, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null)
    {
        var factory = new InnerCampaignSignalInformationFactory(subFactoryAction);
        parentFactory.SignalsToCollectFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<CampaignFactory, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch(this CampaignFactory parentFactory, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null)
    {
        var factory = new InnerCampaignSignalFetchInformationFactory(subFactoryAction);
        parentFactory.SignalsToFetchFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<CampaignFactory, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs(this CampaignFactory parentFactory, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null)
    {
        var factory = new InnerCampaignDataDestinationConfigFactory(subFactoryAction);
        parentFactory.DataDestinationConfigsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<CampaignFactory, InnerCampaignCollectionSchemeFactory> WithCollectionScheme(this CampaignFactory parentFactory, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null)
    {
        parentFactory.CollectionSchemeFactory = new InnerCampaignCollectionSchemeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CollectionSchemeFactory);
    }

    public static CombinedResult<CampaignFactory, T1, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1>(this CombinedResult<CampaignFactory, T1> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1>(this CombinedResult<T1, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2>(this CombinedResult<CampaignFactory, T1, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2>(this CombinedResult<T1, CampaignFactory, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2>(this CombinedResult<T1, T2, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3>(this CombinedResult<CampaignFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3>(this CombinedResult<T1, CampaignFactory, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3>(this CombinedResult<T1, T2, CampaignFactory, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3>(this CombinedResult<T1, T2, T3, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, T4, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3, T4>(this CombinedResult<CampaignFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, T4, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3, T4>(this CombinedResult<T1, CampaignFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, T4, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3, T4>(this CombinedResult<T1, T2, CampaignFactory, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, T4, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CampaignFactory, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CampaignFactory, InnerCampaignSignalInformationFactory> WithSignalsToCollect<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToCollect(combinedResult.T5, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1>(this CombinedResult<CampaignFactory, T1> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1>(this CombinedResult<T1, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2>(this CombinedResult<CampaignFactory, T1, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2>(this CombinedResult<T1, CampaignFactory, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2>(this CombinedResult<T1, T2, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3>(this CombinedResult<CampaignFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3>(this CombinedResult<T1, CampaignFactory, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3>(this CombinedResult<T1, T2, CampaignFactory, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3>(this CombinedResult<T1, T2, T3, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, T4, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3, T4>(this CombinedResult<CampaignFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, T4, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3, T4>(this CombinedResult<T1, CampaignFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, T4, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3, T4>(this CombinedResult<T1, T2, CampaignFactory, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, T4, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CampaignFactory, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CampaignFactory, InnerCampaignSignalFetchInformationFactory> WithSignalsToFetch<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.SignalFetchInformation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSignalsToFetch(combinedResult.T5, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1>(this CombinedResult<CampaignFactory, T1> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1>(this CombinedResult<T1, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2>(this CombinedResult<CampaignFactory, T1, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2>(this CombinedResult<T1, CampaignFactory, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2>(this CombinedResult<T1, T2, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3>(this CombinedResult<CampaignFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3>(this CombinedResult<T1, CampaignFactory, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3>(this CombinedResult<T1, T2, CampaignFactory, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3>(this CombinedResult<T1, T2, T3, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, T4, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3, T4>(this CombinedResult<CampaignFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, T4, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3, T4>(this CombinedResult<T1, CampaignFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, T4, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3, T4>(this CombinedResult<T1, T2, CampaignFactory, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, T4, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CampaignFactory, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CampaignFactory, InnerCampaignDataDestinationConfigFactory> WithDataDestinationConfigs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.DataDestinationConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataDestinationConfigs(combinedResult.T5, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1>(this CombinedResult<CampaignFactory, T1> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, WithCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1>(this CombinedResult<T1, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, WithCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2>(this CombinedResult<CampaignFactory, T1, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2>(this CombinedResult<T1, CampaignFactory, T2> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2>(this CombinedResult<T1, T2, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3>(this CombinedResult<CampaignFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3>(this CombinedResult<T1, CampaignFactory, T2, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3>(this CombinedResult<T1, T2, CampaignFactory, T3> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3>(this CombinedResult<T1, T2, T3, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T4, subFactoryAction));
    public static CombinedResult<CampaignFactory, T1, T2, T3, T4, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3, T4>(this CombinedResult<CampaignFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, CampaignFactory, T2, T3, T4, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, CampaignFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, CampaignFactory, T3, T4, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, CampaignFactory, T3, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, CampaignFactory, T4, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, CampaignFactory, T4> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, CampaignFactory, InnerCampaignCollectionSchemeFactory> WithCollectionScheme<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, CampaignFactory> combinedResult, Action<Humidifier.IoTFleetWise.CampaignTypes.CollectionScheme> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCollectionScheme(combinedResult.T5, subFactoryAction));
}
