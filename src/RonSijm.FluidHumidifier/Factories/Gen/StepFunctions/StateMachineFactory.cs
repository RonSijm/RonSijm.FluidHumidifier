// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.StepFunctions;

public class StateMachineFactory(string resourceName = null, Action<Humidifier.StepFunctions.StateMachine> factoryAction = null) : ResourceFactory<Humidifier.StepFunctions.StateMachine>(resourceName)
{

    internal List<InnerStateMachineTagsEntryFactory> TagsFactories { get; set; } = [];

    internal InnerStateMachineEncryptionConfigurationFactory EncryptionConfigurationFactory { get; set; }

    internal InnerStateMachineLoggingConfigurationFactory LoggingConfigurationFactory { get; set; }

    internal InnerStateMachineS3LocationFactory DefinitionS3LocationFactory { get; set; }

    internal InnerStateMachineTracingConfigurationFactory TracingConfigurationFactory { get; set; }

    protected override Humidifier.StepFunctions.StateMachine Create()
    {
        var stateMachineResult = CreateStateMachine();
        factoryAction?.Invoke(stateMachineResult);

        return stateMachineResult;
    }

    private Humidifier.StepFunctions.StateMachine CreateStateMachine()
    {
        var stateMachineResult = new Humidifier.StepFunctions.StateMachine
        {
            GivenName = InputResourceName,
        };

        return stateMachineResult;
    }
    public override void CreateChildren(Humidifier.StepFunctions.StateMachine result)
    {
        base.CreateChildren(result);

        result.Tags = TagsFactories.Any() ? TagsFactories.Select(x => x.Build()).ToList() : null;
        result.EncryptionConfiguration ??= EncryptionConfigurationFactory?.Build();
        result.LoggingConfiguration ??= LoggingConfigurationFactory?.Build();
        result.DefinitionS3Location ??= DefinitionS3LocationFactory?.Build();
        result.TracingConfiguration ??= TracingConfigurationFactory?.Build();
    }

} // End Of Class

public static class StateMachineFactoryExtensions
{
    public static CombinedResult<StateMachineFactory, InnerStateMachineTagsEntryFactory> WithTags(this StateMachineFactory parentFactory, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null)
    {
        var factory = new InnerStateMachineTagsEntryFactory(subFactoryAction);
        parentFactory.TagsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<StateMachineFactory, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration(this StateMachineFactory parentFactory, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null)
    {
        parentFactory.EncryptionConfigurationFactory = new InnerStateMachineEncryptionConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EncryptionConfigurationFactory);
    }

    public static CombinedResult<StateMachineFactory, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration(this StateMachineFactory parentFactory, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null)
    {
        parentFactory.LoggingConfigurationFactory = new InnerStateMachineLoggingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoggingConfigurationFactory);
    }

    public static CombinedResult<StateMachineFactory, InnerStateMachineS3LocationFactory> WithDefinitionS3Location(this StateMachineFactory parentFactory, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null)
    {
        parentFactory.DefinitionS3LocationFactory = new InnerStateMachineS3LocationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DefinitionS3LocationFactory);
    }

    public static CombinedResult<StateMachineFactory, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration(this StateMachineFactory parentFactory, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null)
    {
        parentFactory.TracingConfigurationFactory = new InnerStateMachineTracingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TracingConfigurationFactory);
    }

    public static CombinedResult<StateMachineFactory, T1, InnerStateMachineTagsEntryFactory> WithTags<T1>(this CombinedResult<StateMachineFactory, T1> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, InnerStateMachineTagsEntryFactory> WithTags<T1>(this CombinedResult<T1, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, InnerStateMachineTagsEntryFactory> WithTags<T1, T2>(this CombinedResult<StateMachineFactory, T1, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, InnerStateMachineTagsEntryFactory> WithTags<T1, T2>(this CombinedResult<T1, StateMachineFactory, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, InnerStateMachineTagsEntryFactory> WithTags<T1, T2>(this CombinedResult<T1, T2, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3>(this CombinedResult<StateMachineFactory, T1, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3>(this CombinedResult<T1, StateMachineFactory, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3>(this CombinedResult<T1, T2, StateMachineFactory, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3>(this CombinedResult<T1, T2, T3, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, T4, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<StateMachineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, T4, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, StateMachineFactory, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, T4, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, StateMachineFactory, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, T4, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StateMachineFactory, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StateMachineFactory, InnerStateMachineTagsEntryFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TagsEntry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1>(this CombinedResult<StateMachineFactory, T1> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1>(this CombinedResult<T1, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2>(this CombinedResult<StateMachineFactory, T1, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2>(this CombinedResult<T1, StateMachineFactory, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2>(this CombinedResult<T1, T2, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<StateMachineFactory, T1, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<T1, StateMachineFactory, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, StateMachineFactory, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, T4, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<StateMachineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, T4, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, StateMachineFactory, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, T4, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, StateMachineFactory, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, T4, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StateMachineFactory, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StateMachineFactory, InnerStateMachineEncryptionConfigurationFactory> WithEncryptionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.EncryptionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1>(this CombinedResult<StateMachineFactory, T1> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1>(this CombinedResult<T1, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2>(this CombinedResult<StateMachineFactory, T1, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2>(this CombinedResult<T1, StateMachineFactory, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2>(this CombinedResult<T1, T2, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<StateMachineFactory, T1, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<T1, StateMachineFactory, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, StateMachineFactory, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, T4, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<StateMachineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, T4, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, StateMachineFactory, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, T4, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, StateMachineFactory, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, T4, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StateMachineFactory, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StateMachineFactory, InnerStateMachineLoggingConfigurationFactory> WithLoggingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.LoggingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoggingConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1>(this CombinedResult<StateMachineFactory, T1> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1>(this CombinedResult<T1, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2>(this CombinedResult<StateMachineFactory, T1, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2>(this CombinedResult<T1, StateMachineFactory, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2>(this CombinedResult<T1, T2, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3>(this CombinedResult<StateMachineFactory, T1, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3>(this CombinedResult<T1, StateMachineFactory, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3>(this CombinedResult<T1, T2, StateMachineFactory, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3>(this CombinedResult<T1, T2, T3, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, T4, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3, T4>(this CombinedResult<StateMachineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, T4, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3, T4>(this CombinedResult<T1, StateMachineFactory, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, T4, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3, T4>(this CombinedResult<T1, T2, StateMachineFactory, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, T4, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StateMachineFactory, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StateMachineFactory, InnerStateMachineS3LocationFactory> WithDefinitionS3Location<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.S3Location> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefinitionS3Location(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1>(this CombinedResult<StateMachineFactory, T1> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1>(this CombinedResult<T1, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2>(this CombinedResult<StateMachineFactory, T1, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2>(this CombinedResult<T1, StateMachineFactory, T2> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2>(this CombinedResult<T1, T2, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3>(this CombinedResult<StateMachineFactory, T1, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3>(this CombinedResult<T1, StateMachineFactory, T2, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, StateMachineFactory, T3> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StateMachineFactory, T1, T2, T3, T4, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3, T4>(this CombinedResult<StateMachineFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StateMachineFactory, T2, T3, T4, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, StateMachineFactory, T2, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StateMachineFactory, T3, T4, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, StateMachineFactory, T3, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StateMachineFactory, T4, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StateMachineFactory, T4> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StateMachineFactory, InnerStateMachineTracingConfigurationFactory> WithTracingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StateMachineFactory> combinedResult, Action<Humidifier.StepFunctions.StateMachineTypes.TracingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTracingConfiguration(combinedResult.T5, subFactoryAction));
}
