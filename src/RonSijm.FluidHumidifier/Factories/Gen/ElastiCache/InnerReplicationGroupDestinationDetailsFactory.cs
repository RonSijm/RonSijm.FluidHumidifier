// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ElastiCache;

public class InnerReplicationGroupDestinationDetailsFactory(Action<Humidifier.ElastiCache.ReplicationGroupTypes.DestinationDetails> factoryAction = null) : SubResourceFactory<Humidifier.ElastiCache.ReplicationGroupTypes.DestinationDetails>
{

    internal InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory CloudWatchLogsDetailsFactory { get; set; }

    internal InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory KinesisFirehoseDetailsFactory { get; set; }

    protected override Humidifier.ElastiCache.ReplicationGroupTypes.DestinationDetails Create()
    {
        var destinationDetailsResult = CreateDestinationDetails();
        factoryAction?.Invoke(destinationDetailsResult);

        return destinationDetailsResult;
    }

    private Humidifier.ElastiCache.ReplicationGroupTypes.DestinationDetails CreateDestinationDetails()
    {
        var destinationDetailsResult = new Humidifier.ElastiCache.ReplicationGroupTypes.DestinationDetails();

        return destinationDetailsResult;
    }
    public override void CreateChildren(Humidifier.ElastiCache.ReplicationGroupTypes.DestinationDetails result)
    {
        base.CreateChildren(result);

        result.CloudWatchLogsDetails ??= CloudWatchLogsDetailsFactory?.Build();
        result.KinesisFirehoseDetails ??= KinesisFirehoseDetailsFactory?.Build();
    }

} // End Of Class

public static class InnerReplicationGroupDestinationDetailsFactoryExtensions
{
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails(this InnerReplicationGroupDestinationDetailsFactory parentFactory, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null)
    {
        parentFactory.CloudWatchLogsDetailsFactory = new InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLogsDetailsFactory);
    }

    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails(this InnerReplicationGroupDestinationDetailsFactory parentFactory, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null)
    {
        parentFactory.KinesisFirehoseDetailsFactory = new InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisFirehoseDetailsFactory);
    }

    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2>(this CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3>(this CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3, T4, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3, T4>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3, T4, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3, T4>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3, T4, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory, T4, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupCloudWatchLogsDestinationDetailsFactory> WithCloudWatchLogsDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.CloudWatchLogsDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogsDetails(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2>(this CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3>(this CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3, T4, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3, T4>(this CombinedResult<InnerReplicationGroupDestinationDetailsFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3, T4, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3, T4>(this CombinedResult<T1, InnerReplicationGroupDestinationDetailsFactory, T2, T3, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3, T4, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerReplicationGroupDestinationDetailsFactory, T3, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory, T4, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerReplicationGroupDestinationDetailsFactory, T4> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerReplicationGroupDestinationDetailsFactory, InnerReplicationGroupKinesisFirehoseDestinationDetailsFactory> WithKinesisFirehoseDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerReplicationGroupDestinationDetailsFactory> combinedResult, Action<Humidifier.ElastiCache.ReplicationGroupTypes.KinesisFirehoseDestinationDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseDetails(combinedResult.T5, subFactoryAction));
}
