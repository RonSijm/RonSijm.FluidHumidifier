// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Rekognition;

public class StreamProcessorFactory(string resourceName = null, Action<Humidifier.Rekognition.StreamProcessor> factoryAction = null) : ResourceFactory<Humidifier.Rekognition.StreamProcessor>(resourceName)
{

    internal List<InnerStreamProcessorBoundingBoxFactory> BoundingBoxRegionsOfInterestFactories { get; set; } = [];

    internal InnerStreamProcessorS3DestinationFactory S3DestinationFactory { get; set; }

    internal InnerStreamProcessorDataSharingPreferenceFactory DataSharingPreferenceFactory { get; set; }

    internal InnerStreamProcessorFaceSearchSettingsFactory FaceSearchSettingsFactory { get; set; }

    internal InnerStreamProcessorConnectedHomeSettingsFactory ConnectedHomeSettingsFactory { get; set; }

    internal InnerStreamProcessorNotificationChannelFactory NotificationChannelFactory { get; set; }

    internal InnerStreamProcessorKinesisVideoStreamFactory KinesisVideoStreamFactory { get; set; }

    internal InnerStreamProcessorKinesisDataStreamFactory KinesisDataStreamFactory { get; set; }

    protected override Humidifier.Rekognition.StreamProcessor Create()
    {
        var streamProcessorResult = CreateStreamProcessor();
        factoryAction?.Invoke(streamProcessorResult);

        return streamProcessorResult;
    }

    private Humidifier.Rekognition.StreamProcessor CreateStreamProcessor()
    {
        var streamProcessorResult = new Humidifier.Rekognition.StreamProcessor
        {
            GivenName = InputResourceName,
        };

        return streamProcessorResult;
    }
    public override void CreateChildren(Humidifier.Rekognition.StreamProcessor result)
    {
        base.CreateChildren(result);

        result.BoundingBoxRegionsOfInterest = BoundingBoxRegionsOfInterestFactories.Any() ? BoundingBoxRegionsOfInterestFactories.Select(x => x.Build()).ToList() : null;
        result.S3Destination ??= S3DestinationFactory?.Build();
        result.DataSharingPreference ??= DataSharingPreferenceFactory?.Build();
        result.FaceSearchSettings ??= FaceSearchSettingsFactory?.Build();
        result.ConnectedHomeSettings ??= ConnectedHomeSettingsFactory?.Build();
        result.NotificationChannel ??= NotificationChannelFactory?.Build();
        result.KinesisVideoStream ??= KinesisVideoStreamFactory?.Build();
        result.KinesisDataStream ??= KinesisDataStreamFactory?.Build();
    }

} // End Of Class

public static class StreamProcessorFactoryExtensions
{
    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null)
    {
        var factory = new InnerStreamProcessorBoundingBoxFactory(subFactoryAction);
        parentFactory.BoundingBoxRegionsOfInterestFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorS3DestinationFactory> WithS3Destination(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null)
    {
        parentFactory.S3DestinationFactory = new InnerStreamProcessorS3DestinationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3DestinationFactory);
    }

    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null)
    {
        parentFactory.DataSharingPreferenceFactory = new InnerStreamProcessorDataSharingPreferenceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DataSharingPreferenceFactory);
    }

    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null)
    {
        parentFactory.FaceSearchSettingsFactory = new InnerStreamProcessorFaceSearchSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FaceSearchSettingsFactory);
    }

    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null)
    {
        parentFactory.ConnectedHomeSettingsFactory = new InnerStreamProcessorConnectedHomeSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConnectedHomeSettingsFactory);
    }

    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null)
    {
        parentFactory.NotificationChannelFactory = new InnerStreamProcessorNotificationChannelFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NotificationChannelFactory);
    }

    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null)
    {
        parentFactory.KinesisVideoStreamFactory = new InnerStreamProcessorKinesisVideoStreamFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisVideoStreamFactory);
    }

    public static CombinedResult<StreamProcessorFactory, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream(this StreamProcessorFactory parentFactory, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null)
    {
        parentFactory.KinesisDataStreamFactory = new InnerStreamProcessorKinesisDataStreamFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisDataStreamFactory);
    }

    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorBoundingBoxFactory> WithBoundingBoxRegionsOfInterest<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.BoundingBox> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBoundingBoxRegionsOfInterest(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Destination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3Destination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorS3DestinationFactory> WithS3Destination<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.S3Destination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3Destination(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorDataSharingPreferenceFactory> WithDataSharingPreference<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.DataSharingPreference> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDataSharingPreference(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorFaceSearchSettingsFactory> WithFaceSearchSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.FaceSearchSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFaceSearchSettings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorConnectedHomeSettingsFactory> WithConnectedHomeSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.ConnectedHomeSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConnectedHomeSettings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotificationChannel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotificationChannel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorNotificationChannelFactory> WithNotificationChannel<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.NotificationChannel> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationChannel(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorKinesisVideoStreamFactory> WithKinesisVideoStream<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisVideoStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisVideoStream(combinedResult.T5, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1>(this CombinedResult<StreamProcessorFactory, T1> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1>(this CombinedResult<T1, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2>(this CombinedResult<StreamProcessorFactory, T1, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2>(this CombinedResult<T1, StreamProcessorFactory, T2> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2>(this CombinedResult<T1, T2, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T3, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3>(this CombinedResult<StreamProcessorFactory, T1, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3>(this CombinedResult<T1, StreamProcessorFactory, T2, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3>(this CombinedResult<T1, T2, StreamProcessorFactory, T3> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3>(this CombinedResult<T1, T2, T3, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T4, subFactoryAction));
    public static CombinedResult<StreamProcessorFactory, T1, T2, T3, T4, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3, T4>(this CombinedResult<StreamProcessorFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, StreamProcessorFactory, T2, T3, T4, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3, T4>(this CombinedResult<T1, StreamProcessorFactory, T2, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, StreamProcessorFactory, T3, T4, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3, T4>(this CombinedResult<T1, T2, StreamProcessorFactory, T3, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, StreamProcessorFactory, T4, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, StreamProcessorFactory, T4> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, StreamProcessorFactory, InnerStreamProcessorKinesisDataStreamFactory> WithKinesisDataStream<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, StreamProcessorFactory> combinedResult, Action<Humidifier.Rekognition.StreamProcessorTypes.KinesisDataStream> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisDataStream(combinedResult.T5, subFactoryAction));
}
