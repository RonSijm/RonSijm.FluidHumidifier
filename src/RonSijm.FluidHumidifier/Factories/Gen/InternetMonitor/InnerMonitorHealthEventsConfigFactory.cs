// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.InternetMonitor;

public class InnerMonitorHealthEventsConfigFactory(Action<Humidifier.InternetMonitor.MonitorTypes.HealthEventsConfig> factoryAction = null) : SubResourceFactory<Humidifier.InternetMonitor.MonitorTypes.HealthEventsConfig>
{

    internal InnerMonitorLocalHealthEventsConfigFactory AvailabilityLocalHealthEventsConfigFactory { get; set; }

    internal InnerMonitorLocalHealthEventsConfigFactory PerformanceLocalHealthEventsConfigFactory { get; set; }

    protected override Humidifier.InternetMonitor.MonitorTypes.HealthEventsConfig Create()
    {
        var healthEventsConfigResult = CreateHealthEventsConfig();
        factoryAction?.Invoke(healthEventsConfigResult);

        return healthEventsConfigResult;
    }

    private Humidifier.InternetMonitor.MonitorTypes.HealthEventsConfig CreateHealthEventsConfig()
    {
        var healthEventsConfigResult = new Humidifier.InternetMonitor.MonitorTypes.HealthEventsConfig();

        return healthEventsConfigResult;
    }
    public override void CreateChildren(Humidifier.InternetMonitor.MonitorTypes.HealthEventsConfig result)
    {
        base.CreateChildren(result);

        result.AvailabilityLocalHealthEventsConfig ??= AvailabilityLocalHealthEventsConfigFactory?.Build();
        result.PerformanceLocalHealthEventsConfig ??= PerformanceLocalHealthEventsConfigFactory?.Build();
    }

} // End Of Class

public static class InnerMonitorHealthEventsConfigFactoryExtensions
{
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig(this InnerMonitorHealthEventsConfigFactory parentFactory, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null)
    {
        parentFactory.AvailabilityLocalHealthEventsConfigFactory = new InnerMonitorLocalHealthEventsConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AvailabilityLocalHealthEventsConfigFactory);
    }

    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig(this InnerMonitorHealthEventsConfigFactory parentFactory, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null)
    {
        parentFactory.PerformanceLocalHealthEventsConfigFactory = new InnerMonitorLocalHealthEventsConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PerformanceLocalHealthEventsConfigFactory);
    }

    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2>(this CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3, T4, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3, T4, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3, T4, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory, T4, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithAvailabilityLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAvailabilityLocalHealthEventsConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2>(this CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3, T4, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<InnerMonitorHealthEventsConfigFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3, T4, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, InnerMonitorHealthEventsConfigFactory, T2, T3, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3, T4, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMonitorHealthEventsConfigFactory, T3, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory, T4, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMonitorHealthEventsConfigFactory, T4> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMonitorHealthEventsConfigFactory, InnerMonitorLocalHealthEventsConfigFactory> WithPerformanceLocalHealthEventsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMonitorHealthEventsConfigFactory> combinedResult, Action<Humidifier.InternetMonitor.MonitorTypes.LocalHealthEventsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPerformanceLocalHealthEventsConfig(combinedResult.T5, subFactoryAction));
}
