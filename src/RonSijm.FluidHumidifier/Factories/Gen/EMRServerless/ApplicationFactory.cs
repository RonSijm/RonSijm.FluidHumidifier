// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EMRServerless;

public class ApplicationFactory(string resourceName = null, Action<Humidifier.EMRServerless.Application> factoryAction = null) : ResourceFactory<Humidifier.EMRServerless.Application>(resourceName)
{

    internal List<InnerApplicationConfigurationObjectFactory> RuntimeConfigurationFactories { get; set; } = [];

    internal List<InnerApplicationInitialCapacityConfigKeyValuePairFactory> InitialCapacityFactories { get; set; } = [];

    internal InnerApplicationAutoStartConfigurationFactory AutoStartConfigurationFactory { get; set; }

    internal InnerApplicationMonitoringConfigurationFactory MonitoringConfigurationFactory { get; set; }

    internal InnerApplicationMaximumAllowedResourcesFactory MaximumCapacityFactory { get; set; }

    internal InnerApplicationAutoStopConfigurationFactory AutoStopConfigurationFactory { get; set; }

    internal InnerApplicationInteractiveConfigurationFactory InteractiveConfigurationFactory { get; set; }

    internal InnerApplicationImageConfigurationInputFactory ImageConfigurationFactory { get; set; }

    internal InnerApplicationNetworkConfigurationFactory NetworkConfigurationFactory { get; set; }

    protected override Humidifier.EMRServerless.Application Create()
    {
        var applicationResult = CreateApplication();
        factoryAction?.Invoke(applicationResult);

        return applicationResult;
    }

    private Humidifier.EMRServerless.Application CreateApplication()
    {
        var applicationResult = new Humidifier.EMRServerless.Application
        {
            GivenName = InputResourceName,
        };

        return applicationResult;
    }
    public override void CreateChildren(Humidifier.EMRServerless.Application result)
    {
        base.CreateChildren(result);

        result.RuntimeConfiguration = RuntimeConfigurationFactories.Any() ? RuntimeConfigurationFactories.Select(x => x.Build()).ToList() : null;
        result.InitialCapacity = InitialCapacityFactories.Any() ? InitialCapacityFactories.Select(x => x.Build()).ToList() : null;
        result.AutoStartConfiguration ??= AutoStartConfigurationFactory?.Build();
        result.MonitoringConfiguration ??= MonitoringConfigurationFactory?.Build();
        result.MaximumCapacity ??= MaximumCapacityFactory?.Build();
        result.AutoStopConfiguration ??= AutoStopConfigurationFactory?.Build();
        result.InteractiveConfiguration ??= InteractiveConfigurationFactory?.Build();
        result.ImageConfiguration ??= ImageConfigurationFactory?.Build();
        result.NetworkConfiguration ??= NetworkConfigurationFactory?.Build();
    }

} // End Of Class

public static class ApplicationFactoryExtensions
{
    public static CombinedResult<ApplicationFactory, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null)
    {
        var factory = new InnerApplicationConfigurationObjectFactory(subFactoryAction);
        parentFactory.RuntimeConfigurationFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ApplicationFactory, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null)
    {
        var factory = new InnerApplicationInitialCapacityConfigKeyValuePairFactory(subFactoryAction);
        parentFactory.InitialCapacityFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ApplicationFactory, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null)
    {
        parentFactory.AutoStartConfigurationFactory = new InnerApplicationAutoStartConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AutoStartConfigurationFactory);
    }

    public static CombinedResult<ApplicationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null)
    {
        parentFactory.MonitoringConfigurationFactory = new InnerApplicationMonitoringConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MonitoringConfigurationFactory);
    }

    public static CombinedResult<ApplicationFactory, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null)
    {
        parentFactory.MaximumCapacityFactory = new InnerApplicationMaximumAllowedResourcesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MaximumCapacityFactory);
    }

    public static CombinedResult<ApplicationFactory, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null)
    {
        parentFactory.AutoStopConfigurationFactory = new InnerApplicationAutoStopConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AutoStopConfigurationFactory);
    }

    public static CombinedResult<ApplicationFactory, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null)
    {
        parentFactory.InteractiveConfigurationFactory = new InnerApplicationInteractiveConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InteractiveConfigurationFactory);
    }

    public static CombinedResult<ApplicationFactory, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null)
    {
        parentFactory.ImageConfigurationFactory = new InnerApplicationImageConfigurationInputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ImageConfigurationFactory);
    }

    public static CombinedResult<ApplicationFactory, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration(this ApplicationFactory parentFactory, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null)
    {
        parentFactory.NetworkConfigurationFactory = new InnerApplicationNetworkConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NetworkConfigurationFactory);
    }

    public static CombinedResult<ApplicationFactory, T1, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationConfigurationObjectFactory> WithRuntimeConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ConfigurationObject> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimeConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, WithInitialCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, WithInitialCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationInitialCapacityConfigKeyValuePairFactory> WithInitialCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InitialCapacityConfigKeyValuePair> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInitialCapacity(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationAutoStartConfigurationFactory> WithAutoStartConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStartConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStartConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationMaximumAllowedResourcesFactory> WithMaximumCapacity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.MaximumAllowedResources> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaximumCapacity(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationAutoStopConfigurationFactory> WithAutoStopConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.AutoStopConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoStopConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationInteractiveConfigurationFactory> WithInteractiveConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.InteractiveConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInteractiveConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, WithImageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, WithImageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationImageConfigurationInputFactory> WithImageConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.ImageConfigurationInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImageConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1>(this CombinedResult<ApplicationFactory, T1> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1>(this CombinedResult<T1, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2>(this CombinedResult<ApplicationFactory, T1, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2>(this CombinedResult<T1, ApplicationFactory, T2> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2>(this CombinedResult<T1, T2, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<ApplicationFactory, T1, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<T1, ApplicationFactory, T2, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ApplicationFactory, T3> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ApplicationFactory, T1, T2, T3, T4, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<ApplicationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ApplicationFactory, T2, T3, T4, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ApplicationFactory, T2, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ApplicationFactory, T3, T4, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ApplicationFactory, T3, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ApplicationFactory, T4, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ApplicationFactory, T4> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ApplicationFactory, InnerApplicationNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ApplicationFactory> combinedResult, Action<Humidifier.EMRServerless.ApplicationTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T5, subFactoryAction));
}
