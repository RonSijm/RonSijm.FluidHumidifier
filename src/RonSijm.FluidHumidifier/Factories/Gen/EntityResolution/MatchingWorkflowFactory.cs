// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EntityResolution;

public class MatchingWorkflowFactory(string resourceName = null, Action<Humidifier.EntityResolution.MatchingWorkflow> factoryAction = null) : ResourceFactory<Humidifier.EntityResolution.MatchingWorkflow>(resourceName)
{

    internal List<InnerMatchingWorkflowInputSourceFactory> InputSourceConfigFactories { get; set; } = [];

    internal List<InnerMatchingWorkflowOutputSourceFactory> OutputSourceConfigFactories { get; set; } = [];

    internal InnerMatchingWorkflowResolutionTechniquesFactory ResolutionTechniquesFactory { get; set; }

    internal InnerMatchingWorkflowIncrementalRunConfigFactory IncrementalRunConfigFactory { get; set; }

    protected override Humidifier.EntityResolution.MatchingWorkflow Create()
    {
        var matchingWorkflowResult = CreateMatchingWorkflow();
        factoryAction?.Invoke(matchingWorkflowResult);

        return matchingWorkflowResult;
    }

    private Humidifier.EntityResolution.MatchingWorkflow CreateMatchingWorkflow()
    {
        var matchingWorkflowResult = new Humidifier.EntityResolution.MatchingWorkflow
        {
            GivenName = InputResourceName,
        };

        return matchingWorkflowResult;
    }
    public override void CreateChildren(Humidifier.EntityResolution.MatchingWorkflow result)
    {
        base.CreateChildren(result);

        result.InputSourceConfig = InputSourceConfigFactories.Any() ? InputSourceConfigFactories.Select(x => x.Build()).ToList() : null;
        result.OutputSourceConfig = OutputSourceConfigFactories.Any() ? OutputSourceConfigFactories.Select(x => x.Build()).ToList() : null;
        result.ResolutionTechniques ??= ResolutionTechniquesFactory?.Build();
        result.IncrementalRunConfig ??= IncrementalRunConfigFactory?.Build();
    }

} // End Of Class

public static class MatchingWorkflowFactoryExtensions
{
    public static CombinedResult<MatchingWorkflowFactory, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig(this MatchingWorkflowFactory parentFactory, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null)
    {
        var factory = new InnerMatchingWorkflowInputSourceFactory(subFactoryAction);
        parentFactory.InputSourceConfigFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<MatchingWorkflowFactory, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig(this MatchingWorkflowFactory parentFactory, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null)
    {
        var factory = new InnerMatchingWorkflowOutputSourceFactory(subFactoryAction);
        parentFactory.OutputSourceConfigFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<MatchingWorkflowFactory, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques(this MatchingWorkflowFactory parentFactory, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null)
    {
        parentFactory.ResolutionTechniquesFactory = new InnerMatchingWorkflowResolutionTechniquesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ResolutionTechniquesFactory);
    }

    public static CombinedResult<MatchingWorkflowFactory, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig(this MatchingWorkflowFactory parentFactory, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null)
    {
        parentFactory.IncrementalRunConfigFactory = new InnerMatchingWorkflowIncrementalRunConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IncrementalRunConfigFactory);
    }

    public static CombinedResult<MatchingWorkflowFactory, T1, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1>(this CombinedResult<MatchingWorkflowFactory, T1> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1>(this CombinedResult<T1, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2>(this CombinedResult<MatchingWorkflowFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2>(this CombinedResult<T1, MatchingWorkflowFactory, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2>(this CombinedResult<T1, T2, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3, T4>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory, InnerMatchingWorkflowInputSourceFactory> WithInputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.InputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSourceConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1>(this CombinedResult<MatchingWorkflowFactory, T1> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1>(this CombinedResult<T1, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2>(this CombinedResult<MatchingWorkflowFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2>(this CombinedResult<T1, MatchingWorkflowFactory, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2>(this CombinedResult<T1, T2, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3, T4>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory, InnerMatchingWorkflowOutputSourceFactory> WithOutputSourceConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.OutputSource> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutputSourceConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1>(this CombinedResult<MatchingWorkflowFactory, T1> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1>(this CombinedResult<T1, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T2, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2>(this CombinedResult<MatchingWorkflowFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2>(this CombinedResult<T1, MatchingWorkflowFactory, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2>(this CombinedResult<T1, T2, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T3, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T4, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3, T4>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3, T4>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3, T4>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory, InnerMatchingWorkflowResolutionTechniquesFactory> WithResolutionTechniques<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResolutionTechniques(combinedResult.T5, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1>(this CombinedResult<MatchingWorkflowFactory, T1> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1>(this CombinedResult<T1, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2>(this CombinedResult<MatchingWorkflowFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2>(this CombinedResult<T1, MatchingWorkflowFactory, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2>(this CombinedResult<T1, T2, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3, T4>(this CombinedResult<MatchingWorkflowFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3, T4>(this CombinedResult<T1, MatchingWorkflowFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, MatchingWorkflowFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, MatchingWorkflowFactory, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory, InnerMatchingWorkflowIncrementalRunConfigFactory> WithIncrementalRunConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, MatchingWorkflowFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.IncrementalRunConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncrementalRunConfig(combinedResult.T5, subFactoryAction));
}
