// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EntityResolution;

public class InnerIdMappingWorkflowIdMappingTechniquesFactory(Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingTechniques> factoryAction = null) : SubResourceFactory<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingTechniques>
{

    internal InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory RuleBasedPropertiesFactory { get; set; }

    internal InnerIdMappingWorkflowProviderPropertiesFactory ProviderPropertiesFactory { get; set; }

    protected override Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingTechniques Create()
    {
        var idMappingTechniquesResult = CreateIdMappingTechniques();
        factoryAction?.Invoke(idMappingTechniquesResult);

        return idMappingTechniquesResult;
    }

    private Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingTechniques CreateIdMappingTechniques()
    {
        var idMappingTechniquesResult = new Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingTechniques();

        return idMappingTechniquesResult;
    }
    public override void CreateChildren(Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingTechniques result)
    {
        base.CreateChildren(result);

        result.RuleBasedProperties ??= RuleBasedPropertiesFactory?.Build();
        result.ProviderProperties ??= ProviderPropertiesFactory?.Build();
    }

} // End Of Class

public static class InnerIdMappingWorkflowIdMappingTechniquesFactoryExtensions
{
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties(this InnerIdMappingWorkflowIdMappingTechniquesFactory parentFactory, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null)
    {
        parentFactory.RuleBasedPropertiesFactory = new InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RuleBasedPropertiesFactory);
    }

    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties(this InnerIdMappingWorkflowIdMappingTechniquesFactory parentFactory, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null)
    {
        parentFactory.ProviderPropertiesFactory = new InnerIdMappingWorkflowProviderPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProviderPropertiesFactory);
    }

    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2>(this CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3, T4, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3, T4, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3, T4, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory, T4, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowIdMappingRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.IdMappingRuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2>(this CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3, T4, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<InnerIdMappingWorkflowIdMappingTechniquesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3, T4, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, InnerIdMappingWorkflowIdMappingTechniquesFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3, T4, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerIdMappingWorkflowIdMappingTechniquesFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory, T4, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerIdMappingWorkflowIdMappingTechniquesFactory, T4> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerIdMappingWorkflowIdMappingTechniquesFactory, InnerIdMappingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerIdMappingWorkflowIdMappingTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.IdMappingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T5, subFactoryAction));
}
