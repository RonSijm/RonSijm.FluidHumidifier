// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EntityResolution;

public class InnerMatchingWorkflowResolutionTechniquesFactory(Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques> factoryAction = null) : SubResourceFactory<Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques>
{

    internal InnerMatchingWorkflowRuleBasedPropertiesFactory RuleBasedPropertiesFactory { get; set; }

    internal InnerMatchingWorkflowProviderPropertiesFactory ProviderPropertiesFactory { get; set; }

    protected override Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques Create()
    {
        var resolutionTechniquesResult = CreateResolutionTechniques();
        factoryAction?.Invoke(resolutionTechniquesResult);

        return resolutionTechniquesResult;
    }

    private Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques CreateResolutionTechniques()
    {
        var resolutionTechniquesResult = new Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques();

        return resolutionTechniquesResult;
    }
    public override void CreateChildren(Humidifier.EntityResolution.MatchingWorkflowTypes.ResolutionTechniques result)
    {
        base.CreateChildren(result);

        result.RuleBasedProperties ??= RuleBasedPropertiesFactory?.Build();
        result.ProviderProperties ??= ProviderPropertiesFactory?.Build();
    }

} // End Of Class

public static class InnerMatchingWorkflowResolutionTechniquesFactoryExtensions
{
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties(this InnerMatchingWorkflowResolutionTechniquesFactory parentFactory, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null)
    {
        parentFactory.RuleBasedPropertiesFactory = new InnerMatchingWorkflowRuleBasedPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RuleBasedPropertiesFactory);
    }

    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties(this InnerMatchingWorkflowResolutionTechniquesFactory parentFactory, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null)
    {
        parentFactory.ProviderPropertiesFactory = new InnerMatchingWorkflowProviderPropertiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProviderPropertiesFactory);
    }

    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2>(this CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3, T4, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3, T4, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3, T4, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory, T4, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowRuleBasedPropertiesFactory> WithRuleBasedProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.RuleBasedProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuleBasedProperties(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2>(this CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3, T4, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<InnerMatchingWorkflowResolutionTechniquesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3, T4, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, InnerMatchingWorkflowResolutionTechniquesFactory, T2, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3, T4, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerMatchingWorkflowResolutionTechniquesFactory, T3, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory, T4, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerMatchingWorkflowResolutionTechniquesFactory, T4> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory, InnerMatchingWorkflowProviderPropertiesFactory> WithProviderProperties<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerMatchingWorkflowResolutionTechniquesFactory> combinedResult, Action<Humidifier.EntityResolution.MatchingWorkflowTypes.ProviderProperties> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProviderProperties(combinedResult.T5, subFactoryAction));
}
