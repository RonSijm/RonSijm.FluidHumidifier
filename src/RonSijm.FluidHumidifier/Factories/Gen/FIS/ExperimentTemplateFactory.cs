// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.FIS;

public class ExperimentTemplateFactory(string resourceName = null, Action<Humidifier.FIS.ExperimentTemplate> factoryAction = null) : ResourceFactory<Humidifier.FIS.ExperimentTemplate>(resourceName)
{

    internal List<InnerExperimentTemplateExperimentTemplateStopConditionFactory> StopConditionsFactories { get; set; } = [];

    internal InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory ExperimentOptionsFactory { get; set; }

    internal InnerExperimentTemplateExperimentTemplateLogConfigurationFactory LogConfigurationFactory { get; set; }

    protected override Humidifier.FIS.ExperimentTemplate Create()
    {
        var experimentTemplateResult = CreateExperimentTemplate();
        factoryAction?.Invoke(experimentTemplateResult);

        return experimentTemplateResult;
    }

    private Humidifier.FIS.ExperimentTemplate CreateExperimentTemplate()
    {
        var experimentTemplateResult = new Humidifier.FIS.ExperimentTemplate
        {
            GivenName = InputResourceName,
        };

        return experimentTemplateResult;
    }
    public override void CreateChildren(Humidifier.FIS.ExperimentTemplate result)
    {
        base.CreateChildren(result);

        result.StopConditions = StopConditionsFactories.Any() ? StopConditionsFactories.Select(x => x.Build()).ToList() : null;
        result.ExperimentOptions ??= ExperimentOptionsFactory?.Build();
        result.LogConfiguration ??= LogConfigurationFactory?.Build();
    }

} // End Of Class

public static class ExperimentTemplateFactoryExtensions
{
    public static CombinedResult<ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions(this ExperimentTemplateFactory parentFactory, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null)
    {
        var factory = new InnerExperimentTemplateExperimentTemplateStopConditionFactory(subFactoryAction);
        parentFactory.StopConditionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions(this ExperimentTemplateFactory parentFactory, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null)
    {
        parentFactory.ExperimentOptionsFactory = new InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExperimentOptionsFactory);
    }

    public static CombinedResult<ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration(this ExperimentTemplateFactory parentFactory, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null)
    {
        parentFactory.LogConfigurationFactory = new InnerExperimentTemplateExperimentTemplateLogConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LogConfigurationFactory);
    }

    public static CombinedResult<ExperimentTemplateFactory, T1, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1>(this CombinedResult<ExperimentTemplateFactory, T1> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, WithStopConditions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1>(this CombinedResult<T1, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, WithStopConditions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2>(this CombinedResult<ExperimentTemplateFactory, T1, T2> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2>(this CombinedResult<T1, ExperimentTemplateFactory, T2> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2>(this CombinedResult<T1, T2, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, T3, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3>(this CombinedResult<ExperimentTemplateFactory, T1, T2, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, T3, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3>(this CombinedResult<T1, ExperimentTemplateFactory, T2, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, T3, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3>(this CombinedResult<T1, T2, ExperimentTemplateFactory, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, T3, T4, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3, T4>(this CombinedResult<ExperimentTemplateFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, T3, T4, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3, T4>(this CombinedResult<T1, ExperimentTemplateFactory, T2, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, T3, T4, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ExperimentTemplateFactory, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ExperimentTemplateFactory, T4, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ExperimentTemplateFactory, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateStopConditionFactory> WithStopConditions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateStopCondition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStopConditions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1>(this CombinedResult<ExperimentTemplateFactory, T1> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithExperimentOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1>(this CombinedResult<T1, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithExperimentOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2>(this CombinedResult<ExperimentTemplateFactory, T1, T2> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2>(this CombinedResult<T1, ExperimentTemplateFactory, T2> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2>(this CombinedResult<T1, T2, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, T3, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3>(this CombinedResult<ExperimentTemplateFactory, T1, T2, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, T3, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3>(this CombinedResult<T1, ExperimentTemplateFactory, T2, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, T3, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3>(this CombinedResult<T1, T2, ExperimentTemplateFactory, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, T3, T4, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3, T4>(this CombinedResult<ExperimentTemplateFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, T3, T4, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3, T4>(this CombinedResult<T1, ExperimentTemplateFactory, T2, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, T3, T4, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ExperimentTemplateFactory, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ExperimentTemplateFactory, T4, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ExperimentTemplateFactory, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateExperimentOptionsFactory> WithExperimentOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateExperimentOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExperimentOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1>(this CombinedResult<ExperimentTemplateFactory, T1> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1>(this CombinedResult<T1, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2>(this CombinedResult<ExperimentTemplateFactory, T1, T2> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2>(this CombinedResult<T1, ExperimentTemplateFactory, T2> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2>(this CombinedResult<T1, T2, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, T3, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<ExperimentTemplateFactory, T1, T2, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, T3, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<T1, ExperimentTemplateFactory, T2, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, T3, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ExperimentTemplateFactory, T3> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ExperimentTemplateFactory, T1, T2, T3, T4, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<ExperimentTemplateFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ExperimentTemplateFactory, T2, T3, T4, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ExperimentTemplateFactory, T2, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ExperimentTemplateFactory, T3, T4, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ExperimentTemplateFactory, T3, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ExperimentTemplateFactory, T4, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ExperimentTemplateFactory, T4> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ExperimentTemplateFactory, InnerExperimentTemplateExperimentTemplateLogConfigurationFactory> WithLogConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ExperimentTemplateFactory> combinedResult, Action<Humidifier.FIS.ExperimentTemplateTypes.ExperimentTemplateLogConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogConfiguration(combinedResult.T5, subFactoryAction));
}
