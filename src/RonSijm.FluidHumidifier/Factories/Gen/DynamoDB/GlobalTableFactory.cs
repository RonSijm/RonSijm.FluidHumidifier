// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.DynamoDB;

public class GlobalTableFactory(string resourceName = null, Action<Humidifier.DynamoDB.GlobalTable> factoryAction = null) : ResourceFactory<Humidifier.DynamoDB.GlobalTable>(resourceName)
{

    internal List<InnerGlobalTableAttributeDefinitionFactory> AttributeDefinitionsFactories { get; set; } = [];

    internal List<InnerGlobalTableGlobalSecondaryIndexFactory> GlobalSecondaryIndexesFactories { get; set; } = [];

    internal List<InnerGlobalTableKeySchemaFactory> KeySchemaFactories { get; set; } = [];

    internal List<InnerGlobalTableLocalSecondaryIndexFactory> LocalSecondaryIndexesFactories { get; set; } = [];

    internal List<InnerGlobalTableReplicaSpecificationFactory> ReplicasFactories { get; set; } = [];

    internal InnerGlobalTableSSESpecificationFactory SSESpecificationFactory { get; set; }

    internal InnerGlobalTableStreamSpecificationFactory StreamSpecificationFactory { get; set; }

    internal InnerGlobalTableWriteProvisionedThroughputSettingsFactory WriteProvisionedThroughputSettingsFactory { get; set; }

    internal InnerGlobalTableTimeToLiveSpecificationFactory TimeToLiveSpecificationFactory { get; set; }

    internal InnerGlobalTableWriteOnDemandThroughputSettingsFactory WriteOnDemandThroughputSettingsFactory { get; set; }

    protected override Humidifier.DynamoDB.GlobalTable Create()
    {
        var globalTableResult = CreateGlobalTable();
        factoryAction?.Invoke(globalTableResult);

        return globalTableResult;
    }

    private Humidifier.DynamoDB.GlobalTable CreateGlobalTable()
    {
        var globalTableResult = new Humidifier.DynamoDB.GlobalTable
        {
            GivenName = InputResourceName,
        };

        return globalTableResult;
    }
    public override void CreateChildren(Humidifier.DynamoDB.GlobalTable result)
    {
        base.CreateChildren(result);

        result.AttributeDefinitions = AttributeDefinitionsFactories.Any() ? AttributeDefinitionsFactories.Select(x => x.Build()).ToList() : null;
        result.GlobalSecondaryIndexes = GlobalSecondaryIndexesFactories.Any() ? GlobalSecondaryIndexesFactories.Select(x => x.Build()).ToList() : null;
        result.KeySchema = KeySchemaFactories.Any() ? KeySchemaFactories.Select(x => x.Build()).ToList() : null;
        result.LocalSecondaryIndexes = LocalSecondaryIndexesFactories.Any() ? LocalSecondaryIndexesFactories.Select(x => x.Build()).ToList() : null;
        result.Replicas = ReplicasFactories.Any() ? ReplicasFactories.Select(x => x.Build()).ToList() : null;
        result.SSESpecification ??= SSESpecificationFactory?.Build();
        result.StreamSpecification ??= StreamSpecificationFactory?.Build();
        result.WriteProvisionedThroughputSettings ??= WriteProvisionedThroughputSettingsFactory?.Build();
        result.TimeToLiveSpecification ??= TimeToLiveSpecificationFactory?.Build();
        result.WriteOnDemandThroughputSettings ??= WriteOnDemandThroughputSettingsFactory?.Build();
    }

} // End Of Class

public static class GlobalTableFactoryExtensions
{
    public static CombinedResult<GlobalTableFactory, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null)
    {
        var factory = new InnerGlobalTableAttributeDefinitionFactory(subFactoryAction);
        parentFactory.AttributeDefinitionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GlobalTableFactory, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null)
    {
        var factory = new InnerGlobalTableGlobalSecondaryIndexFactory(subFactoryAction);
        parentFactory.GlobalSecondaryIndexesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GlobalTableFactory, InnerGlobalTableKeySchemaFactory> WithKeySchema(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null)
    {
        var factory = new InnerGlobalTableKeySchemaFactory(subFactoryAction);
        parentFactory.KeySchemaFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GlobalTableFactory, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null)
    {
        var factory = new InnerGlobalTableLocalSecondaryIndexFactory(subFactoryAction);
        parentFactory.LocalSecondaryIndexesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GlobalTableFactory, InnerGlobalTableReplicaSpecificationFactory> WithReplicas(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null)
    {
        var factory = new InnerGlobalTableReplicaSpecificationFactory(subFactoryAction);
        parentFactory.ReplicasFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<GlobalTableFactory, InnerGlobalTableSSESpecificationFactory> WithSSESpecification(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null)
    {
        parentFactory.SSESpecificationFactory = new InnerGlobalTableSSESpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SSESpecificationFactory);
    }

    public static CombinedResult<GlobalTableFactory, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null)
    {
        parentFactory.StreamSpecificationFactory = new InnerGlobalTableStreamSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.StreamSpecificationFactory);
    }

    public static CombinedResult<GlobalTableFactory, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null)
    {
        parentFactory.WriteProvisionedThroughputSettingsFactory = new InnerGlobalTableWriteProvisionedThroughputSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.WriteProvisionedThroughputSettingsFactory);
    }

    public static CombinedResult<GlobalTableFactory, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null)
    {
        parentFactory.TimeToLiveSpecificationFactory = new InnerGlobalTableTimeToLiveSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TimeToLiveSpecificationFactory);
    }

    public static CombinedResult<GlobalTableFactory, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings(this GlobalTableFactory parentFactory, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null)
    {
        parentFactory.WriteOnDemandThroughputSettingsFactory = new InnerGlobalTableWriteOnDemandThroughputSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.WriteOnDemandThroughputSettingsFactory);
    }

    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicas(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithReplicas(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableReplicaSpecificationFactory> WithReplicas<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.ReplicaSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithReplicas(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableWriteProvisionedThroughputSettingsFactory> WithWriteProvisionedThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteProvisionedThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteProvisionedThroughputSettings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1>(this CombinedResult<GlobalTableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1>(this CombinedResult<T1, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2>(this CombinedResult<GlobalTableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2>(this CombinedResult<T1, GlobalTableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2>(this CombinedResult<T1, T2, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3>(this CombinedResult<GlobalTableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3>(this CombinedResult<T1, GlobalTableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3>(this CombinedResult<T1, T2, GlobalTableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<GlobalTableFactory, T1, T2, T3, T4, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3, T4>(this CombinedResult<GlobalTableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, GlobalTableFactory, T2, T3, T4, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, GlobalTableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, GlobalTableFactory, T3, T4, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, GlobalTableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, GlobalTableFactory, T4, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, GlobalTableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, GlobalTableFactory, InnerGlobalTableWriteOnDemandThroughputSettingsFactory> WithWriteOnDemandThroughputSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, GlobalTableFactory> combinedResult, Action<Humidifier.DynamoDB.GlobalTableTypes.WriteOnDemandThroughputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWriteOnDemandThroughputSettings(combinedResult.T5, subFactoryAction));
}
