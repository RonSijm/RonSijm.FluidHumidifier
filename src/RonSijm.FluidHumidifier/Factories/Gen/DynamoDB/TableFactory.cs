// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.DynamoDB;

public class TableFactory(string resourceName = null, Action<Humidifier.DynamoDB.Table> factoryAction = null) : ResourceFactory<Humidifier.DynamoDB.Table>(resourceName)
{

    internal List<InnerTableAttributeDefinitionFactory> AttributeDefinitionsFactories { get; set; } = [];

    internal List<InnerTableGlobalSecondaryIndexFactory> GlobalSecondaryIndexesFactories { get; set; } = [];

    internal List<InnerTableKeySchemaFactory> KeySchemaFactories { get; set; } = [];

    internal List<InnerTableLocalSecondaryIndexFactory> LocalSecondaryIndexesFactories { get; set; } = [];

    internal InnerTableOnDemandThroughputFactory OnDemandThroughputFactory { get; set; }

    internal InnerTableSSESpecificationFactory SSESpecificationFactory { get; set; }

    internal InnerTableKinesisStreamSpecificationFactory KinesisStreamSpecificationFactory { get; set; }

    internal InnerTableStreamSpecificationFactory StreamSpecificationFactory { get; set; }

    internal InnerTableContributorInsightsSpecificationFactory ContributorInsightsSpecificationFactory { get; set; }

    internal InnerTableImportSourceSpecificationFactory ImportSourceSpecificationFactory { get; set; }

    internal InnerTablePointInTimeRecoverySpecificationFactory PointInTimeRecoverySpecificationFactory { get; set; }

    internal InnerTableProvisionedThroughputFactory ProvisionedThroughputFactory { get; set; }

    internal InnerTableResourcePolicyFactory ResourcePolicyFactory { get; set; }

    internal InnerTableTimeToLiveSpecificationFactory TimeToLiveSpecificationFactory { get; set; }

    protected override Humidifier.DynamoDB.Table Create()
    {
        var tableResult = CreateTable();
        factoryAction?.Invoke(tableResult);

        return tableResult;
    }

    private Humidifier.DynamoDB.Table CreateTable()
    {
        var tableResult = new Humidifier.DynamoDB.Table
        {
            GivenName = InputResourceName,
        };

        return tableResult;
    }
    public override void CreateChildren(Humidifier.DynamoDB.Table result)
    {
        base.CreateChildren(result);

        result.AttributeDefinitions = AttributeDefinitionsFactories.Any() ? AttributeDefinitionsFactories.Select(x => x.Build()).ToList() : null;
        result.GlobalSecondaryIndexes = GlobalSecondaryIndexesFactories.Any() ? GlobalSecondaryIndexesFactories.Select(x => x.Build()).ToList() : null;
        result.KeySchema = KeySchemaFactories.Any() ? KeySchemaFactories.Select(x => x.Build()).ToList() : null;
        result.LocalSecondaryIndexes = LocalSecondaryIndexesFactories.Any() ? LocalSecondaryIndexesFactories.Select(x => x.Build()).ToList() : null;
        result.OnDemandThroughput ??= OnDemandThroughputFactory?.Build();
        result.SSESpecification ??= SSESpecificationFactory?.Build();
        result.KinesisStreamSpecification ??= KinesisStreamSpecificationFactory?.Build();
        result.StreamSpecification ??= StreamSpecificationFactory?.Build();
        result.ContributorInsightsSpecification ??= ContributorInsightsSpecificationFactory?.Build();
        result.ImportSourceSpecification ??= ImportSourceSpecificationFactory?.Build();
        result.PointInTimeRecoverySpecification ??= PointInTimeRecoverySpecificationFactory?.Build();
        result.ProvisionedThroughput ??= ProvisionedThroughputFactory?.Build();
        result.ResourcePolicy ??= ResourcePolicyFactory?.Build();
        result.TimeToLiveSpecification ??= TimeToLiveSpecificationFactory?.Build();
    }

} // End Of Class

public static class TableFactoryExtensions
{
    public static CombinedResult<TableFactory, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null)
    {
        var factory = new InnerTableAttributeDefinitionFactory(subFactoryAction);
        parentFactory.AttributeDefinitionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null)
    {
        var factory = new InnerTableGlobalSecondaryIndexFactory(subFactoryAction);
        parentFactory.GlobalSecondaryIndexesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableKeySchemaFactory> WithKeySchema(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null)
    {
        var factory = new InnerTableKeySchemaFactory(subFactoryAction);
        parentFactory.KeySchemaFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null)
    {
        var factory = new InnerTableLocalSecondaryIndexFactory(subFactoryAction);
        parentFactory.LocalSecondaryIndexesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TableFactory, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null)
    {
        parentFactory.OnDemandThroughputFactory = new InnerTableOnDemandThroughputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OnDemandThroughputFactory);
    }

    public static CombinedResult<TableFactory, InnerTableSSESpecificationFactory> WithSSESpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null)
    {
        parentFactory.SSESpecificationFactory = new InnerTableSSESpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SSESpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null)
    {
        parentFactory.KinesisStreamSpecificationFactory = new InnerTableKinesisStreamSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisStreamSpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTableStreamSpecificationFactory> WithStreamSpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null)
    {
        parentFactory.StreamSpecificationFactory = new InnerTableStreamSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.StreamSpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null)
    {
        parentFactory.ContributorInsightsSpecificationFactory = new InnerTableContributorInsightsSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ContributorInsightsSpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null)
    {
        parentFactory.ImportSourceSpecificationFactory = new InnerTableImportSourceSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ImportSourceSpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null)
    {
        parentFactory.PointInTimeRecoverySpecificationFactory = new InnerTablePointInTimeRecoverySpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PointInTimeRecoverySpecificationFactory);
    }

    public static CombinedResult<TableFactory, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null)
    {
        parentFactory.ProvisionedThroughputFactory = new InnerTableProvisionedThroughputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProvisionedThroughputFactory);
    }

    public static CombinedResult<TableFactory, InnerTableResourcePolicyFactory> WithResourcePolicy(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null)
    {
        parentFactory.ResourcePolicyFactory = new InnerTableResourcePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ResourcePolicyFactory);
    }

    public static CombinedResult<TableFactory, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification(this TableFactory parentFactory, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null)
    {
        parentFactory.TimeToLiveSpecificationFactory = new InnerTableTimeToLiveSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TimeToLiveSpecificationFactory);
    }

    public static CombinedResult<TableFactory, T1, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableAttributeDefinitionFactory> WithAttributeDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.AttributeDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAttributeDefinitions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableGlobalSecondaryIndexFactory> WithGlobalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.GlobalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithGlobalSecondaryIndexes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableKeySchemaFactory> WithKeySchema<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableKeySchemaFactory> WithKeySchema<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableKeySchemaFactory> WithKeySchema<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableKeySchemaFactory> WithKeySchema<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableKeySchemaFactory> WithKeySchema<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableKeySchemaFactory> WithKeySchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KeySchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKeySchema(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableLocalSecondaryIndexFactory> WithLocalSecondaryIndexes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.LocalSecondaryIndex> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLocalSecondaryIndexes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableOnDemandThroughputFactory> WithOnDemandThroughput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.OnDemandThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnDemandThroughput(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableSSESpecificationFactory> WithSSESpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableSSESpecificationFactory> WithSSESpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableSSESpecificationFactory> WithSSESpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.SSESpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSSESpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableKinesisStreamSpecificationFactory> WithKinesisStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.KinesisStreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableStreamSpecificationFactory> WithStreamSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.StreamSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStreamSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableContributorInsightsSpecificationFactory> WithContributorInsightsSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ContributorInsightsSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContributorInsightsSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableImportSourceSpecificationFactory> WithImportSourceSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ImportSourceSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithImportSourceSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTablePointInTimeRecoverySpecificationFactory> WithPointInTimeRecoverySpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.PointInTimeRecoverySpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPointInTimeRecoverySpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableProvisionedThroughputFactory> WithProvisionedThroughput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ProvisionedThroughput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProvisionedThroughput(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableResourcePolicyFactory> WithResourcePolicy<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithResourcePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableResourcePolicyFactory> WithResourcePolicy<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithResourcePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableResourcePolicyFactory> WithResourcePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.ResourcePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcePolicy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TableFactory, T1, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1>(this CombinedResult<TableFactory, T1> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1>(this CombinedResult<T1, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2>(this CombinedResult<TableFactory, T1, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2>(this CombinedResult<T1, TableFactory, T2> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2>(this CombinedResult<T1, T2, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<TableFactory, T1, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<T1, TableFactory, T2, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<T1, T2, TableFactory, T3> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TableFactory, T1, T2, T3, T4, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<TableFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TableFactory, T2, T3, T4, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, TableFactory, T2, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TableFactory, T3, T4, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, TableFactory, T3, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TableFactory, T4, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TableFactory, T4> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TableFactory, InnerTableTimeToLiveSpecificationFactory> WithTimeToLiveSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TableFactory> combinedResult, Action<Humidifier.DynamoDB.TableTypes.TimeToLiveSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTimeToLiveSpecification(combinedResult.T5, subFactoryAction));
}
