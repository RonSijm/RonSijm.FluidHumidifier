// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoTAnalytics;

public class InnerDatasetDatasetContentDeliveryRuleDestinationFactory(Action<Humidifier.IoTAnalytics.DatasetTypes.DatasetContentDeliveryRuleDestination> factoryAction = null) : SubResourceFactory<Humidifier.IoTAnalytics.DatasetTypes.DatasetContentDeliveryRuleDestination>
{

    internal InnerDatasetIotEventsDestinationConfigurationFactory IotEventsDestinationConfigurationFactory { get; set; }

    internal InnerDatasetS3DestinationConfigurationFactory S3DestinationConfigurationFactory { get; set; }

    protected override Humidifier.IoTAnalytics.DatasetTypes.DatasetContentDeliveryRuleDestination Create()
    {
        var datasetContentDeliveryRuleDestinationResult = CreateDatasetContentDeliveryRuleDestination();
        factoryAction?.Invoke(datasetContentDeliveryRuleDestinationResult);

        return datasetContentDeliveryRuleDestinationResult;
    }

    private Humidifier.IoTAnalytics.DatasetTypes.DatasetContentDeliveryRuleDestination CreateDatasetContentDeliveryRuleDestination()
    {
        var datasetContentDeliveryRuleDestinationResult = new Humidifier.IoTAnalytics.DatasetTypes.DatasetContentDeliveryRuleDestination();

        return datasetContentDeliveryRuleDestinationResult;
    }
    public override void CreateChildren(Humidifier.IoTAnalytics.DatasetTypes.DatasetContentDeliveryRuleDestination result)
    {
        base.CreateChildren(result);

        result.IotEventsDestinationConfiguration ??= IotEventsDestinationConfigurationFactory?.Build();
        result.S3DestinationConfiguration ??= S3DestinationConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerDatasetDatasetContentDeliveryRuleDestinationFactoryExtensions
{
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration(this InnerDatasetDatasetContentDeliveryRuleDestinationFactory parentFactory, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.IotEventsDestinationConfigurationFactory = new InnerDatasetIotEventsDestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IotEventsDestinationConfigurationFactory);
    }

    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration(this InnerDatasetDatasetContentDeliveryRuleDestinationFactory parentFactory, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.S3DestinationConfigurationFactory = new InnerDatasetS3DestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3DestinationConfigurationFactory);
    }

    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3, T4, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3, T4, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3, T4, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T4, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetIotEventsDestinationConfigurationFactory> WithIotEventsDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.IotEventsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIotEventsDestinationConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3, T4, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3, T4, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3, T4, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T4, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDatasetDatasetContentDeliveryRuleDestinationFactory, InnerDatasetS3DestinationConfigurationFactory> WithS3DestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDatasetDatasetContentDeliveryRuleDestinationFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatasetTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3DestinationConfiguration(combinedResult.T5, subFactoryAction));
}
