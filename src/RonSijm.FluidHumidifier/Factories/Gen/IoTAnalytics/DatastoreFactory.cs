// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IoTAnalytics;

public class DatastoreFactory(string resourceName = null, Action<Humidifier.IoTAnalytics.Datastore> factoryAction = null) : ResourceFactory<Humidifier.IoTAnalytics.Datastore>(resourceName)
{

    internal InnerDatastoreDatastoreStorageFactory DatastoreStorageFactory { get; set; }

    internal InnerDatastoreFileFormatConfigurationFactory FileFormatConfigurationFactory { get; set; }

    internal InnerDatastoreDatastorePartitionsFactory DatastorePartitionsFactory { get; set; }

    internal InnerDatastoreRetentionPeriodFactory RetentionPeriodFactory { get; set; }

    protected override Humidifier.IoTAnalytics.Datastore Create()
    {
        var datastoreResult = CreateDatastore();
        factoryAction?.Invoke(datastoreResult);

        return datastoreResult;
    }

    private Humidifier.IoTAnalytics.Datastore CreateDatastore()
    {
        var datastoreResult = new Humidifier.IoTAnalytics.Datastore
        {
            GivenName = InputResourceName,
        };

        return datastoreResult;
    }
    public override void CreateChildren(Humidifier.IoTAnalytics.Datastore result)
    {
        base.CreateChildren(result);

        result.DatastoreStorage ??= DatastoreStorageFactory?.Build();
        result.FileFormatConfiguration ??= FileFormatConfigurationFactory?.Build();
        result.DatastorePartitions ??= DatastorePartitionsFactory?.Build();
        result.RetentionPeriod ??= RetentionPeriodFactory?.Build();
    }

} // End Of Class

public static class DatastoreFactoryExtensions
{
    public static CombinedResult<DatastoreFactory, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage(this DatastoreFactory parentFactory, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null)
    {
        parentFactory.DatastoreStorageFactory = new InnerDatastoreDatastoreStorageFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DatastoreStorageFactory);
    }

    public static CombinedResult<DatastoreFactory, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration(this DatastoreFactory parentFactory, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null)
    {
        parentFactory.FileFormatConfigurationFactory = new InnerDatastoreFileFormatConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FileFormatConfigurationFactory);
    }

    public static CombinedResult<DatastoreFactory, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions(this DatastoreFactory parentFactory, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null)
    {
        parentFactory.DatastorePartitionsFactory = new InnerDatastoreDatastorePartitionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DatastorePartitionsFactory);
    }

    public static CombinedResult<DatastoreFactory, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod(this DatastoreFactory parentFactory, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null)
    {
        parentFactory.RetentionPeriodFactory = new InnerDatastoreRetentionPeriodFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RetentionPeriodFactory);
    }

    public static CombinedResult<DatastoreFactory, T1, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1>(this CombinedResult<DatastoreFactory, T1> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1>(this CombinedResult<T1, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2>(this CombinedResult<DatastoreFactory, T1, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2>(this CombinedResult<T1, DatastoreFactory, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2>(this CombinedResult<T1, T2, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3>(this CombinedResult<DatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3>(this CombinedResult<T1, DatastoreFactory, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3>(this CombinedResult<T1, T2, DatastoreFactory, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3>(this CombinedResult<T1, T2, T3, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, T4, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3, T4>(this CombinedResult<DatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, T4, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3, T4>(this CombinedResult<T1, DatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, T4, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, DatastoreFactory, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, T4, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DatastoreFactory, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DatastoreFactory, InnerDatastoreDatastoreStorageFactory> WithDatastoreStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastoreStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastoreStorage(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1>(this CombinedResult<DatastoreFactory, T1> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1>(this CombinedResult<T1, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2>(this CombinedResult<DatastoreFactory, T1, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2>(this CombinedResult<T1, DatastoreFactory, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2>(this CombinedResult<T1, T2, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3>(this CombinedResult<DatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3>(this CombinedResult<T1, DatastoreFactory, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, DatastoreFactory, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, T4, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3, T4>(this CombinedResult<DatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, T4, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, DatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, T4, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, DatastoreFactory, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, T4, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DatastoreFactory, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DatastoreFactory, InnerDatastoreFileFormatConfigurationFactory> WithFileFormatConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.FileFormatConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileFormatConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1>(this CombinedResult<DatastoreFactory, T1> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1>(this CombinedResult<T1, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2>(this CombinedResult<DatastoreFactory, T1, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2>(this CombinedResult<T1, DatastoreFactory, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2>(this CombinedResult<T1, T2, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3>(this CombinedResult<DatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3>(this CombinedResult<T1, DatastoreFactory, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3>(this CombinedResult<T1, T2, DatastoreFactory, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, T4, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3, T4>(this CombinedResult<DatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, T4, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3, T4>(this CombinedResult<T1, DatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, T4, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DatastoreFactory, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, T4, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DatastoreFactory, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DatastoreFactory, InnerDatastoreDatastorePartitionsFactory> WithDatastorePartitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.DatastorePartitions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDatastorePartitions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1>(this CombinedResult<DatastoreFactory, T1> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1>(this CombinedResult<T1, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2>(this CombinedResult<DatastoreFactory, T1, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2>(this CombinedResult<T1, DatastoreFactory, T2> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2>(this CombinedResult<T1, T2, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3>(this CombinedResult<DatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3>(this CombinedResult<T1, DatastoreFactory, T2, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3>(this CombinedResult<T1, T2, DatastoreFactory, T3> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3>(this CombinedResult<T1, T2, T3, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DatastoreFactory, T1, T2, T3, T4, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3, T4>(this CombinedResult<DatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DatastoreFactory, T2, T3, T4, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3, T4>(this CombinedResult<T1, DatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DatastoreFactory, T3, T4, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3, T4>(this CombinedResult<T1, T2, DatastoreFactory, T3, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DatastoreFactory, T4, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DatastoreFactory, T4> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DatastoreFactory, InnerDatastoreRetentionPeriodFactory> WithRetentionPeriod<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DatastoreFactory> combinedResult, Action<Humidifier.IoTAnalytics.DatastoreTypes.RetentionPeriod> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRetentionPeriod(combinedResult.T5, subFactoryAction));
}
