// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Deadline;

public class InnerFleetServiceManagedEc2FleetConfigurationFactory(Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2FleetConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.Deadline.FleetTypes.ServiceManagedEc2FleetConfiguration>
{

    internal InnerFleetServiceManagedEc2InstanceMarketOptionsFactory InstanceMarketOptionsFactory { get; set; }

    internal InnerFleetServiceManagedEc2InstanceCapabilitiesFactory InstanceCapabilitiesFactory { get; set; }

    protected override Humidifier.Deadline.FleetTypes.ServiceManagedEc2FleetConfiguration Create()
    {
        var serviceManagedEc2FleetConfigurationResult = CreateServiceManagedEc2FleetConfiguration();
        factoryAction?.Invoke(serviceManagedEc2FleetConfigurationResult);

        return serviceManagedEc2FleetConfigurationResult;
    }

    private Humidifier.Deadline.FleetTypes.ServiceManagedEc2FleetConfiguration CreateServiceManagedEc2FleetConfiguration()
    {
        var serviceManagedEc2FleetConfigurationResult = new Humidifier.Deadline.FleetTypes.ServiceManagedEc2FleetConfiguration();

        return serviceManagedEc2FleetConfigurationResult;
    }
    public override void CreateChildren(Humidifier.Deadline.FleetTypes.ServiceManagedEc2FleetConfiguration result)
    {
        base.CreateChildren(result);

        result.InstanceMarketOptions ??= InstanceMarketOptionsFactory?.Build();
        result.InstanceCapabilities ??= InstanceCapabilitiesFactory?.Build();
    }

} // End Of Class

public static class InnerFleetServiceManagedEc2FleetConfigurationFactoryExtensions
{
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions(this InnerFleetServiceManagedEc2FleetConfigurationFactory parentFactory, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null)
    {
        parentFactory.InstanceMarketOptionsFactory = new InnerFleetServiceManagedEc2InstanceMarketOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InstanceMarketOptionsFactory);
    }

    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities(this InnerFleetServiceManagedEc2FleetConfigurationFactory parentFactory, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null)
    {
        parentFactory.InstanceCapabilitiesFactory = new InnerFleetServiceManagedEc2InstanceCapabilitiesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InstanceCapabilitiesFactory);
    }

    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3, T4>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3, T4, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3, T4>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3, T4, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory, T4, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceMarketOptionsFactory> WithInstanceMarketOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceMarketOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMarketOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3, T4>(this CombinedResult<InnerFleetServiceManagedEc2FleetConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3, T4>(this CombinedResult<T1, InnerFleetServiceManagedEc2FleetConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2FleetConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2FleetConfigurationFactory, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2FleetConfigurationFactory, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> WithInstanceCapabilities<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2FleetConfigurationFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceCapabilities(combinedResult.T5, subFactoryAction));
}
