// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Deadline;

public class InnerFleetServiceManagedEc2InstanceCapabilitiesFactory(Action<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities> factoryAction = null) : SubResourceFactory<Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities>
{

    internal InnerFleetVCpuCountRangeFactory VCpuCountFactory { get; set; }

    internal InnerFleetMemoryMiBRangeFactory MemoryMiBFactory { get; set; }

    internal InnerFleetEc2EbsVolumeFactory RootEbsVolumeFactory { get; set; }

    protected override Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities Create()
    {
        var serviceManagedEc2InstanceCapabilitiesResult = CreateServiceManagedEc2InstanceCapabilities();
        factoryAction?.Invoke(serviceManagedEc2InstanceCapabilitiesResult);

        return serviceManagedEc2InstanceCapabilitiesResult;
    }

    private Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities CreateServiceManagedEc2InstanceCapabilities()
    {
        var serviceManagedEc2InstanceCapabilitiesResult = new Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities();

        return serviceManagedEc2InstanceCapabilitiesResult;
    }
    public override void CreateChildren(Humidifier.Deadline.FleetTypes.ServiceManagedEc2InstanceCapabilities result)
    {
        base.CreateChildren(result);

        result.VCpuCount ??= VCpuCountFactory?.Build();
        result.MemoryMiB ??= MemoryMiBFactory?.Build();
        result.RootEbsVolume ??= RootEbsVolumeFactory?.Build();
    }

} // End Of Class

public static class InnerFleetServiceManagedEc2InstanceCapabilitiesFactoryExtensions
{
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetVCpuCountRangeFactory> WithVCpuCount(this InnerFleetServiceManagedEc2InstanceCapabilitiesFactory parentFactory, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null)
    {
        parentFactory.VCpuCountFactory = new InnerFleetVCpuCountRangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VCpuCountFactory);
    }

    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB(this InnerFleetServiceManagedEc2InstanceCapabilitiesFactory parentFactory, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null)
    {
        parentFactory.MemoryMiBFactory = new InnerFleetMemoryMiBRangeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MemoryMiBFactory);
    }

    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume(this InnerFleetServiceManagedEc2InstanceCapabilitiesFactory parentFactory, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null)
    {
        parentFactory.RootEbsVolumeFactory = new InnerFleetEc2EbsVolumeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RootEbsVolumeFactory);
    }

    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, WithVCpuCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, WithVCpuCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, T4, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3, T4>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, T4, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3, T4>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, T4, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T4, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetVCpuCountRangeFactory> WithVCpuCount<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.VCpuCountRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVCpuCount(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, WithMemoryMiB(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, WithMemoryMiB(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, T4, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3, T4>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, T4, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3, T4>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, T4, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T4, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetMemoryMiBRangeFactory> WithMemoryMiB<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.MemoryMiBRange> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMemoryMiB(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, T4, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3, T4>(this CombinedResult<InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, T4, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3, T4>(this CombinedResult<T1, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T2, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, T4, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T3, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T4, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, T4> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory, InnerFleetEc2EbsVolumeFactory> WithRootEbsVolume<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerFleetServiceManagedEc2InstanceCapabilitiesFactory> combinedResult, Action<Humidifier.Deadline.FleetTypes.Ec2EbsVolume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRootEbsVolume(combinedResult.T5, subFactoryAction));
}
