// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.MediaLive;

public class ChannelFactory(string resourceName = null, Action<Humidifier.MediaLive.Channel> factoryAction = null) : ResourceFactory<Humidifier.MediaLive.Channel>(resourceName)
{

    internal List<InnerChannelInputAttachmentFactory> InputAttachmentsFactories { get; set; } = [];

    internal List<InnerChannelOutputDestinationFactory> DestinationsFactories { get; set; } = [];

    internal InnerChannelInputSpecificationFactory InputSpecificationFactory { get; set; }

    internal InnerChannelEncoderSettingsFactory EncoderSettingsFactory { get; set; }

    internal InnerChannelVpcOutputSettingsFactory VpcFactory { get; set; }

    internal InnerChannelCdiInputSpecificationFactory CdiInputSpecificationFactory { get; set; }

    internal InnerChannelMaintenanceCreateSettingsFactory MaintenanceFactory { get; set; }

    protected override Humidifier.MediaLive.Channel Create()
    {
        var channelResult = CreateChannel();
        factoryAction?.Invoke(channelResult);

        return channelResult;
    }

    private Humidifier.MediaLive.Channel CreateChannel()
    {
        var channelResult = new Humidifier.MediaLive.Channel
        {
            GivenName = InputResourceName,
        };

        return channelResult;
    }
    public override void CreateChildren(Humidifier.MediaLive.Channel result)
    {
        base.CreateChildren(result);

        result.InputAttachments = InputAttachmentsFactories.Any() ? InputAttachmentsFactories.Select(x => x.Build()).ToList() : null;
        result.Destinations = DestinationsFactories.Any() ? DestinationsFactories.Select(x => x.Build()).ToList() : null;
        result.InputSpecification ??= InputSpecificationFactory?.Build();
        result.EncoderSettings ??= EncoderSettingsFactory?.Build();
        result.Vpc ??= VpcFactory?.Build();
        result.CdiInputSpecification ??= CdiInputSpecificationFactory?.Build();
        result.Maintenance ??= MaintenanceFactory?.Build();
    }

} // End Of Class

public static class ChannelFactoryExtensions
{
    public static CombinedResult<ChannelFactory, InnerChannelInputAttachmentFactory> WithInputAttachments(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null)
    {
        var factory = new InnerChannelInputAttachmentFactory(subFactoryAction);
        parentFactory.InputAttachmentsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ChannelFactory, InnerChannelOutputDestinationFactory> WithDestinations(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null)
    {
        var factory = new InnerChannelOutputDestinationFactory(subFactoryAction);
        parentFactory.DestinationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ChannelFactory, InnerChannelInputSpecificationFactory> WithInputSpecification(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null)
    {
        parentFactory.InputSpecificationFactory = new InnerChannelInputSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InputSpecificationFactory);
    }

    public static CombinedResult<ChannelFactory, InnerChannelEncoderSettingsFactory> WithEncoderSettings(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null)
    {
        parentFactory.EncoderSettingsFactory = new InnerChannelEncoderSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EncoderSettingsFactory);
    }

    public static CombinedResult<ChannelFactory, InnerChannelVpcOutputSettingsFactory> WithVpc(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null)
    {
        parentFactory.VpcFactory = new InnerChannelVpcOutputSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VpcFactory);
    }

    public static CombinedResult<ChannelFactory, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null)
    {
        parentFactory.CdiInputSpecificationFactory = new InnerChannelCdiInputSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CdiInputSpecificationFactory);
    }

    public static CombinedResult<ChannelFactory, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance(this ChannelFactory parentFactory, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null)
    {
        parentFactory.MaintenanceFactory = new InnerChannelMaintenanceCreateSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MaintenanceFactory);
    }

    public static CombinedResult<ChannelFactory, T1, InnerChannelInputAttachmentFactory> WithInputAttachments<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputAttachments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelInputAttachmentFactory> WithInputAttachments<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputAttachments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelInputAttachmentFactory> WithInputAttachments<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputAttachment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputAttachments(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, InnerChannelOutputDestinationFactory> WithDestinations<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelOutputDestinationFactory> WithDestinations<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelOutputDestinationFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.OutputDestination> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, InnerChannelInputSpecificationFactory> WithInputSpecification<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelInputSpecificationFactory> WithInputSpecification<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelInputSpecificationFactory> WithInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.InputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncoderSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncoderSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelEncoderSettingsFactory> WithEncoderSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.EncoderSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncoderSettings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, InnerChannelVpcOutputSettingsFactory> WithVpc<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelVpcOutputSettingsFactory> WithVpc<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelVpcOutputSettingsFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.VpcOutputSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelCdiInputSpecificationFactory> WithCdiInputSpecification<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.CdiInputSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCdiInputSpecification(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1>(this CombinedResult<ChannelFactory, T1> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1>(this CombinedResult<T1, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2>(this CombinedResult<ChannelFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2>(this CombinedResult<T1, ChannelFactory, T2> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2>(this CombinedResult<T1, T2, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<ChannelFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<T1, ChannelFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<T1, T2, ChannelFactory, T3> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3>(this CombinedResult<T1, T2, T3, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ChannelFactory, T1, T2, T3, T4, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<ChannelFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ChannelFactory, T2, T3, T4, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, ChannelFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ChannelFactory, T3, T4, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, T2, ChannelFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ChannelFactory, T4, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ChannelFactory, T4> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ChannelFactory, InnerChannelMaintenanceCreateSettingsFactory> WithMaintenance<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ChannelFactory> combinedResult, Action<Humidifier.MediaLive.ChannelTypes.MaintenanceCreateSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMaintenance(combinedResult.T5, subFactoryAction));
}
