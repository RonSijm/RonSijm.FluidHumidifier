// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.MediaLive;

public class InputFactory(string resourceName = null, Action<Humidifier.MediaLive.Input> factoryAction = null) : ResourceFactory<Humidifier.MediaLive.Input>(resourceName)
{

    internal List<InnerInputInputDestinationRequestFactory> DestinationsFactories { get; set; } = [];

    internal List<InnerInputMediaConnectFlowRequestFactory> MediaConnectFlowsFactories { get; set; } = [];

    internal List<InnerInputInputDeviceSettingsFactory> InputDevicesFactories { get; set; } = [];

    internal List<InnerInputInputSourceRequestFactory> SourcesFactories { get; set; } = [];

    internal InnerInputSrtSettingsRequestFactory SrtSettingsFactory { get; set; }

    internal InnerInputInputVpcRequestFactory VpcFactory { get; set; }

    protected override Humidifier.MediaLive.Input Create()
    {
        var inputResult = CreateInput();
        factoryAction?.Invoke(inputResult);

        return inputResult;
    }

    private Humidifier.MediaLive.Input CreateInput()
    {
        var inputResult = new Humidifier.MediaLive.Input
        {
            GivenName = InputResourceName,
        };

        return inputResult;
    }
    public override void CreateChildren(Humidifier.MediaLive.Input result)
    {
        base.CreateChildren(result);

        result.Destinations = DestinationsFactories.Any() ? DestinationsFactories.Select(x => x.Build()).ToList() : null;
        result.MediaConnectFlows = MediaConnectFlowsFactories.Any() ? MediaConnectFlowsFactories.Select(x => x.Build()).ToList() : null;
        result.InputDevices = InputDevicesFactories.Any() ? InputDevicesFactories.Select(x => x.Build()).ToList() : null;
        result.Sources = SourcesFactories.Any() ? SourcesFactories.Select(x => x.Build()).ToList() : null;
        result.SrtSettings ??= SrtSettingsFactory?.Build();
        result.Vpc ??= VpcFactory?.Build();
    }

} // End Of Class

public static class InputFactoryExtensions
{
    public static CombinedResult<InputFactory, InnerInputInputDestinationRequestFactory> WithDestinations(this InputFactory parentFactory, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null)
    {
        var factory = new InnerInputInputDestinationRequestFactory(subFactoryAction);
        parentFactory.DestinationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InputFactory, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows(this InputFactory parentFactory, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null)
    {
        var factory = new InnerInputMediaConnectFlowRequestFactory(subFactoryAction);
        parentFactory.MediaConnectFlowsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InputFactory, InnerInputInputDeviceSettingsFactory> WithInputDevices(this InputFactory parentFactory, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null)
    {
        var factory = new InnerInputInputDeviceSettingsFactory(subFactoryAction);
        parentFactory.InputDevicesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InputFactory, InnerInputInputSourceRequestFactory> WithSources(this InputFactory parentFactory, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null)
    {
        var factory = new InnerInputInputSourceRequestFactory(subFactoryAction);
        parentFactory.SourcesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<InputFactory, InnerInputSrtSettingsRequestFactory> WithSrtSettings(this InputFactory parentFactory, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null)
    {
        parentFactory.SrtSettingsFactory = new InnerInputSrtSettingsRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SrtSettingsFactory);
    }

    public static CombinedResult<InputFactory, InnerInputInputVpcRequestFactory> WithVpc(this InputFactory parentFactory, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null)
    {
        parentFactory.VpcFactory = new InnerInputInputVpcRequestFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VpcFactory);
    }

    public static CombinedResult<InputFactory, T1, InnerInputInputDestinationRequestFactory> WithDestinations<T1>(this CombinedResult<InputFactory, T1> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, InnerInputInputDestinationRequestFactory> WithDestinations<T1>(this CombinedResult<T1, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2>(this CombinedResult<InputFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2>(this CombinedResult<T1, InputFactory, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2>(this CombinedResult<T1, T2, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3>(this CombinedResult<InputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, InputFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, T2, InputFactory, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3>(this CombinedResult<T1, T2, T3, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, T4, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<InputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, T4, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, InputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, T4, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, InputFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, T4, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InputFactory, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InputFactory, InnerInputInputDestinationRequestFactory> WithDestinations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDestinationRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InputFactory, T1, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1>(this CombinedResult<InputFactory, T1> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1>(this CombinedResult<T1, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2>(this CombinedResult<InputFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2>(this CombinedResult<T1, InputFactory, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2>(this CombinedResult<T1, T2, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3>(this CombinedResult<InputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3>(this CombinedResult<T1, InputFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3>(this CombinedResult<T1, T2, InputFactory, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3>(this CombinedResult<T1, T2, T3, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, T4, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3, T4>(this CombinedResult<InputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, T4, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3, T4>(this CombinedResult<T1, InputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, T4, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3, T4>(this CombinedResult<T1, T2, InputFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, T4, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InputFactory, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InputFactory, InnerInputMediaConnectFlowRequestFactory> WithMediaConnectFlows<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.MediaConnectFlowRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMediaConnectFlows(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InputFactory, T1, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1>(this CombinedResult<InputFactory, T1> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputDevices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1>(this CombinedResult<T1, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithInputDevices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2>(this CombinedResult<InputFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2>(this CombinedResult<T1, InputFactory, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2>(this CombinedResult<T1, T2, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3>(this CombinedResult<InputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3>(this CombinedResult<T1, InputFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3>(this CombinedResult<T1, T2, InputFactory, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3>(this CombinedResult<T1, T2, T3, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, T4, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3, T4>(this CombinedResult<InputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, T4, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3, T4>(this CombinedResult<T1, InputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, T4, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3, T4>(this CombinedResult<T1, T2, InputFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, T4, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InputFactory, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InputFactory, InnerInputInputDeviceSettingsFactory> WithInputDevices<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputDeviceSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInputDevices(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InputFactory, T1, InnerInputInputSourceRequestFactory> WithSources<T1>(this CombinedResult<InputFactory, T1> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithSources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, InnerInputInputSourceRequestFactory> WithSources<T1>(this CombinedResult<T1, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithSources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, InnerInputInputSourceRequestFactory> WithSources<T1, T2>(this CombinedResult<InputFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, InnerInputInputSourceRequestFactory> WithSources<T1, T2>(this CombinedResult<T1, InputFactory, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, InnerInputInputSourceRequestFactory> WithSources<T1, T2>(this CombinedResult<T1, T2, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3>(this CombinedResult<InputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3>(this CombinedResult<T1, InputFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3>(this CombinedResult<T1, T2, InputFactory, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3>(this CombinedResult<T1, T2, T3, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, T4, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3, T4>(this CombinedResult<InputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, T4, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3, T4>(this CombinedResult<T1, InputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, T4, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3, T4>(this CombinedResult<T1, T2, InputFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, T4, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InputFactory, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InputFactory, InnerInputInputSourceRequestFactory> WithSources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputSourceRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSources(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InputFactory, T1, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1>(this CombinedResult<InputFactory, T1> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithSrtSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1>(this CombinedResult<T1, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithSrtSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2>(this CombinedResult<InputFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2>(this CombinedResult<T1, InputFactory, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2>(this CombinedResult<T1, T2, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3>(this CombinedResult<InputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3>(this CombinedResult<T1, InputFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3>(this CombinedResult<T1, T2, InputFactory, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, T4, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3, T4>(this CombinedResult<InputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, T4, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3, T4>(this CombinedResult<T1, InputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, T4, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, InputFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, T4, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InputFactory, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InputFactory, InnerInputSrtSettingsRequestFactory> WithSrtSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.SrtSettingsRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSrtSettings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InputFactory, T1, InnerInputInputVpcRequestFactory> WithVpc<T1>(this CombinedResult<InputFactory, T1> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, InnerInputInputVpcRequestFactory> WithVpc<T1>(this CombinedResult<T1, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, InnerInputInputVpcRequestFactory> WithVpc<T1, T2>(this CombinedResult<InputFactory, T1, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, InnerInputInputVpcRequestFactory> WithVpc<T1, T2>(this CombinedResult<T1, InputFactory, T2> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, InnerInputInputVpcRequestFactory> WithVpc<T1, T2>(this CombinedResult<T1, T2, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3>(this CombinedResult<InputFactory, T1, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3>(this CombinedResult<T1, InputFactory, T2, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3>(this CombinedResult<T1, T2, InputFactory, T3> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3>(this CombinedResult<T1, T2, T3, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InputFactory, T1, T2, T3, T4, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<InputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InputFactory, T2, T3, T4, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, InputFactory, T2, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InputFactory, T3, T4, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, T2, InputFactory, T3, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InputFactory, T4, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InputFactory, T4> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InputFactory, InnerInputInputVpcRequestFactory> WithVpc<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InputFactory> combinedResult, Action<Humidifier.MediaLive.InputTypes.InputVpcRequest> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpc(combinedResult.T5, subFactoryAction));
}
