// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisAnalyticsV2;

public class InnerApplicationFlinkApplicationConfigurationFactory(Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.FlinkApplicationConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.KinesisAnalyticsV2.ApplicationTypes.FlinkApplicationConfiguration>
{

    internal InnerApplicationCheckpointConfigurationFactory CheckpointConfigurationFactory { get; set; }

    internal InnerApplicationParallelismConfigurationFactory ParallelismConfigurationFactory { get; set; }

    internal InnerApplicationMonitoringConfigurationFactory MonitoringConfigurationFactory { get; set; }

    protected override Humidifier.KinesisAnalyticsV2.ApplicationTypes.FlinkApplicationConfiguration Create()
    {
        var flinkApplicationConfigurationResult = CreateFlinkApplicationConfiguration();
        factoryAction?.Invoke(flinkApplicationConfigurationResult);

        return flinkApplicationConfigurationResult;
    }

    private Humidifier.KinesisAnalyticsV2.ApplicationTypes.FlinkApplicationConfiguration CreateFlinkApplicationConfiguration()
    {
        var flinkApplicationConfigurationResult = new Humidifier.KinesisAnalyticsV2.ApplicationTypes.FlinkApplicationConfiguration();

        return flinkApplicationConfigurationResult;
    }
    public override void CreateChildren(Humidifier.KinesisAnalyticsV2.ApplicationTypes.FlinkApplicationConfiguration result)
    {
        base.CreateChildren(result);

        result.CheckpointConfiguration ??= CheckpointConfigurationFactory?.Build();
        result.ParallelismConfiguration ??= ParallelismConfigurationFactory?.Build();
        result.MonitoringConfiguration ??= MonitoringConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerApplicationFlinkApplicationConfigurationFactoryExtensions
{
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration(this InnerApplicationFlinkApplicationConfigurationFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null)
    {
        parentFactory.CheckpointConfigurationFactory = new InnerApplicationCheckpointConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CheckpointConfigurationFactory);
    }

    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration(this InnerApplicationFlinkApplicationConfigurationFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null)
    {
        parentFactory.ParallelismConfigurationFactory = new InnerApplicationParallelismConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ParallelismConfigurationFactory);
    }

    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration(this InnerApplicationFlinkApplicationConfigurationFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null)
    {
        parentFactory.MonitoringConfigurationFactory = new InnerApplicationMonitoringConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MonitoringConfigurationFactory);
    }

    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, T4, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, T4, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, T4, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, T4, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationCheckpointConfigurationFactory> WithCheckpointConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.CheckpointConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCheckpointConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, T4, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, T4, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, T4, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, T4, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationParallelismConfigurationFactory> WithParallelismConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.ParallelismConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParallelismConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerApplicationFlinkApplicationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationFlinkApplicationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationFlinkApplicationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, T4, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationFlinkApplicationConfigurationFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationFlinkApplicationConfigurationFactory, InnerApplicationMonitoringConfigurationFactory> WithMonitoringConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationFlinkApplicationConfigurationFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationTypes.MonitoringConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMonitoringConfiguration(combinedResult.T5, subFactoryAction));
}
