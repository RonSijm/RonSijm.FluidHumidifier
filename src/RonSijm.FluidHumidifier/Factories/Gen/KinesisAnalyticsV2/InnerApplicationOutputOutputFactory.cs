// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.KinesisAnalyticsV2;

public class InnerApplicationOutputOutputFactory(Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.Output> factoryAction = null) : SubResourceFactory<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.Output>
{

    internal InnerApplicationOutputDestinationSchemaFactory DestinationSchemaFactory { get; set; }

    internal InnerApplicationOutputLambdaOutputFactory LambdaOutputFactory { get; set; }

    internal InnerApplicationOutputKinesisFirehoseOutputFactory KinesisFirehoseOutputFactory { get; set; }

    internal InnerApplicationOutputKinesisStreamsOutputFactory KinesisStreamsOutputFactory { get; set; }

    protected override Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.Output Create()
    {
        var outputResult = CreateOutput();
        factoryAction?.Invoke(outputResult);

        return outputResult;
    }

    private Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.Output CreateOutput()
    {
        var outputResult = new Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.Output();

        return outputResult;
    }
    public override void CreateChildren(Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.Output result)
    {
        base.CreateChildren(result);

        result.DestinationSchema ??= DestinationSchemaFactory?.Build();
        result.LambdaOutput ??= LambdaOutputFactory?.Build();
        result.KinesisFirehoseOutput ??= KinesisFirehoseOutputFactory?.Build();
        result.KinesisStreamsOutput ??= KinesisStreamsOutputFactory?.Build();
    }

} // End Of Class

public static class InnerApplicationOutputOutputFactoryExtensions
{
    public static CombinedResult<InnerApplicationOutputOutputFactory, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema(this InnerApplicationOutputOutputFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null)
    {
        parentFactory.DestinationSchemaFactory = new InnerApplicationOutputDestinationSchemaFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DestinationSchemaFactory);
    }

    public static CombinedResult<InnerApplicationOutputOutputFactory, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput(this InnerApplicationOutputOutputFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null)
    {
        parentFactory.LambdaOutputFactory = new InnerApplicationOutputLambdaOutputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LambdaOutputFactory);
    }

    public static CombinedResult<InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput(this InnerApplicationOutputOutputFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null)
    {
        parentFactory.KinesisFirehoseOutputFactory = new InnerApplicationOutputKinesisFirehoseOutputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisFirehoseOutputFactory);
    }

    public static CombinedResult<InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput(this InnerApplicationOutputOutputFactory parentFactory, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null)
    {
        parentFactory.KinesisStreamsOutputFactory = new InnerApplicationOutputKinesisStreamsOutputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KinesisStreamsOutputFactory);
    }

    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1>(this CombinedResult<InnerApplicationOutputOutputFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinationSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1>(this CombinedResult<T1, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinationSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3, T4>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory, InnerApplicationOutputDestinationSchemaFactory> WithDestinationSchema<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.DestinationSchema> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationSchema(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1>(this CombinedResult<InnerApplicationOutputOutputFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, WithLambdaOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1>(this CombinedResult<T1, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, WithLambdaOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3, T4>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory, InnerApplicationOutputLambdaOutputFactory> WithLambdaOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.LambdaOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLambdaOutput(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1>(this CombinedResult<InnerApplicationOutputOutputFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1>(this CombinedResult<T1, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3, T4>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisFirehoseOutputFactory> WithKinesisFirehoseOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisFirehoseOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisFirehoseOutput(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1>(this CombinedResult<InnerApplicationOutputOutputFactory, T1> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1>(this CombinedResult<T1, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3, T4>(this CombinedResult<InnerApplicationOutputOutputFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3, T4>(this CombinedResult<T1, InnerApplicationOutputOutputFactory, T2, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerApplicationOutputOutputFactory, T3, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerApplicationOutputOutputFactory, T4> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory, InnerApplicationOutputKinesisStreamsOutputFactory> WithKinesisStreamsOutput<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerApplicationOutputOutputFactory> combinedResult, Action<Humidifier.KinesisAnalyticsV2.ApplicationOutputTypes.KinesisStreamsOutput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKinesisStreamsOutput(combinedResult.T5, subFactoryAction));
}
