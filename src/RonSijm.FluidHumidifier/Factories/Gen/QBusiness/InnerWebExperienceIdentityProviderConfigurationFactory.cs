// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.QBusiness;

public class InnerWebExperienceIdentityProviderConfigurationFactory(Action<Humidifier.QBusiness.WebExperienceTypes.IdentityProviderConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.QBusiness.WebExperienceTypes.IdentityProviderConfiguration>
{

    internal InnerWebExperienceOpenIDConnectProviderConfigurationFactory OpenIDConnectConfigurationFactory { get; set; }

    internal InnerWebExperienceSamlProviderConfigurationFactory SamlConfigurationFactory { get; set; }

    protected override Humidifier.QBusiness.WebExperienceTypes.IdentityProviderConfiguration Create()
    {
        var identityProviderConfigurationResult = CreateIdentityProviderConfiguration();
        factoryAction?.Invoke(identityProviderConfigurationResult);

        return identityProviderConfigurationResult;
    }

    private Humidifier.QBusiness.WebExperienceTypes.IdentityProviderConfiguration CreateIdentityProviderConfiguration()
    {
        var identityProviderConfigurationResult = new Humidifier.QBusiness.WebExperienceTypes.IdentityProviderConfiguration();

        return identityProviderConfigurationResult;
    }
    public override void CreateChildren(Humidifier.QBusiness.WebExperienceTypes.IdentityProviderConfiguration result)
    {
        base.CreateChildren(result);

        result.OpenIDConnectConfiguration ??= OpenIDConnectConfigurationFactory?.Build();
        result.SamlConfiguration ??= SamlConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerWebExperienceIdentityProviderConfigurationFactoryExtensions
{
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration(this InnerWebExperienceIdentityProviderConfigurationFactory parentFactory, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null)
    {
        parentFactory.OpenIDConnectConfigurationFactory = new InnerWebExperienceOpenIDConnectProviderConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OpenIDConnectConfigurationFactory);
    }

    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration(this InnerWebExperienceIdentityProviderConfigurationFactory parentFactory, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null)
    {
        parentFactory.SamlConfigurationFactory = new InnerWebExperienceSamlProviderConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SamlConfigurationFactory);
    }

    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3, T4, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3, T4, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3, T4, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory, T4, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceOpenIDConnectProviderConfigurationFactory> WithOpenIDConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.OpenIDConnectProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOpenIDConnectConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3, T4, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerWebExperienceIdentityProviderConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3, T4, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerWebExperienceIdentityProviderConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3, T4, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerWebExperienceIdentityProviderConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory, T4, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerWebExperienceIdentityProviderConfigurationFactory, T4> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerWebExperienceIdentityProviderConfigurationFactory, InnerWebExperienceSamlProviderConfigurationFactory> WithSamlConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerWebExperienceIdentityProviderConfigurationFactory> combinedResult, Action<Humidifier.QBusiness.WebExperienceTypes.SamlProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSamlConfiguration(combinedResult.T5, subFactoryAction));
}
