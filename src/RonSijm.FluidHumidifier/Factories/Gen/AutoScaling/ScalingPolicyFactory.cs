// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.AutoScaling;

public class ScalingPolicyFactory(string resourceName = null, Action<Humidifier.AutoScaling.ScalingPolicy> factoryAction = null) : ResourceFactory<Humidifier.AutoScaling.ScalingPolicy>(resourceName)
{

    internal List<InnerScalingPolicyStepAdjustmentFactory> StepAdjustmentsFactories { get; set; } = [];

    internal InnerScalingPolicyPredictiveScalingConfigurationFactory PredictiveScalingConfigurationFactory { get; set; }

    internal InnerScalingPolicyTargetTrackingConfigurationFactory TargetTrackingConfigurationFactory { get; set; }

    protected override Humidifier.AutoScaling.ScalingPolicy Create()
    {
        var scalingPolicyResult = CreateScalingPolicy();
        factoryAction?.Invoke(scalingPolicyResult);

        return scalingPolicyResult;
    }

    private Humidifier.AutoScaling.ScalingPolicy CreateScalingPolicy()
    {
        var scalingPolicyResult = new Humidifier.AutoScaling.ScalingPolicy
        {
            GivenName = InputResourceName,
        };

        return scalingPolicyResult;
    }
    public override void CreateChildren(Humidifier.AutoScaling.ScalingPolicy result)
    {
        base.CreateChildren(result);

        result.StepAdjustments = StepAdjustmentsFactories.Any() ? StepAdjustmentsFactories.Select(x => x.Build()).ToList() : null;
        result.PredictiveScalingConfiguration ??= PredictiveScalingConfigurationFactory?.Build();
        result.TargetTrackingConfiguration ??= TargetTrackingConfigurationFactory?.Build();
    }

} // End Of Class

public static class ScalingPolicyFactoryExtensions
{
    public static CombinedResult<ScalingPolicyFactory, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments(this ScalingPolicyFactory parentFactory, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null)
    {
        var factory = new InnerScalingPolicyStepAdjustmentFactory(subFactoryAction);
        parentFactory.StepAdjustmentsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ScalingPolicyFactory, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration(this ScalingPolicyFactory parentFactory, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null)
    {
        parentFactory.PredictiveScalingConfigurationFactory = new InnerScalingPolicyPredictiveScalingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PredictiveScalingConfigurationFactory);
    }

    public static CombinedResult<ScalingPolicyFactory, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration(this ScalingPolicyFactory parentFactory, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null)
    {
        parentFactory.TargetTrackingConfigurationFactory = new InnerScalingPolicyTargetTrackingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TargetTrackingConfigurationFactory);
    }

    public static CombinedResult<ScalingPolicyFactory, T1, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1>(this CombinedResult<ScalingPolicyFactory, T1> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, WithStepAdjustments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1>(this CombinedResult<T1, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, WithStepAdjustments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2>(this CombinedResult<ScalingPolicyFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2>(this CombinedResult<T1, ScalingPolicyFactory, T2> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2>(this CombinedResult<T1, T2, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3, T4>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3, T4>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3, T4>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory, InnerScalingPolicyStepAdjustmentFactory> WithStepAdjustments<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.StepAdjustment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithStepAdjustments(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1>(this CombinedResult<ScalingPolicyFactory, T1> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1>(this CombinedResult<T1, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2>(this CombinedResult<ScalingPolicyFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2>(this CombinedResult<T1, ScalingPolicyFactory, T2> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2>(this CombinedResult<T1, T2, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3, T4>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory, InnerScalingPolicyPredictiveScalingConfigurationFactory> WithPredictiveScalingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.PredictiveScalingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPredictiveScalingConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1>(this CombinedResult<ScalingPolicyFactory, T1> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1>(this CombinedResult<T1, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2>(this CombinedResult<ScalingPolicyFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2>(this CombinedResult<T1, ScalingPolicyFactory, T2> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2>(this CombinedResult<T1, T2, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3, T4>(this CombinedResult<ScalingPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ScalingPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ScalingPolicyFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ScalingPolicyFactory, T4> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory, InnerScalingPolicyTargetTrackingConfigurationFactory> WithTargetTrackingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ScalingPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.ScalingPolicyTypes.TargetTrackingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTargetTrackingConfiguration(combinedResult.T5, subFactoryAction));
}
