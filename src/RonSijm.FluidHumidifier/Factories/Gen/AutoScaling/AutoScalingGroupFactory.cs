// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.AutoScaling;

public class AutoScalingGroupFactory(string resourceName = null, Action<Humidifier.AutoScaling.AutoScalingGroup> factoryAction = null) : ResourceFactory<Humidifier.AutoScaling.AutoScalingGroup>(resourceName)
{

    internal List<InnerAutoScalingGroupLifecycleHookSpecificationFactory> LifecycleHookSpecificationListFactories { get; set; } = [];

    internal List<InnerAutoScalingGroupNotificationConfigurationFactory> NotificationConfigurationsFactories { get; set; } = [];

    internal List<InnerAutoScalingGroupTagPropertyFactory> TagsFactories { get; set; } = [];

    internal List<InnerAutoScalingGroupMetricsCollectionFactory> MetricsCollectionFactories { get; set; } = [];

    internal InnerAutoScalingGroupLaunchTemplateSpecificationFactory LaunchTemplateFactory { get; set; }

    internal InnerAutoScalingGroupMixedInstancesPolicyFactory MixedInstancesPolicyFactory { get; set; }

    internal InnerAutoScalingGroupInstanceMaintenancePolicyFactory InstanceMaintenancePolicyFactory { get; set; }

    protected override Humidifier.AutoScaling.AutoScalingGroup Create()
    {
        var autoScalingGroupResult = CreateAutoScalingGroup();
        factoryAction?.Invoke(autoScalingGroupResult);

        return autoScalingGroupResult;
    }

    private Humidifier.AutoScaling.AutoScalingGroup CreateAutoScalingGroup()
    {
        var autoScalingGroupResult = new Humidifier.AutoScaling.AutoScalingGroup
        {
            GivenName = InputResourceName,
        };

        return autoScalingGroupResult;
    }
    public override void CreateChildren(Humidifier.AutoScaling.AutoScalingGroup result)
    {
        base.CreateChildren(result);

        result.LifecycleHookSpecificationList = LifecycleHookSpecificationListFactories.Any() ? LifecycleHookSpecificationListFactories.Select(x => x.Build()).ToList() : null;
        result.NotificationConfigurations = NotificationConfigurationsFactories.Any() ? NotificationConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.Tags = TagsFactories.Any() ? TagsFactories.Select(x => x.Build()).ToList() : null;
        result.MetricsCollection = MetricsCollectionFactories.Any() ? MetricsCollectionFactories.Select(x => x.Build()).ToList() : null;
        result.LaunchTemplate ??= LaunchTemplateFactory?.Build();
        result.MixedInstancesPolicy ??= MixedInstancesPolicyFactory?.Build();
        result.InstanceMaintenancePolicy ??= InstanceMaintenancePolicyFactory?.Build();
    }

} // End Of Class

public static class AutoScalingGroupFactoryExtensions
{
    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null)
    {
        var factory = new InnerAutoScalingGroupLifecycleHookSpecificationFactory(subFactoryAction);
        parentFactory.LifecycleHookSpecificationListFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null)
    {
        var factory = new InnerAutoScalingGroupNotificationConfigurationFactory(subFactoryAction);
        parentFactory.NotificationConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupTagPropertyFactory> WithTags(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null)
    {
        var factory = new InnerAutoScalingGroupTagPropertyFactory(subFactoryAction);
        parentFactory.TagsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null)
    {
        var factory = new InnerAutoScalingGroupMetricsCollectionFactory(subFactoryAction);
        parentFactory.MetricsCollectionFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null)
    {
        parentFactory.LaunchTemplateFactory = new InnerAutoScalingGroupLaunchTemplateSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LaunchTemplateFactory);
    }

    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null)
    {
        parentFactory.MixedInstancesPolicyFactory = new InnerAutoScalingGroupMixedInstancesPolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.MixedInstancesPolicyFactory);
    }

    public static CombinedResult<AutoScalingGroupFactory, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy(this AutoScalingGroupFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null)
    {
        parentFactory.InstanceMaintenancePolicyFactory = new InnerAutoScalingGroupInstanceMaintenancePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InstanceMaintenancePolicyFactory);
    }

    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupLifecycleHookSpecificationFactory> WithLifecycleHookSpecificationList<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LifecycleHookSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLifecycleHookSpecificationList(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupNotificationConfigurationFactory> WithNotificationConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.NotificationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotificationConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupTagPropertyFactory> WithTags<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.TagProperty> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTags(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetricsCollection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, WithMetricsCollection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupMetricsCollectionFactory> WithMetricsCollection<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MetricsCollection> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMetricsCollection(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupMixedInstancesPolicyFactory> WithMixedInstancesPolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithMixedInstancesPolicy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1>(this CombinedResult<AutoScalingGroupFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1>(this CombinedResult<T1, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2>(this CombinedResult<AutoScalingGroupFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2>(this CombinedResult<T1, AutoScalingGroupFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2>(this CombinedResult<T1, T2, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3, T4>(this CombinedResult<AutoScalingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3, T4>(this CombinedResult<T1, AutoScalingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, AutoScalingGroupFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, AutoScalingGroupFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory, InnerAutoScalingGroupInstanceMaintenancePolicyFactory> WithInstanceMaintenancePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, AutoScalingGroupFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstanceMaintenancePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstanceMaintenancePolicy(combinedResult.T5, subFactoryAction));
}
