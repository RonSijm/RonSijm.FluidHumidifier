// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.AutoScaling;

public class InnerAutoScalingGroupMixedInstancesPolicyFactory(Action<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy> factoryAction = null) : SubResourceFactory<Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy>
{

    internal InnerAutoScalingGroupInstancesDistributionFactory InstancesDistributionFactory { get; set; }

    internal InnerAutoScalingGroupLaunchTemplateFactory LaunchTemplateFactory { get; set; }

    protected override Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy Create()
    {
        var mixedInstancesPolicyResult = CreateMixedInstancesPolicy();
        factoryAction?.Invoke(mixedInstancesPolicyResult);

        return mixedInstancesPolicyResult;
    }

    private Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy CreateMixedInstancesPolicy()
    {
        var mixedInstancesPolicyResult = new Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy();

        return mixedInstancesPolicyResult;
    }
    public override void CreateChildren(Humidifier.AutoScaling.AutoScalingGroupTypes.MixedInstancesPolicy result)
    {
        base.CreateChildren(result);

        result.InstancesDistribution ??= InstancesDistributionFactory?.Build();
        result.LaunchTemplate ??= LaunchTemplateFactory?.Build();
    }

} // End Of Class

public static class InnerAutoScalingGroupMixedInstancesPolicyFactoryExtensions
{
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution(this InnerAutoScalingGroupMixedInstancesPolicyFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null)
    {
        parentFactory.InstancesDistributionFactory = new InnerAutoScalingGroupInstancesDistributionFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.InstancesDistributionFactory);
    }

    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate(this InnerAutoScalingGroupMixedInstancesPolicyFactory parentFactory, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null)
    {
        parentFactory.LaunchTemplateFactory = new InnerAutoScalingGroupLaunchTemplateFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LaunchTemplateFactory);
    }

    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2>(this CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3>(this CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3, T4, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3, T4>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3, T4, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3, T4>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3, T4, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory, T4, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupInstancesDistributionFactory> WithInstancesDistribution<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.InstancesDistribution> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInstancesDistribution(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3, T4, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<InnerAutoScalingGroupMixedInstancesPolicyFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3, T4, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, InnerAutoScalingGroupMixedInstancesPolicyFactory, T2, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3, T4, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAutoScalingGroupMixedInstancesPolicyFactory, T3, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory, T4, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAutoScalingGroupMixedInstancesPolicyFactory, T4> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory, InnerAutoScalingGroupLaunchTemplateFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAutoScalingGroupMixedInstancesPolicyFactory> combinedResult, Action<Humidifier.AutoScaling.AutoScalingGroupTypes.LaunchTemplate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T5, subFactoryAction));
}
