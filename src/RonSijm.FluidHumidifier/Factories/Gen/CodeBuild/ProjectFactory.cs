// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CodeBuild;

public class ProjectFactory(string resourceName = null, Action<Humidifier.CodeBuild.Project> factoryAction = null) : ResourceFactory<Humidifier.CodeBuild.Project>(resourceName)
{

    internal List<InnerProjectSourceFactory> SecondarySourcesFactories { get; set; } = [];

    internal List<InnerProjectArtifactsFactory> SecondaryArtifactsFactories { get; set; } = [];

    internal List<InnerProjectProjectFileSystemLocationFactory> FileSystemLocationsFactories { get; set; } = [];

    internal List<InnerProjectProjectSourceVersionFactory> SecondarySourceVersionsFactories { get; set; } = [];

    internal InnerProjectVpcConfigFactory VpcConfigFactory { get; set; }

    internal InnerProjectProjectTriggersFactory TriggersFactory { get; set; }

    internal InnerProjectSourceFactory SourceFactory { get; set; }

    internal InnerProjectArtifactsFactory ArtifactsFactory { get; set; }

    internal InnerProjectLogsConfigFactory LogsConfigFactory { get; set; }

    internal InnerProjectEnvironmentFactory EnvironmentFactory { get; set; }

    internal InnerProjectProjectBuildBatchConfigFactory BuildBatchConfigFactory { get; set; }

    internal InnerProjectProjectCacheFactory CacheFactory { get; set; }

    protected override Humidifier.CodeBuild.Project Create()
    {
        var projectResult = CreateProject();
        factoryAction?.Invoke(projectResult);

        return projectResult;
    }

    private Humidifier.CodeBuild.Project CreateProject()
    {
        var projectResult = new Humidifier.CodeBuild.Project
        {
            GivenName = InputResourceName,
        };

        return projectResult;
    }
    public override void CreateChildren(Humidifier.CodeBuild.Project result)
    {
        base.CreateChildren(result);

        result.SecondarySources = SecondarySourcesFactories.Any() ? SecondarySourcesFactories.Select(x => x.Build()).ToList() : null;
        result.SecondaryArtifacts = SecondaryArtifactsFactories.Any() ? SecondaryArtifactsFactories.Select(x => x.Build()).ToList() : null;
        result.FileSystemLocations = FileSystemLocationsFactories.Any() ? FileSystemLocationsFactories.Select(x => x.Build()).ToList() : null;
        result.SecondarySourceVersions = SecondarySourceVersionsFactories.Any() ? SecondarySourceVersionsFactories.Select(x => x.Build()).ToList() : null;
        result.VpcConfig ??= VpcConfigFactory?.Build();
        result.Triggers ??= TriggersFactory?.Build();
        result.Source ??= SourceFactory?.Build();
        result.Artifacts ??= ArtifactsFactory?.Build();
        result.LogsConfig ??= LogsConfigFactory?.Build();
        result.Environment ??= EnvironmentFactory?.Build();
        result.BuildBatchConfig ??= BuildBatchConfigFactory?.Build();
        result.Cache ??= CacheFactory?.Build();
    }

} // End Of Class

public static class ProjectFactoryExtensions
{
    public static CombinedResult<ProjectFactory, InnerProjectSourceFactory> WithSecondarySources(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null)
    {
        var factory = new InnerProjectSourceFactory(subFactoryAction);
        parentFactory.SecondarySourcesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ProjectFactory, InnerProjectArtifactsFactory> WithSecondaryArtifacts(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null)
    {
        var factory = new InnerProjectArtifactsFactory(subFactoryAction);
        parentFactory.SecondaryArtifactsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ProjectFactory, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null)
    {
        var factory = new InnerProjectProjectFileSystemLocationFactory(subFactoryAction);
        parentFactory.FileSystemLocationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ProjectFactory, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null)
    {
        var factory = new InnerProjectProjectSourceVersionFactory(subFactoryAction);
        parentFactory.SecondarySourceVersionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ProjectFactory, InnerProjectVpcConfigFactory> WithVpcConfig(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null)
    {
        parentFactory.VpcConfigFactory = new InnerProjectVpcConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VpcConfigFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectProjectTriggersFactory> WithTriggers(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null)
    {
        parentFactory.TriggersFactory = new InnerProjectProjectTriggersFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TriggersFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectSourceFactory> WithSource(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null)
    {
        parentFactory.SourceFactory = new InnerProjectSourceFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectArtifactsFactory> WithArtifacts(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null)
    {
        parentFactory.ArtifactsFactory = new InnerProjectArtifactsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ArtifactsFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectLogsConfigFactory> WithLogsConfig(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null)
    {
        parentFactory.LogsConfigFactory = new InnerProjectLogsConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LogsConfigFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectEnvironmentFactory> WithEnvironment(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null)
    {
        parentFactory.EnvironmentFactory = new InnerProjectEnvironmentFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EnvironmentFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null)
    {
        parentFactory.BuildBatchConfigFactory = new InnerProjectProjectBuildBatchConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BuildBatchConfigFactory);
    }

    public static CombinedResult<ProjectFactory, InnerProjectProjectCacheFactory> WithCache(this ProjectFactory parentFactory, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null)
    {
        parentFactory.CacheFactory = new InnerProjectProjectCacheFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CacheFactory);
    }

    public static CombinedResult<ProjectFactory, T1, InnerProjectSourceFactory> WithSecondarySources<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecondarySources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectSourceFactory> WithSecondarySources<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecondarySources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectSourceFactory> WithSecondarySources<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectSourceFactory> WithSecondarySources<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectSourceFactory> WithSecondarySources<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectSourceFactory> WithSecondarySources<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySources(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectArtifactsFactory> WithSecondaryArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondaryArtifacts(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectProjectFileSystemLocationFactory> WithFileSystemLocations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectFileSystemLocation> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFileSystemLocations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectProjectSourceVersionFactory> WithSecondarySourceVersions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectSourceVersion> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSecondarySourceVersions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectVpcConfigFactory> WithVpcConfig<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectVpcConfigFactory> WithVpcConfig<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectVpcConfigFactory> WithVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.VpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVpcConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectProjectTriggersFactory> WithTriggers<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectProjectTriggersFactory> WithTriggers<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectProjectTriggersFactory> WithTriggers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectTriggers> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggers(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectSourceFactory> WithSource<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectSourceFactory> WithSource<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectSourceFactory> WithSource<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectSourceFactory> WithSource<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectSourceFactory> WithSource<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectSourceFactory> WithSource<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectSourceFactory> WithSource<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Source> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSource(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectArtifactsFactory> WithArtifacts<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, WithArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectArtifactsFactory> WithArtifacts<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, WithArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectArtifactsFactory> WithArtifacts<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectArtifactsFactory> WithArtifacts<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectArtifactsFactory> WithArtifacts<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectArtifactsFactory> WithArtifacts<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Artifacts> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithArtifacts(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectLogsConfigFactory> WithLogsConfig<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectLogsConfigFactory> WithLogsConfig<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectLogsConfigFactory> WithLogsConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.LogsConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogsConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectEnvironmentFactory> WithEnvironment<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, WithEnvironment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectEnvironmentFactory> WithEnvironment<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, WithEnvironment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectEnvironmentFactory> WithEnvironment<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.Environment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEnvironment(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectProjectBuildBatchConfigFactory> WithBuildBatchConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectBuildBatchConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBuildBatchConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, InnerProjectProjectCacheFactory> WithCache<T1>(this CombinedResult<ProjectFactory, T1> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, WithCache(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, InnerProjectProjectCacheFactory> WithCache<T1>(this CombinedResult<T1, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, WithCache(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, InnerProjectProjectCacheFactory> WithCache<T1, T2>(this CombinedResult<ProjectFactory, T1, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, InnerProjectProjectCacheFactory> WithCache<T1, T2>(this CombinedResult<T1, ProjectFactory, T2> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, InnerProjectProjectCacheFactory> WithCache<T1, T2>(this CombinedResult<T1, T2, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3>(this CombinedResult<ProjectFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3>(this CombinedResult<T1, ProjectFactory, T2, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3>(this CombinedResult<T1, T2, ProjectFactory, T3> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3>(this CombinedResult<T1, T2, T3, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ProjectFactory, T1, T2, T3, T4, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3, T4>(this CombinedResult<ProjectFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ProjectFactory, T2, T3, T4, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3, T4>(this CombinedResult<T1, ProjectFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ProjectFactory, T3, T4, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3, T4>(this CombinedResult<T1, T2, ProjectFactory, T3, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ProjectFactory, T4, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ProjectFactory, T4> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ProjectFactory, InnerProjectProjectCacheFactory> WithCache<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ProjectFactory> combinedResult, Action<Humidifier.CodeBuild.ProjectTypes.ProjectCache> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCache(combinedResult.T5, subFactoryAction));
}
