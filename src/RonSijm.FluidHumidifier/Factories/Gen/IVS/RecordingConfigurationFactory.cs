// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IVS;

public class RecordingConfigurationFactory(string resourceName = null, Action<Humidifier.IVS.RecordingConfiguration> factoryAction = null) : ResourceFactory<Humidifier.IVS.RecordingConfiguration>(resourceName)
{

    internal InnerRecordingConfigurationDestinationConfigurationFactory DestinationConfigurationFactory { get; set; }

    internal InnerRecordingConfigurationRenditionConfigurationFactory RenditionConfigurationFactory { get; set; }

    internal InnerRecordingConfigurationThumbnailConfigurationFactory ThumbnailConfigurationFactory { get; set; }

    protected override Humidifier.IVS.RecordingConfiguration Create()
    {
        var recordingConfigurationResult = CreateRecordingConfiguration();
        factoryAction?.Invoke(recordingConfigurationResult);

        return recordingConfigurationResult;
    }

    private Humidifier.IVS.RecordingConfiguration CreateRecordingConfiguration()
    {
        var recordingConfigurationResult = new Humidifier.IVS.RecordingConfiguration
        {
            GivenName = InputResourceName,
        };

        return recordingConfigurationResult;
    }
    public override void CreateChildren(Humidifier.IVS.RecordingConfiguration result)
    {
        base.CreateChildren(result);

        result.DestinationConfiguration ??= DestinationConfigurationFactory?.Build();
        result.RenditionConfiguration ??= RenditionConfigurationFactory?.Build();
        result.ThumbnailConfiguration ??= ThumbnailConfigurationFactory?.Build();
    }

} // End Of Class

public static class RecordingConfigurationFactoryExtensions
{
    public static CombinedResult<RecordingConfigurationFactory, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration(this RecordingConfigurationFactory parentFactory, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.DestinationConfigurationFactory = new InnerRecordingConfigurationDestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DestinationConfigurationFactory);
    }

    public static CombinedResult<RecordingConfigurationFactory, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration(this RecordingConfigurationFactory parentFactory, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null)
    {
        parentFactory.RenditionConfigurationFactory = new InnerRecordingConfigurationRenditionConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RenditionConfigurationFactory);
    }

    public static CombinedResult<RecordingConfigurationFactory, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration(this RecordingConfigurationFactory parentFactory, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null)
    {
        parentFactory.ThumbnailConfigurationFactory = new InnerRecordingConfigurationThumbnailConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ThumbnailConfigurationFactory);
    }

    public static CombinedResult<RecordingConfigurationFactory, T1, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1>(this CombinedResult<RecordingConfigurationFactory, T1> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1>(this CombinedResult<T1, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2>(this CombinedResult<RecordingConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2>(this CombinedResult<T1, RecordingConfigurationFactory, T2> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2>(this CombinedResult<T1, T2, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, T3, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3>(this CombinedResult<RecordingConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, T3, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, RecordingConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, T3, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, RecordingConfigurationFactory, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, RecordingConfigurationFactory, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, T3, T4, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<RecordingConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, T3, T4, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, RecordingConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, T3, T4, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, RecordingConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, RecordingConfigurationFactory, T4, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, RecordingConfigurationFactory, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, RecordingConfigurationFactory, InnerRecordingConfigurationDestinationConfigurationFactory> WithDestinationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDestinationConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1>(this CombinedResult<RecordingConfigurationFactory, T1> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1>(this CombinedResult<T1, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2>(this CombinedResult<RecordingConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2>(this CombinedResult<T1, RecordingConfigurationFactory, T2> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2>(this CombinedResult<T1, T2, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, T3, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3>(this CombinedResult<RecordingConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, T3, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3>(this CombinedResult<T1, RecordingConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, T3, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, RecordingConfigurationFactory, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, RecordingConfigurationFactory, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, T3, T4, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3, T4>(this CombinedResult<RecordingConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, T3, T4, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, RecordingConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, T3, T4, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, RecordingConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, RecordingConfigurationFactory, T4, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, RecordingConfigurationFactory, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, RecordingConfigurationFactory, InnerRecordingConfigurationRenditionConfigurationFactory> WithRenditionConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.RenditionConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRenditionConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1>(this CombinedResult<RecordingConfigurationFactory, T1> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1>(this CombinedResult<T1, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2>(this CombinedResult<RecordingConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2>(this CombinedResult<T1, RecordingConfigurationFactory, T2> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2>(this CombinedResult<T1, T2, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, T3, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3>(this CombinedResult<RecordingConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, T3, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3>(this CombinedResult<T1, RecordingConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, T3, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, RecordingConfigurationFactory, T3> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, RecordingConfigurationFactory, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<RecordingConfigurationFactory, T1, T2, T3, T4, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3, T4>(this CombinedResult<RecordingConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, RecordingConfigurationFactory, T2, T3, T4, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, RecordingConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, RecordingConfigurationFactory, T3, T4, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, RecordingConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, RecordingConfigurationFactory, T4, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, RecordingConfigurationFactory, T4> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, RecordingConfigurationFactory, InnerRecordingConfigurationThumbnailConfigurationFactory> WithThumbnailConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, RecordingConfigurationFactory> combinedResult, Action<Humidifier.IVS.RecordingConfigurationTypes.ThumbnailConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithThumbnailConfiguration(combinedResult.T5, subFactoryAction));
}
