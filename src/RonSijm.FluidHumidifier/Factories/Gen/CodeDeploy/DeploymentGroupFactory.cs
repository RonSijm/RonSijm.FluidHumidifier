// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.CodeDeploy;

public class DeploymentGroupFactory(string resourceName = null, Action<Humidifier.CodeDeploy.DeploymentGroup> factoryAction = null) : ResourceFactory<Humidifier.CodeDeploy.DeploymentGroup>(resourceName)
{

    internal List<InnerDeploymentGroupECSServiceFactory> ECSServicesFactories { get; set; } = [];

    internal List<InnerDeploymentGroupEC2TagFilterFactory> Ec2TagFiltersFactories { get; set; } = [];

    internal List<InnerDeploymentGroupTagFilterFactory> OnPremisesInstanceTagFiltersFactories { get; set; } = [];

    internal List<InnerDeploymentGroupTriggerConfigFactory> TriggerConfigurationsFactories { get; set; } = [];

    internal InnerDeploymentGroupAlarmConfigurationFactory AlarmConfigurationFactory { get; set; }

    internal InnerDeploymentGroupAutoRollbackConfigurationFactory AutoRollbackConfigurationFactory { get; set; }

    internal InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory BlueGreenDeploymentConfigurationFactory { get; set; }

    internal InnerDeploymentGroupDeploymentFactory DeploymentFactory { get; set; }

    internal InnerDeploymentGroupDeploymentStyleFactory DeploymentStyleFactory { get; set; }

    internal InnerDeploymentGroupEC2TagSetFactory Ec2TagSetFactory { get; set; }

    internal InnerDeploymentGroupLoadBalancerInfoFactory LoadBalancerInfoFactory { get; set; }

    internal InnerDeploymentGroupOnPremisesTagSetFactory OnPremisesTagSetFactory { get; set; }

    protected override Humidifier.CodeDeploy.DeploymentGroup Create()
    {
        var deploymentGroupResult = CreateDeploymentGroup();
        factoryAction?.Invoke(deploymentGroupResult);

        return deploymentGroupResult;
    }

    private Humidifier.CodeDeploy.DeploymentGroup CreateDeploymentGroup()
    {
        var deploymentGroupResult = new Humidifier.CodeDeploy.DeploymentGroup
        {
            GivenName = InputResourceName,
        };

        return deploymentGroupResult;
    }
    public override void CreateChildren(Humidifier.CodeDeploy.DeploymentGroup result)
    {
        base.CreateChildren(result);

        result.ECSServices = ECSServicesFactories.Any() ? ECSServicesFactories.Select(x => x.Build()).ToList() : null;
        result.Ec2TagFilters = Ec2TagFiltersFactories.Any() ? Ec2TagFiltersFactories.Select(x => x.Build()).ToList() : null;
        result.OnPremisesInstanceTagFilters = OnPremisesInstanceTagFiltersFactories.Any() ? OnPremisesInstanceTagFiltersFactories.Select(x => x.Build()).ToList() : null;
        result.TriggerConfigurations = TriggerConfigurationsFactories.Any() ? TriggerConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.AlarmConfiguration ??= AlarmConfigurationFactory?.Build();
        result.AutoRollbackConfiguration ??= AutoRollbackConfigurationFactory?.Build();
        result.BlueGreenDeploymentConfiguration ??= BlueGreenDeploymentConfigurationFactory?.Build();
        result.Deployment ??= DeploymentFactory?.Build();
        result.DeploymentStyle ??= DeploymentStyleFactory?.Build();
        result.Ec2TagSet ??= Ec2TagSetFactory?.Build();
        result.LoadBalancerInfo ??= LoadBalancerInfoFactory?.Build();
        result.OnPremisesTagSet ??= OnPremisesTagSetFactory?.Build();
    }

} // End Of Class

public static class DeploymentGroupFactoryExtensions
{
    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupECSServiceFactory> WithECSServices(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null)
    {
        var factory = new InnerDeploymentGroupECSServiceFactory(subFactoryAction);
        parentFactory.ECSServicesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null)
    {
        var factory = new InnerDeploymentGroupEC2TagFilterFactory(subFactoryAction);
        parentFactory.Ec2TagFiltersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null)
    {
        var factory = new InnerDeploymentGroupTagFilterFactory(subFactoryAction);
        parentFactory.OnPremisesInstanceTagFiltersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null)
    {
        var factory = new InnerDeploymentGroupTriggerConfigFactory(subFactoryAction);
        parentFactory.TriggerConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null)
    {
        parentFactory.AlarmConfigurationFactory = new InnerDeploymentGroupAlarmConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AlarmConfigurationFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null)
    {
        parentFactory.AutoRollbackConfigurationFactory = new InnerDeploymentGroupAutoRollbackConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AutoRollbackConfigurationFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null)
    {
        parentFactory.BlueGreenDeploymentConfigurationFactory = new InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.BlueGreenDeploymentConfigurationFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupDeploymentFactory> WithDeployment(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null)
    {
        parentFactory.DeploymentFactory = new InnerDeploymentGroupDeploymentFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeploymentFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null)
    {
        parentFactory.DeploymentStyleFactory = new InnerDeploymentGroupDeploymentStyleFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeploymentStyleFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null)
    {
        parentFactory.Ec2TagSetFactory = new InnerDeploymentGroupEC2TagSetFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.Ec2TagSetFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null)
    {
        parentFactory.LoadBalancerInfoFactory = new InnerDeploymentGroupLoadBalancerInfoFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoadBalancerInfoFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet(this DeploymentGroupFactory parentFactory, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null)
    {
        parentFactory.OnPremisesTagSetFactory = new InnerDeploymentGroupOnPremisesTagSetFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OnPremisesTagSetFactory);
    }

    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, WithECSServices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, WithECSServices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupECSServiceFactory> WithECSServices<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.ECSService> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithECSServices(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupEC2TagFilterFactory> WithEc2TagFilters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagFilters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupTagFilterFactory> WithOnPremisesInstanceTagFilters<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TagFilter> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesInstanceTagFilters(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupTriggerConfigFactory> WithTriggerConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.TriggerConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTriggerConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupAlarmConfigurationFactory> WithAlarmConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AlarmConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAlarmConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupAutoRollbackConfigurationFactory> WithAutoRollbackConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.AutoRollbackConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAutoRollbackConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupBlueGreenDeploymentConfigurationFactory> WithBlueGreenDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.BlueGreenDeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithBlueGreenDeploymentConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeployment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeployment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupDeploymentFactory> WithDeployment<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.Deployment> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeployment(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupDeploymentStyleFactory> WithDeploymentStyle<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.DeploymentStyle> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentStyle(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithEc2TagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithEc2TagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupEC2TagSetFactory> WithEc2TagSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.EC2TagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEc2TagSet(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupLoadBalancerInfoFactory> WithLoadBalancerInfo<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.LoadBalancerInfo> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancerInfo(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1>(this CombinedResult<DeploymentGroupFactory, T1> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1>(this CombinedResult<T1, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2>(this CombinedResult<DeploymentGroupFactory, T1, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2>(this CombinedResult<T1, DeploymentGroupFactory, T2> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2>(this CombinedResult<T1, T2, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3, T4>(this CombinedResult<DeploymentGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3, T4>(this CombinedResult<T1, DeploymentGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, DeploymentGroupFactory, T3, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DeploymentGroupFactory, T4> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory, InnerDeploymentGroupOnPremisesTagSetFactory> WithOnPremisesTagSet<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DeploymentGroupFactory> combinedResult, Action<Humidifier.CodeDeploy.DeploymentGroupTypes.OnPremisesTagSet> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOnPremisesTagSet(combinedResult.T5, subFactoryAction));
}
