// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Transfer;

public class ServerFactory(string resourceName = null, Action<Humidifier.Transfer.Server> factoryAction = null) : ResourceFactory<Humidifier.Transfer.Server>(resourceName)
{

    internal InnerServerIdentityProviderDetailsFactory IdentityProviderDetailsFactory { get; set; }

    internal InnerServerEndpointDetailsFactory EndpointDetailsFactory { get; set; }

    internal InnerServerProtocolDetailsFactory ProtocolDetailsFactory { get; set; }

    internal InnerServerS3StorageOptionsFactory S3StorageOptionsFactory { get; set; }

    internal InnerServerWorkflowDetailsFactory WorkflowDetailsFactory { get; set; }

    protected override Humidifier.Transfer.Server Create()
    {
        var serverResult = CreateServer();
        factoryAction?.Invoke(serverResult);

        return serverResult;
    }

    private Humidifier.Transfer.Server CreateServer()
    {
        var serverResult = new Humidifier.Transfer.Server
        {
            GivenName = InputResourceName,
        };

        return serverResult;
    }
    public override void CreateChildren(Humidifier.Transfer.Server result)
    {
        base.CreateChildren(result);

        result.IdentityProviderDetails ??= IdentityProviderDetailsFactory?.Build();
        result.EndpointDetails ??= EndpointDetailsFactory?.Build();
        result.ProtocolDetails ??= ProtocolDetailsFactory?.Build();
        result.S3StorageOptions ??= S3StorageOptionsFactory?.Build();
        result.WorkflowDetails ??= WorkflowDetailsFactory?.Build();
    }

} // End Of Class

public static class ServerFactoryExtensions
{
    public static CombinedResult<ServerFactory, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails(this ServerFactory parentFactory, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null)
    {
        parentFactory.IdentityProviderDetailsFactory = new InnerServerIdentityProviderDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IdentityProviderDetailsFactory);
    }

    public static CombinedResult<ServerFactory, InnerServerEndpointDetailsFactory> WithEndpointDetails(this ServerFactory parentFactory, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null)
    {
        parentFactory.EndpointDetailsFactory = new InnerServerEndpointDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EndpointDetailsFactory);
    }

    public static CombinedResult<ServerFactory, InnerServerProtocolDetailsFactory> WithProtocolDetails(this ServerFactory parentFactory, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null)
    {
        parentFactory.ProtocolDetailsFactory = new InnerServerProtocolDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProtocolDetailsFactory);
    }

    public static CombinedResult<ServerFactory, InnerServerS3StorageOptionsFactory> WithS3StorageOptions(this ServerFactory parentFactory, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null)
    {
        parentFactory.S3StorageOptionsFactory = new InnerServerS3StorageOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3StorageOptionsFactory);
    }

    public static CombinedResult<ServerFactory, InnerServerWorkflowDetailsFactory> WithWorkflowDetails(this ServerFactory parentFactory, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null)
    {
        parentFactory.WorkflowDetailsFactory = new InnerServerWorkflowDetailsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.WorkflowDetailsFactory);
    }

    public static CombinedResult<ServerFactory, T1, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1>(this CombinedResult<ServerFactory, T1> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1>(this CombinedResult<T1, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2>(this CombinedResult<ServerFactory, T1, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2>(this CombinedResult<T1, ServerFactory, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2>(this CombinedResult<T1, T2, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3>(this CombinedResult<ServerFactory, T1, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3>(this CombinedResult<T1, ServerFactory, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3>(this CombinedResult<T1, T2, ServerFactory, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, T4, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3, T4>(this CombinedResult<ServerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, T4, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3, T4>(this CombinedResult<T1, ServerFactory, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, T4, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServerFactory, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, T4, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServerFactory, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServerFactory, InnerServerIdentityProviderDetailsFactory> WithIdentityProviderDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.IdentityProviderDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderDetails(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1>(this CombinedResult<ServerFactory, T1> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithEndpointDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1>(this CombinedResult<T1, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithEndpointDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2>(this CombinedResult<ServerFactory, T1, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2>(this CombinedResult<T1, ServerFactory, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2>(this CombinedResult<T1, T2, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3>(this CombinedResult<ServerFactory, T1, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3>(this CombinedResult<T1, ServerFactory, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3>(this CombinedResult<T1, T2, ServerFactory, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, T4, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3, T4>(this CombinedResult<ServerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, T4, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3, T4>(this CombinedResult<T1, ServerFactory, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, T4, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServerFactory, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, T4, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServerFactory, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServerFactory, InnerServerEndpointDetailsFactory> WithEndpointDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.EndpointDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEndpointDetails(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1>(this CombinedResult<ServerFactory, T1> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithProtocolDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1>(this CombinedResult<T1, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithProtocolDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2>(this CombinedResult<ServerFactory, T1, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2>(this CombinedResult<T1, ServerFactory, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2>(this CombinedResult<T1, T2, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3>(this CombinedResult<ServerFactory, T1, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3>(this CombinedResult<T1, ServerFactory, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3>(this CombinedResult<T1, T2, ServerFactory, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, T4, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3, T4>(this CombinedResult<ServerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, T4, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3, T4>(this CombinedResult<T1, ServerFactory, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, T4, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServerFactory, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, T4, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServerFactory, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServerFactory, InnerServerProtocolDetailsFactory> WithProtocolDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.ProtocolDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProtocolDetails(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1>(this CombinedResult<ServerFactory, T1> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1>(this CombinedResult<T1, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2>(this CombinedResult<ServerFactory, T1, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2>(this CombinedResult<T1, ServerFactory, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2>(this CombinedResult<T1, T2, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3>(this CombinedResult<ServerFactory, T1, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3>(this CombinedResult<T1, ServerFactory, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3>(this CombinedResult<T1, T2, ServerFactory, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, T4, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3, T4>(this CombinedResult<ServerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, T4, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3, T4>(this CombinedResult<T1, ServerFactory, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, T4, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServerFactory, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, T4, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServerFactory, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServerFactory, InnerServerS3StorageOptionsFactory> WithS3StorageOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.S3StorageOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3StorageOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1>(this CombinedResult<ServerFactory, T1> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1>(this CombinedResult<T1, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2>(this CombinedResult<ServerFactory, T1, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2>(this CombinedResult<T1, ServerFactory, T2> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2>(this CombinedResult<T1, T2, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3>(this CombinedResult<ServerFactory, T1, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3>(this CombinedResult<T1, ServerFactory, T2, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3>(this CombinedResult<T1, T2, ServerFactory, T3> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServerFactory, T1, T2, T3, T4, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3, T4>(this CombinedResult<ServerFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServerFactory, T2, T3, T4, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3, T4>(this CombinedResult<T1, ServerFactory, T2, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServerFactory, T3, T4, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServerFactory, T3, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServerFactory, T4, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServerFactory, T4> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServerFactory, InnerServerWorkflowDetailsFactory> WithWorkflowDetails<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServerFactory> combinedResult, Action<Humidifier.Transfer.ServerTypes.WorkflowDetails> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflowDetails(combinedResult.T5, subFactoryAction));
}
