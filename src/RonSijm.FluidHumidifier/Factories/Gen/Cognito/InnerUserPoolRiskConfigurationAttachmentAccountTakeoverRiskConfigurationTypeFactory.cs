// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Cognito;

public class InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory(Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverRiskConfigurationType> factoryAction = null) : SubResourceFactory<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverRiskConfigurationType>
{

    internal InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory ActionsFactory { get; set; }

    internal InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory NotifyConfigurationFactory { get; set; }

    protected override Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverRiskConfigurationType Create()
    {
        var accountTakeoverRiskConfigurationTypeResult = CreateAccountTakeoverRiskConfigurationType();
        factoryAction?.Invoke(accountTakeoverRiskConfigurationTypeResult);

        return accountTakeoverRiskConfigurationTypeResult;
    }

    private Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverRiskConfigurationType CreateAccountTakeoverRiskConfigurationType()
    {
        var accountTakeoverRiskConfigurationTypeResult = new Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverRiskConfigurationType();

        return accountTakeoverRiskConfigurationTypeResult;
    }
    public override void CreateChildren(Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverRiskConfigurationType result)
    {
        base.CreateChildren(result);

        result.Actions ??= ActionsFactory?.Build();
        result.NotifyConfiguration ??= NotifyConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactoryExtensions
{
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions(this InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory parentFactory, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null)
    {
        parentFactory.ActionsFactory = new InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ActionsFactory);
    }

    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration(this InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory parentFactory, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null)
    {
        parentFactory.NotifyConfigurationFactory = new InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NotifyConfigurationFactory);
    }

    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, WithActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, WithActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2>(this CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3>(this CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3, T4>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3, T4>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverActionsTypeFactory> WithActions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.AccountTakeoverActionsType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithActions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3, T4, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T3, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T4, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, T4> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory, InnerUserPoolRiskConfigurationAttachmentNotifyConfigurationTypeFactory> WithNotifyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerUserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeFactory> combinedResult, Action<Humidifier.Cognito.UserPoolRiskConfigurationAttachmentTypes.NotifyConfigurationType> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNotifyConfiguration(combinedResult.T5, subFactoryAction));
}
