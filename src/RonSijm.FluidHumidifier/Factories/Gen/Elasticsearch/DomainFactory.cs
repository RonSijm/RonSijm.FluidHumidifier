// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Elasticsearch;

public class DomainFactory(string resourceName = null, Action<Humidifier.Elasticsearch.Domain> factoryAction = null) : ResourceFactory<Humidifier.Elasticsearch.Domain>(resourceName)
{

    internal InnerDomainAdvancedSecurityOptionsInputFactory AdvancedSecurityOptionsFactory { get; set; }

    internal InnerDomainCognitoOptionsFactory CognitoOptionsFactory { get; set; }

    internal InnerDomainDomainEndpointOptionsFactory DomainEndpointOptionsFactory { get; set; }

    internal InnerDomainEBSOptionsFactory EBSOptionsFactory { get; set; }

    internal InnerDomainElasticsearchClusterConfigFactory ElasticsearchClusterConfigFactory { get; set; }

    internal InnerDomainEncryptionAtRestOptionsFactory EncryptionAtRestOptionsFactory { get; set; }

    internal InnerDomainNodeToNodeEncryptionOptionsFactory NodeToNodeEncryptionOptionsFactory { get; set; }

    internal InnerDomainSnapshotOptionsFactory SnapshotOptionsFactory { get; set; }

    internal InnerDomainVPCOptionsFactory VPCOptionsFactory { get; set; }

    protected override Humidifier.Elasticsearch.Domain Create()
    {
        var domainResult = CreateDomain();
        factoryAction?.Invoke(domainResult);

        return domainResult;
    }

    private Humidifier.Elasticsearch.Domain CreateDomain()
    {
        var domainResult = new Humidifier.Elasticsearch.Domain
        {
            GivenName = InputResourceName,
        };

        return domainResult;
    }
    public override void CreateChildren(Humidifier.Elasticsearch.Domain result)
    {
        base.CreateChildren(result);

        result.AdvancedSecurityOptions ??= AdvancedSecurityOptionsFactory?.Build();
        result.CognitoOptions ??= CognitoOptionsFactory?.Build();
        result.DomainEndpointOptions ??= DomainEndpointOptionsFactory?.Build();
        result.EBSOptions ??= EBSOptionsFactory?.Build();
        result.ElasticsearchClusterConfig ??= ElasticsearchClusterConfigFactory?.Build();
        result.EncryptionAtRestOptions ??= EncryptionAtRestOptionsFactory?.Build();
        result.NodeToNodeEncryptionOptions ??= NodeToNodeEncryptionOptionsFactory?.Build();
        result.SnapshotOptions ??= SnapshotOptionsFactory?.Build();
        result.VPCOptions ??= VPCOptionsFactory?.Build();
    }

} // End Of Class

public static class DomainFactoryExtensions
{
    public static CombinedResult<DomainFactory, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null)
    {
        parentFactory.AdvancedSecurityOptionsFactory = new InnerDomainAdvancedSecurityOptionsInputFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AdvancedSecurityOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainCognitoOptionsFactory> WithCognitoOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null)
    {
        parentFactory.CognitoOptionsFactory = new InnerDomainCognitoOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CognitoOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null)
    {
        parentFactory.DomainEndpointOptionsFactory = new InnerDomainDomainEndpointOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DomainEndpointOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainEBSOptionsFactory> WithEBSOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null)
    {
        parentFactory.EBSOptionsFactory = new InnerDomainEBSOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EBSOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null)
    {
        parentFactory.ElasticsearchClusterConfigFactory = new InnerDomainElasticsearchClusterConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ElasticsearchClusterConfigFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null)
    {
        parentFactory.EncryptionAtRestOptionsFactory = new InnerDomainEncryptionAtRestOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EncryptionAtRestOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null)
    {
        parentFactory.NodeToNodeEncryptionOptionsFactory = new InnerDomainNodeToNodeEncryptionOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NodeToNodeEncryptionOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null)
    {
        parentFactory.SnapshotOptionsFactory = new InnerDomainSnapshotOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SnapshotOptionsFactory);
    }

    public static CombinedResult<DomainFactory, InnerDomainVPCOptionsFactory> WithVPCOptions(this DomainFactory parentFactory, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null)
    {
        parentFactory.VPCOptionsFactory = new InnerDomainVPCOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.VPCOptionsFactory);
    }

    public static CombinedResult<DomainFactory, T1, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainAdvancedSecurityOptionsInputFactory> WithAdvancedSecurityOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.AdvancedSecurityOptionsInput> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAdvancedSecurityOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCognitoOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithCognitoOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainCognitoOptionsFactory> WithCognitoOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.CognitoOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCognitoOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainDomainEndpointOptionsFactory> WithDomainEndpointOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.DomainEndpointOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDomainEndpointOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainEBSOptionsFactory> WithEBSOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithEBSOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainEBSOptionsFactory> WithEBSOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithEBSOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainEBSOptionsFactory> WithEBSOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EBSOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEBSOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainElasticsearchClusterConfigFactory> WithElasticsearchClusterConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.ElasticsearchClusterConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithElasticsearchClusterConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainEncryptionAtRestOptionsFactory> WithEncryptionAtRestOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.EncryptionAtRestOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionAtRestOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainNodeToNodeEncryptionOptionsFactory> WithNodeToNodeEncryptionOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.NodeToNodeEncryptionOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNodeToNodeEncryptionOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainSnapshotOptionsFactory> WithSnapshotOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.SnapshotOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSnapshotOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, InnerDomainVPCOptionsFactory> WithVPCOptions<T1>(this CombinedResult<DomainFactory, T1> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithVPCOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, InnerDomainVPCOptionsFactory> WithVPCOptions<T1>(this CombinedResult<T1, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, WithVPCOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2>(this CombinedResult<DomainFactory, T1, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2>(this CombinedResult<T1, DomainFactory, T2> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2>(this CombinedResult<T1, T2, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3>(this CombinedResult<DomainFactory, T1, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3>(this CombinedResult<T1, DomainFactory, T2, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3>(this CombinedResult<T1, T2, DomainFactory, T3> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DomainFactory, T1, T2, T3, T4, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3, T4>(this CombinedResult<DomainFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DomainFactory, T2, T3, T4, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3, T4>(this CombinedResult<T1, DomainFactory, T2, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DomainFactory, T3, T4, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, DomainFactory, T3, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DomainFactory, T4, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DomainFactory, T4> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DomainFactory, InnerDomainVPCOptionsFactory> WithVPCOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DomainFactory> combinedResult, Action<Humidifier.Elasticsearch.DomainTypes.VPCOptions> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVPCOptions(combinedResult.T5, subFactoryAction));
}
