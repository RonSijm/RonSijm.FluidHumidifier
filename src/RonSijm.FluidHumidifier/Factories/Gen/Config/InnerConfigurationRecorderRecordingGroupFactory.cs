// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Config;

public class InnerConfigurationRecorderRecordingGroupFactory(Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingGroup> factoryAction = null) : SubResourceFactory<Humidifier.Config.ConfigurationRecorderTypes.RecordingGroup>
{

    internal InnerConfigurationRecorderExclusionByResourceTypesFactory ExclusionByResourceTypesFactory { get; set; }

    internal InnerConfigurationRecorderRecordingStrategyFactory RecordingStrategyFactory { get; set; }

    protected override Humidifier.Config.ConfigurationRecorderTypes.RecordingGroup Create()
    {
        var recordingGroupResult = CreateRecordingGroup();
        factoryAction?.Invoke(recordingGroupResult);

        return recordingGroupResult;
    }

    private Humidifier.Config.ConfigurationRecorderTypes.RecordingGroup CreateRecordingGroup()
    {
        var recordingGroupResult = new Humidifier.Config.ConfigurationRecorderTypes.RecordingGroup();

        return recordingGroupResult;
    }
    public override void CreateChildren(Humidifier.Config.ConfigurationRecorderTypes.RecordingGroup result)
    {
        base.CreateChildren(result);

        result.ExclusionByResourceTypes ??= ExclusionByResourceTypesFactory?.Build();
        result.RecordingStrategy ??= RecordingStrategyFactory?.Build();
    }

} // End Of Class

public static class InnerConfigurationRecorderRecordingGroupFactoryExtensions
{
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes(this InnerConfigurationRecorderRecordingGroupFactory parentFactory, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null)
    {
        parentFactory.ExclusionByResourceTypesFactory = new InnerConfigurationRecorderExclusionByResourceTypesFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ExclusionByResourceTypesFactory);
    }

    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy(this InnerConfigurationRecorderRecordingGroupFactory parentFactory, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null)
    {
        parentFactory.RecordingStrategyFactory = new InnerConfigurationRecorderRecordingStrategyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RecordingStrategyFactory);
    }

    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2>(this CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3>(this CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3, T4, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3, T4>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3, T4, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3, T4>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3, T4, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory, T4, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderExclusionByResourceTypesFactory> WithExclusionByResourceTypes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.ExclusionByResourceTypes> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExclusionByResourceTypes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2>(this CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3>(this CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3, T4, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3, T4>(this CombinedResult<InnerConfigurationRecorderRecordingGroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3, T4, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3, T4>(this CombinedResult<T1, InnerConfigurationRecorderRecordingGroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3, T4, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerConfigurationRecorderRecordingGroupFactory, T3, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory, T4, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerConfigurationRecorderRecordingGroupFactory, T4> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerConfigurationRecorderRecordingGroupFactory, InnerConfigurationRecorderRecordingStrategyFactory> WithRecordingStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerConfigurationRecorderRecordingGroupFactory> combinedResult, Action<Humidifier.Config.ConfigurationRecorderTypes.RecordingStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRecordingStrategy(combinedResult.T5, subFactoryAction));
}
