// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Lightsail;

public class DistributionFactory(string resourceName = null, Action<Humidifier.Lightsail.Distribution> factoryAction = null) : ResourceFactory<Humidifier.Lightsail.Distribution>(resourceName)
{

    internal List<InnerDistributionCacheBehaviorPerPathFactory> CacheBehaviorsFactories { get; set; } = [];

    internal InnerDistributionInputOriginFactory OriginFactory { get; set; }

    internal InnerDistributionCacheBehaviorFactory DefaultCacheBehaviorFactory { get; set; }

    internal InnerDistributionCacheSettingsFactory CacheBehaviorSettingsFactory { get; set; }

    protected override Humidifier.Lightsail.Distribution Create()
    {
        var distributionResult = CreateDistribution();
        factoryAction?.Invoke(distributionResult);

        return distributionResult;
    }

    private Humidifier.Lightsail.Distribution CreateDistribution()
    {
        var distributionResult = new Humidifier.Lightsail.Distribution
        {
            GivenName = InputResourceName,
        };

        return distributionResult;
    }
    public override void CreateChildren(Humidifier.Lightsail.Distribution result)
    {
        base.CreateChildren(result);

        result.CacheBehaviors = CacheBehaviorsFactories.Any() ? CacheBehaviorsFactories.Select(x => x.Build()).ToList() : null;
        result.Origin ??= OriginFactory?.Build();
        result.DefaultCacheBehavior ??= DefaultCacheBehaviorFactory?.Build();
        result.CacheBehaviorSettings ??= CacheBehaviorSettingsFactory?.Build();
    }

} // End Of Class

public static class DistributionFactoryExtensions
{
    public static CombinedResult<DistributionFactory, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors(this DistributionFactory parentFactory, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null)
    {
        var factory = new InnerDistributionCacheBehaviorPerPathFactory(subFactoryAction);
        parentFactory.CacheBehaviorsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<DistributionFactory, InnerDistributionInputOriginFactory> WithOrigin(this DistributionFactory parentFactory, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null)
    {
        parentFactory.OriginFactory = new InnerDistributionInputOriginFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OriginFactory);
    }

    public static CombinedResult<DistributionFactory, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior(this DistributionFactory parentFactory, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null)
    {
        parentFactory.DefaultCacheBehaviorFactory = new InnerDistributionCacheBehaviorFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DefaultCacheBehaviorFactory);
    }

    public static CombinedResult<DistributionFactory, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings(this DistributionFactory parentFactory, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null)
    {
        parentFactory.CacheBehaviorSettingsFactory = new InnerDistributionCacheSettingsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CacheBehaviorSettingsFactory);
    }

    public static CombinedResult<DistributionFactory, T1, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1>(this CombinedResult<DistributionFactory, T1> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1>(this CombinedResult<T1, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2>(this CombinedResult<DistributionFactory, T1, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2>(this CombinedResult<T1, DistributionFactory, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2>(this CombinedResult<T1, T2, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3>(this CombinedResult<DistributionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3>(this CombinedResult<T1, DistributionFactory, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3>(this CombinedResult<T1, T2, DistributionFactory, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3>(this CombinedResult<T1, T2, T3, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, T4, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3, T4>(this CombinedResult<DistributionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, T4, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3, T4>(this CombinedResult<T1, DistributionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, T4, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3, T4>(this CombinedResult<T1, T2, DistributionFactory, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, T4, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DistributionFactory, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DistributionFactory, InnerDistributionCacheBehaviorPerPathFactory> WithCacheBehaviors<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehaviorPerPath> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviors(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, InnerDistributionInputOriginFactory> WithOrigin<T1>(this CombinedResult<DistributionFactory, T1> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, WithOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, InnerDistributionInputOriginFactory> WithOrigin<T1>(this CombinedResult<T1, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, WithOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, InnerDistributionInputOriginFactory> WithOrigin<T1, T2>(this CombinedResult<DistributionFactory, T1, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, InnerDistributionInputOriginFactory> WithOrigin<T1, T2>(this CombinedResult<T1, DistributionFactory, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, InnerDistributionInputOriginFactory> WithOrigin<T1, T2>(this CombinedResult<T1, T2, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3>(this CombinedResult<DistributionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3>(this CombinedResult<T1, DistributionFactory, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3>(this CombinedResult<T1, T2, DistributionFactory, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3>(this CombinedResult<T1, T2, T3, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, T4, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3, T4>(this CombinedResult<DistributionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, T4, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3, T4>(this CombinedResult<T1, DistributionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, T4, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3, T4>(this CombinedResult<T1, T2, DistributionFactory, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, T4, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DistributionFactory, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DistributionFactory, InnerDistributionInputOriginFactory> WithOrigin<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.InputOrigin> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOrigin(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1>(this CombinedResult<DistributionFactory, T1> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1>(this CombinedResult<T1, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2>(this CombinedResult<DistributionFactory, T1, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2>(this CombinedResult<T1, DistributionFactory, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2>(this CombinedResult<T1, T2, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<DistributionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<T1, DistributionFactory, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<T1, T2, DistributionFactory, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3>(this CombinedResult<T1, T2, T3, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, T4, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<DistributionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, T4, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, DistributionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, T4, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, T2, DistributionFactory, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, T4, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DistributionFactory, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DistributionFactory, InnerDistributionCacheBehaviorFactory> WithDefaultCacheBehavior<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheBehavior> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCacheBehavior(combinedResult.T5, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1>(this CombinedResult<DistributionFactory, T1> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1>(this CombinedResult<T1, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2>(this CombinedResult<DistributionFactory, T1, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2>(this CombinedResult<T1, DistributionFactory, T2> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2>(this CombinedResult<T1, T2, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3>(this CombinedResult<DistributionFactory, T1, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3>(this CombinedResult<T1, DistributionFactory, T2, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3>(this CombinedResult<T1, T2, DistributionFactory, T3> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<DistributionFactory, T1, T2, T3, T4, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3, T4>(this CombinedResult<DistributionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, DistributionFactory, T2, T3, T4, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3, T4>(this CombinedResult<T1, DistributionFactory, T2, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, DistributionFactory, T3, T4, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, DistributionFactory, T3, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, DistributionFactory, T4, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, DistributionFactory, T4> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, DistributionFactory, InnerDistributionCacheSettingsFactory> WithCacheBehaviorSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, DistributionFactory> combinedResult, Action<Humidifier.Lightsail.DistributionTypes.CacheSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCacheBehaviorSettings(combinedResult.T5, subFactoryAction));
}
