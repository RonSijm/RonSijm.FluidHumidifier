// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ECS;

public class TaskDefinitionFactory(string resourceName = null, Action<Humidifier.ECS.TaskDefinition> factoryAction = null) : ResourceFactory<Humidifier.ECS.TaskDefinition>(resourceName)
{

    internal List<InnerTaskDefinitionInferenceAcceleratorFactory> InferenceAcceleratorsFactories { get; set; } = [];

    internal List<InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> PlacementConstraintsFactories { get; set; } = [];

    internal List<InnerTaskDefinitionVolumeFactory> VolumesFactories { get; set; } = [];

    internal List<InnerTaskDefinitionContainerDefinitionFactory> ContainerDefinitionsFactories { get; set; } = [];

    internal InnerTaskDefinitionRuntimePlatformFactory RuntimePlatformFactory { get; set; }

    internal InnerTaskDefinitionProxyConfigurationFactory ProxyConfigurationFactory { get; set; }

    internal InnerTaskDefinitionEphemeralStorageFactory EphemeralStorageFactory { get; set; }

    protected override Humidifier.ECS.TaskDefinition Create()
    {
        var taskDefinitionResult = CreateTaskDefinition();
        factoryAction?.Invoke(taskDefinitionResult);

        return taskDefinitionResult;
    }

    private Humidifier.ECS.TaskDefinition CreateTaskDefinition()
    {
        var taskDefinitionResult = new Humidifier.ECS.TaskDefinition
        {
            GivenName = InputResourceName,
        };

        return taskDefinitionResult;
    }
    public override void CreateChildren(Humidifier.ECS.TaskDefinition result)
    {
        base.CreateChildren(result);

        result.InferenceAccelerators = InferenceAcceleratorsFactories.Any() ? InferenceAcceleratorsFactories.Select(x => x.Build()).ToList() : null;
        result.PlacementConstraints = PlacementConstraintsFactories.Any() ? PlacementConstraintsFactories.Select(x => x.Build()).ToList() : null;
        result.Volumes = VolumesFactories.Any() ? VolumesFactories.Select(x => x.Build()).ToList() : null;
        result.ContainerDefinitions = ContainerDefinitionsFactories.Any() ? ContainerDefinitionsFactories.Select(x => x.Build()).ToList() : null;
        result.RuntimePlatform ??= RuntimePlatformFactory?.Build();
        result.ProxyConfiguration ??= ProxyConfigurationFactory?.Build();
        result.EphemeralStorage ??= EphemeralStorageFactory?.Build();
    }

} // End Of Class

public static class TaskDefinitionFactoryExtensions
{
    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null)
    {
        var factory = new InnerTaskDefinitionInferenceAcceleratorFactory(subFactoryAction);
        parentFactory.InferenceAcceleratorsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null)
    {
        var factory = new InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory(subFactoryAction);
        parentFactory.PlacementConstraintsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionVolumeFactory> WithVolumes(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null)
    {
        var factory = new InnerTaskDefinitionVolumeFactory(subFactoryAction);
        parentFactory.VolumesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null)
    {
        var factory = new InnerTaskDefinitionContainerDefinitionFactory(subFactoryAction);
        parentFactory.ContainerDefinitionsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null)
    {
        parentFactory.RuntimePlatformFactory = new InnerTaskDefinitionRuntimePlatformFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RuntimePlatformFactory);
    }

    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null)
    {
        parentFactory.ProxyConfigurationFactory = new InnerTaskDefinitionProxyConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ProxyConfigurationFactory);
    }

    public static CombinedResult<TaskDefinitionFactory, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage(this TaskDefinitionFactory parentFactory, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null)
    {
        parentFactory.EphemeralStorageFactory = new InnerTaskDefinitionEphemeralStorageFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.EphemeralStorageFactory);
    }

    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionInferenceAcceleratorFactory> WithInferenceAccelerators<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.InferenceAccelerator> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithInferenceAccelerators(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionTaskDefinitionPlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.TaskDefinitionPlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionVolumeFactory> WithVolumes<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionVolumeFactory> WithVolumes<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionVolumeFactory> WithVolumes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.Volume> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionContainerDefinitionFactory> WithContainerDefinitions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ContainerDefinition> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithContainerDefinitions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionRuntimePlatformFactory> WithRuntimePlatform<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.RuntimePlatform> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRuntimePlatform(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionProxyConfigurationFactory> WithProxyConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.ProxyConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithProxyConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1>(this CombinedResult<TaskDefinitionFactory, T1> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1>(this CombinedResult<T1, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2>(this CombinedResult<TaskDefinitionFactory, T1, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2>(this CombinedResult<T1, TaskDefinitionFactory, T2> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2>(this CombinedResult<T1, T2, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3, T4>(this CombinedResult<TaskDefinitionFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3, T4>(this CombinedResult<T1, TaskDefinitionFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskDefinitionFactory, T3, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskDefinitionFactory, T4> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory, InnerTaskDefinitionEphemeralStorageFactory> WithEphemeralStorage<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskDefinitionFactory> combinedResult, Action<Humidifier.ECS.TaskDefinitionTypes.EphemeralStorage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEphemeralStorage(combinedResult.T5, subFactoryAction));
}
