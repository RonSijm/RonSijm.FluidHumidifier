// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ECS;

public class ClusterFactory(string resourceName = null, Action<Humidifier.ECS.Cluster> factoryAction = null) : ResourceFactory<Humidifier.ECS.Cluster>(resourceName)
{

    internal List<InnerClusterClusterSettingsFactory> ClusterSettingsFactories { get; set; } = [];

    internal List<InnerClusterCapacityProviderStrategyItemFactory> DefaultCapacityProviderStrategyFactories { get; set; } = [];

    internal InnerClusterClusterConfigurationFactory ConfigurationFactory { get; set; }

    internal InnerClusterServiceConnectDefaultsFactory ServiceConnectDefaultsFactory { get; set; }

    protected override Humidifier.ECS.Cluster Create()
    {
        var clusterResult = CreateCluster();
        factoryAction?.Invoke(clusterResult);

        return clusterResult;
    }

    private Humidifier.ECS.Cluster CreateCluster()
    {
        var clusterResult = new Humidifier.ECS.Cluster
        {
            GivenName = InputResourceName,
        };

        return clusterResult;
    }
    public override void CreateChildren(Humidifier.ECS.Cluster result)
    {
        base.CreateChildren(result);

        result.ClusterSettings = ClusterSettingsFactories.Any() ? ClusterSettingsFactories.Select(x => x.Build()).ToList() : null;
        result.DefaultCapacityProviderStrategy = DefaultCapacityProviderStrategyFactories.Any() ? DefaultCapacityProviderStrategyFactories.Select(x => x.Build()).ToList() : null;
        result.Configuration ??= ConfigurationFactory?.Build();
        result.ServiceConnectDefaults ??= ServiceConnectDefaultsFactory?.Build();
    }

} // End Of Class

public static class ClusterFactoryExtensions
{
    public static CombinedResult<ClusterFactory, InnerClusterClusterSettingsFactory> WithClusterSettings(this ClusterFactory parentFactory, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null)
    {
        var factory = new InnerClusterClusterSettingsFactory(subFactoryAction);
        parentFactory.ClusterSettingsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ClusterFactory, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy(this ClusterFactory parentFactory, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null)
    {
        var factory = new InnerClusterCapacityProviderStrategyItemFactory(subFactoryAction);
        parentFactory.DefaultCapacityProviderStrategyFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ClusterFactory, InnerClusterClusterConfigurationFactory> WithConfiguration(this ClusterFactory parentFactory, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null)
    {
        parentFactory.ConfigurationFactory = new InnerClusterClusterConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ConfigurationFactory);
    }

    public static CombinedResult<ClusterFactory, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults(this ClusterFactory parentFactory, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null)
    {
        parentFactory.ServiceConnectDefaultsFactory = new InnerClusterServiceConnectDefaultsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ServiceConnectDefaultsFactory);
    }

    public static CombinedResult<ClusterFactory, T1, InnerClusterClusterSettingsFactory> WithClusterSettings<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithClusterSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterClusterSettingsFactory> WithClusterSettings<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, WithClusterSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterClusterSettingsFactory> WithClusterSettings<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterSettings> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithClusterSettings(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterCapacityProviderStrategyItemFactory> WithDefaultCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDefaultCapacityProviderStrategy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterClusterConfigurationFactory> WithConfiguration<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterClusterConfigurationFactory> WithConfiguration<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterClusterConfigurationFactory> WithConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ClusterConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterServiceConnectDefaultsFactory> WithServiceConnectDefaults<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.ECS.ClusterTypes.ServiceConnectDefaults> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectDefaults(combinedResult.T5, subFactoryAction));
}
