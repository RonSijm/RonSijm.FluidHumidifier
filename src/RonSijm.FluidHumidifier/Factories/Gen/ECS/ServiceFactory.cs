// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.ECS;

public class ServiceFactory(string resourceName = null, Action<Humidifier.ECS.Service> factoryAction = null) : ResourceFactory<Humidifier.ECS.Service>(resourceName)
{

    internal List<InnerServicePlacementConstraintFactory> PlacementConstraintsFactories { get; set; } = [];

    internal List<InnerServiceLoadBalancerFactory> LoadBalancersFactories { get; set; } = [];

    internal List<InnerServicePlacementStrategyFactory> PlacementStrategiesFactories { get; set; } = [];

    internal List<InnerServiceServiceRegistryFactory> ServiceRegistriesFactories { get; set; } = [];

    internal List<InnerServiceServiceVolumeConfigurationFactory> VolumeConfigurationsFactories { get; set; } = [];

    internal List<InnerServiceCapacityProviderStrategyItemFactory> CapacityProviderStrategyFactories { get; set; } = [];

    internal InnerServiceServiceConnectConfigurationFactory ServiceConnectConfigurationFactory { get; set; }

    internal InnerServiceDeploymentControllerFactory DeploymentControllerFactory { get; set; }

    internal InnerServiceNetworkConfigurationFactory NetworkConfigurationFactory { get; set; }

    internal InnerServiceDeploymentConfigurationFactory DeploymentConfigurationFactory { get; set; }

    protected override Humidifier.ECS.Service Create()
    {
        var serviceResult = CreateService();
        factoryAction?.Invoke(serviceResult);

        return serviceResult;
    }

    private Humidifier.ECS.Service CreateService()
    {
        var serviceResult = new Humidifier.ECS.Service
        {
            GivenName = InputResourceName,
        };

        return serviceResult;
    }
    public override void CreateChildren(Humidifier.ECS.Service result)
    {
        base.CreateChildren(result);

        result.PlacementConstraints = PlacementConstraintsFactories.Any() ? PlacementConstraintsFactories.Select(x => x.Build()).ToList() : null;
        result.LoadBalancers = LoadBalancersFactories.Any() ? LoadBalancersFactories.Select(x => x.Build()).ToList() : null;
        result.PlacementStrategies = PlacementStrategiesFactories.Any() ? PlacementStrategiesFactories.Select(x => x.Build()).ToList() : null;
        result.ServiceRegistries = ServiceRegistriesFactories.Any() ? ServiceRegistriesFactories.Select(x => x.Build()).ToList() : null;
        result.VolumeConfigurations = VolumeConfigurationsFactories.Any() ? VolumeConfigurationsFactories.Select(x => x.Build()).ToList() : null;
        result.CapacityProviderStrategy = CapacityProviderStrategyFactories.Any() ? CapacityProviderStrategyFactories.Select(x => x.Build()).ToList() : null;
        result.ServiceConnectConfiguration ??= ServiceConnectConfigurationFactory?.Build();
        result.DeploymentController ??= DeploymentControllerFactory?.Build();
        result.NetworkConfiguration ??= NetworkConfigurationFactory?.Build();
        result.DeploymentConfiguration ??= DeploymentConfigurationFactory?.Build();
    }

} // End Of Class

public static class ServiceFactoryExtensions
{
    public static CombinedResult<ServiceFactory, InnerServicePlacementConstraintFactory> WithPlacementConstraints(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null)
    {
        var factory = new InnerServicePlacementConstraintFactory(subFactoryAction);
        parentFactory.PlacementConstraintsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ServiceFactory, InnerServiceLoadBalancerFactory> WithLoadBalancers(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null)
    {
        var factory = new InnerServiceLoadBalancerFactory(subFactoryAction);
        parentFactory.LoadBalancersFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ServiceFactory, InnerServicePlacementStrategyFactory> WithPlacementStrategies(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null)
    {
        var factory = new InnerServicePlacementStrategyFactory(subFactoryAction);
        parentFactory.PlacementStrategiesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ServiceFactory, InnerServiceServiceRegistryFactory> WithServiceRegistries(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null)
    {
        var factory = new InnerServiceServiceRegistryFactory(subFactoryAction);
        parentFactory.ServiceRegistriesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ServiceFactory, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null)
    {
        var factory = new InnerServiceServiceVolumeConfigurationFactory(subFactoryAction);
        parentFactory.VolumeConfigurationsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ServiceFactory, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null)
    {
        var factory = new InnerServiceCapacityProviderStrategyItemFactory(subFactoryAction);
        parentFactory.CapacityProviderStrategyFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ServiceFactory, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null)
    {
        parentFactory.ServiceConnectConfigurationFactory = new InnerServiceServiceConnectConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ServiceConnectConfigurationFactory);
    }

    public static CombinedResult<ServiceFactory, InnerServiceDeploymentControllerFactory> WithDeploymentController(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null)
    {
        parentFactory.DeploymentControllerFactory = new InnerServiceDeploymentControllerFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeploymentControllerFactory);
    }

    public static CombinedResult<ServiceFactory, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null)
    {
        parentFactory.NetworkConfigurationFactory = new InnerServiceNetworkConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NetworkConfigurationFactory);
    }

    public static CombinedResult<ServiceFactory, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration(this ServiceFactory parentFactory, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null)
    {
        parentFactory.DeploymentConfigurationFactory = new InnerServiceDeploymentConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.DeploymentConfigurationFactory);
    }

    public static CombinedResult<ServiceFactory, T1, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServicePlacementConstraintFactory> WithPlacementConstraints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementConstraint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementConstraints(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBalancers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, WithLoadBalancers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceLoadBalancerFactory> WithLoadBalancers<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.LoadBalancer> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLoadBalancers(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServicePlacementStrategyFactory> WithPlacementStrategies<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.PlacementStrategy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPlacementStrategies(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, WithServiceRegistries(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, WithServiceRegistries(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceServiceRegistryFactory> WithServiceRegistries<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceRegistry> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceRegistries(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceServiceVolumeConfigurationFactory> WithVolumeConfigurations<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceVolumeConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithVolumeConfigurations(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceCapacityProviderStrategyItemFactory> WithCapacityProviderStrategy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.CapacityProviderStrategyItem> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCapacityProviderStrategy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceServiceConnectConfigurationFactory> WithServiceConnectConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.ServiceConnectConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithServiceConnectConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeploymentController(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeploymentController(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceDeploymentControllerFactory> WithDeploymentController<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentController> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentController(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceNetworkConfigurationFactory> WithNetworkConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.NetworkConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNetworkConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1>(this CombinedResult<ServiceFactory, T1> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1>(this CombinedResult<T1, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2>(this CombinedResult<ServiceFactory, T1, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2>(this CombinedResult<T1, ServiceFactory, T2> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2>(this CombinedResult<T1, T2, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3>(this CombinedResult<ServiceFactory, T1, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3>(this CombinedResult<T1, ServiceFactory, T2, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, ServiceFactory, T3> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ServiceFactory, T1, T2, T3, T4, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<ServiceFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ServiceFactory, T2, T3, T4, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, ServiceFactory, T2, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ServiceFactory, T3, T4, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, ServiceFactory, T3, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ServiceFactory, T4, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ServiceFactory, T4> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ServiceFactory, InnerServiceDeploymentConfigurationFactory> WithDeploymentConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ServiceFactory> combinedResult, Action<Humidifier.ECS.ServiceTypes.DeploymentConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithDeploymentConfiguration(combinedResult.T5, subFactoryAction));
}
