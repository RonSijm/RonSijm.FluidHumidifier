// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.IVSChat;

public class InnerLoggingConfigurationDestinationConfigurationFactory(Action<Humidifier.IVSChat.LoggingConfigurationTypes.DestinationConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.IVSChat.LoggingConfigurationTypes.DestinationConfiguration>
{

    internal InnerLoggingConfigurationS3DestinationConfigurationFactory S3Factory { get; set; }

    internal InnerLoggingConfigurationFirehoseDestinationConfigurationFactory FirehoseFactory { get; set; }

    internal InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory CloudWatchLogsFactory { get; set; }

    protected override Humidifier.IVSChat.LoggingConfigurationTypes.DestinationConfiguration Create()
    {
        var destinationConfigurationResult = CreateDestinationConfiguration();
        factoryAction?.Invoke(destinationConfigurationResult);

        return destinationConfigurationResult;
    }

    private Humidifier.IVSChat.LoggingConfigurationTypes.DestinationConfiguration CreateDestinationConfiguration()
    {
        var destinationConfigurationResult = new Humidifier.IVSChat.LoggingConfigurationTypes.DestinationConfiguration();

        return destinationConfigurationResult;
    }
    public override void CreateChildren(Humidifier.IVSChat.LoggingConfigurationTypes.DestinationConfiguration result)
    {
        base.CreateChildren(result);

        result.S3 ??= S3Factory?.Build();
        result.Firehose ??= FirehoseFactory?.Build();
        result.CloudWatchLogs ??= CloudWatchLogsFactory?.Build();
    }

} // End Of Class

public static class InnerLoggingConfigurationDestinationConfigurationFactoryExtensions
{
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3(this InnerLoggingConfigurationDestinationConfigurationFactory parentFactory, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.S3Factory = new InnerLoggingConfigurationS3DestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.S3Factory);
    }

    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose(this InnerLoggingConfigurationDestinationConfigurationFactory parentFactory, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.FirehoseFactory = new InnerLoggingConfigurationFirehoseDestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.FirehoseFactory);
    }

    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs(this InnerLoggingConfigurationDestinationConfigurationFactory parentFactory, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null)
    {
        parentFactory.CloudWatchLogsFactory = new InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CloudWatchLogsFactory);
    }

    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, T4, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, T4, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, T4, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, T4, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationS3DestinationConfigurationFactory> WithS3<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.S3DestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithS3(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, T4, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, T4, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, T4, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, T4, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationFirehoseDestinationConfigurationFactory> WithFirehose<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.FirehoseDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithFirehose(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, T4, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<InnerLoggingConfigurationDestinationConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, T4, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, InnerLoggingConfigurationDestinationConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, T4, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerLoggingConfigurationDestinationConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, T4, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerLoggingConfigurationDestinationConfigurationFactory, T4> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerLoggingConfigurationDestinationConfigurationFactory, InnerLoggingConfigurationCloudWatchLogsDestinationConfigurationFactory> WithCloudWatchLogs<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerLoggingConfigurationDestinationConfigurationFactory> combinedResult, Action<Humidifier.IVSChat.LoggingConfigurationTypes.CloudWatchLogsDestinationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCloudWatchLogs(combinedResult.T5, subFactoryAction));
}
