// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.DataSync;

public class TaskFactory(string resourceName = null, Action<Humidifier.DataSync.Task> factoryAction = null) : ResourceFactory<Humidifier.DataSync.Task>(resourceName)
{

    internal List<InnerTaskFilterRuleFactory> IncludesFactories { get; set; } = [];

    internal List<InnerTaskFilterRuleFactory> ExcludesFactories { get; set; } = [];

    internal InnerTaskOptionsFactory OptionsFactory { get; set; }

    internal InnerTaskTaskScheduleFactory ScheduleFactory { get; set; }

    internal InnerTaskTaskReportConfigFactory TaskReportConfigFactory { get; set; }

    internal InnerTaskManifestConfigFactory ManifestConfigFactory { get; set; }

    protected override Humidifier.DataSync.Task Create()
    {
        var taskResult = CreateTask();
        factoryAction?.Invoke(taskResult);

        return taskResult;
    }

    private Humidifier.DataSync.Task CreateTask()
    {
        var taskResult = new Humidifier.DataSync.Task
        {
            GivenName = InputResourceName,
        };

        return taskResult;
    }
    public override void CreateChildren(Humidifier.DataSync.Task result)
    {
        base.CreateChildren(result);

        result.Includes = IncludesFactories.Any() ? IncludesFactories.Select(x => x.Build()).ToList() : null;
        result.Excludes = ExcludesFactories.Any() ? ExcludesFactories.Select(x => x.Build()).ToList() : null;
        result.Options ??= OptionsFactory?.Build();
        result.Schedule ??= ScheduleFactory?.Build();
        result.TaskReportConfig ??= TaskReportConfigFactory?.Build();
        result.ManifestConfig ??= ManifestConfigFactory?.Build();
    }

} // End Of Class

public static class TaskFactoryExtensions
{
    public static CombinedResult<TaskFactory, InnerTaskFilterRuleFactory> WithIncludes(this TaskFactory parentFactory, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null)
    {
        var factory = new InnerTaskFilterRuleFactory(subFactoryAction);
        parentFactory.IncludesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TaskFactory, InnerTaskFilterRuleFactory> WithExcludes(this TaskFactory parentFactory, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null)
    {
        var factory = new InnerTaskFilterRuleFactory(subFactoryAction);
        parentFactory.ExcludesFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<TaskFactory, InnerTaskOptionsFactory> WithOptions(this TaskFactory parentFactory, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null)
    {
        parentFactory.OptionsFactory = new InnerTaskOptionsFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OptionsFactory);
    }

    public static CombinedResult<TaskFactory, InnerTaskTaskScheduleFactory> WithSchedule(this TaskFactory parentFactory, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null)
    {
        parentFactory.ScheduleFactory = new InnerTaskTaskScheduleFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ScheduleFactory);
    }

    public static CombinedResult<TaskFactory, InnerTaskTaskReportConfigFactory> WithTaskReportConfig(this TaskFactory parentFactory, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null)
    {
        parentFactory.TaskReportConfigFactory = new InnerTaskTaskReportConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.TaskReportConfigFactory);
    }

    public static CombinedResult<TaskFactory, InnerTaskManifestConfigFactory> WithManifestConfig(this TaskFactory parentFactory, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null)
    {
        parentFactory.ManifestConfigFactory = new InnerTaskManifestConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ManifestConfigFactory);
    }

    public static CombinedResult<TaskFactory, T1, InnerTaskFilterRuleFactory> WithIncludes<T1>(this CombinedResult<TaskFactory, T1> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithIncludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, InnerTaskFilterRuleFactory> WithIncludes<T1>(this CombinedResult<T1, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithIncludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, InnerTaskFilterRuleFactory> WithIncludes<T1, T2>(this CombinedResult<TaskFactory, T1, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, InnerTaskFilterRuleFactory> WithIncludes<T1, T2>(this CombinedResult<T1, TaskFactory, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, InnerTaskFilterRuleFactory> WithIncludes<T1, T2>(this CombinedResult<T1, T2, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3>(this CombinedResult<TaskFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3>(this CombinedResult<T1, TaskFactory, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3>(this CombinedResult<T1, T2, TaskFactory, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, T4, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3, T4>(this CombinedResult<TaskFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, T4, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3, T4>(this CombinedResult<T1, TaskFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, T4, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskFactory, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, T4, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskFactory, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskFactory, InnerTaskFilterRuleFactory> WithIncludes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIncludes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, InnerTaskFilterRuleFactory> WithExcludes<T1>(this CombinedResult<TaskFactory, T1> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithExcludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, InnerTaskFilterRuleFactory> WithExcludes<T1>(this CombinedResult<T1, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, WithExcludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, InnerTaskFilterRuleFactory> WithExcludes<T1, T2>(this CombinedResult<TaskFactory, T1, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, InnerTaskFilterRuleFactory> WithExcludes<T1, T2>(this CombinedResult<T1, TaskFactory, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, InnerTaskFilterRuleFactory> WithExcludes<T1, T2>(this CombinedResult<T1, T2, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3>(this CombinedResult<TaskFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3>(this CombinedResult<T1, TaskFactory, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3>(this CombinedResult<T1, T2, TaskFactory, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, T4, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3, T4>(this CombinedResult<TaskFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, T4, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3, T4>(this CombinedResult<T1, TaskFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, T4, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskFactory, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, T4, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskFactory, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskFactory, InnerTaskFilterRuleFactory> WithExcludes<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.FilterRule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithExcludes(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, InnerTaskOptionsFactory> WithOptions<T1>(this CombinedResult<TaskFactory, T1> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, InnerTaskOptionsFactory> WithOptions<T1>(this CombinedResult<T1, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, InnerTaskOptionsFactory> WithOptions<T1, T2>(this CombinedResult<TaskFactory, T1, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, InnerTaskOptionsFactory> WithOptions<T1, T2>(this CombinedResult<T1, TaskFactory, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, InnerTaskOptionsFactory> WithOptions<T1, T2>(this CombinedResult<T1, T2, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, InnerTaskOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<TaskFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, InnerTaskOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<T1, TaskFactory, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, InnerTaskOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<T1, T2, TaskFactory, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, InnerTaskOptionsFactory> WithOptions<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, T4, InnerTaskOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<TaskFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, T4, InnerTaskOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, TaskFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, T4, InnerTaskOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskFactory, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, T4, InnerTaskOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskFactory, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskFactory, InnerTaskOptionsFactory> WithOptions<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.Options> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOptions(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, InnerTaskTaskScheduleFactory> WithSchedule<T1>(this CombinedResult<TaskFactory, T1> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, WithSchedule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, InnerTaskTaskScheduleFactory> WithSchedule<T1>(this CombinedResult<T1, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, WithSchedule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2>(this CombinedResult<TaskFactory, T1, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2>(this CombinedResult<T1, TaskFactory, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2>(this CombinedResult<T1, T2, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3>(this CombinedResult<TaskFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3>(this CombinedResult<T1, TaskFactory, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3>(this CombinedResult<T1, T2, TaskFactory, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, T4, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3, T4>(this CombinedResult<TaskFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, T4, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3, T4>(this CombinedResult<T1, TaskFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, T4, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskFactory, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, T4, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskFactory, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskFactory, InnerTaskTaskScheduleFactory> WithSchedule<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskSchedule> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSchedule(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1>(this CombinedResult<TaskFactory, T1> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1>(this CombinedResult<T1, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2>(this CombinedResult<TaskFactory, T1, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2>(this CombinedResult<T1, TaskFactory, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2>(this CombinedResult<T1, T2, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3>(this CombinedResult<TaskFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3>(this CombinedResult<T1, TaskFactory, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3>(this CombinedResult<T1, T2, TaskFactory, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, T4, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3, T4>(this CombinedResult<TaskFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, T4, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3, T4>(this CombinedResult<T1, TaskFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, T4, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskFactory, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, T4, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskFactory, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskFactory, InnerTaskTaskReportConfigFactory> WithTaskReportConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.TaskReportConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaskReportConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, InnerTaskManifestConfigFactory> WithManifestConfig<T1>(this CombinedResult<TaskFactory, T1> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithManifestConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, InnerTaskManifestConfigFactory> WithManifestConfig<T1>(this CombinedResult<T1, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithManifestConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2>(this CombinedResult<TaskFactory, T1, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2>(this CombinedResult<T1, TaskFactory, T2> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2>(this CombinedResult<T1, T2, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3>(this CombinedResult<TaskFactory, T1, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3>(this CombinedResult<T1, TaskFactory, T2, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3>(this CombinedResult<T1, T2, TaskFactory, T3> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<TaskFactory, T1, T2, T3, T4, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3, T4>(this CombinedResult<TaskFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, TaskFactory, T2, T3, T4, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3, T4>(this CombinedResult<T1, TaskFactory, T2, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, TaskFactory, T3, T4, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, TaskFactory, T3, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, TaskFactory, T4, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, TaskFactory, T4> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, TaskFactory, InnerTaskManifestConfigFactory> WithManifestConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, TaskFactory> combinedResult, Action<Humidifier.DataSync.TaskTypes.ManifestConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithManifestConfig(combinedResult.T5, subFactoryAction));
}
