// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.HealthLake;

public class FHIRDatastoreFactory(string resourceName = null, Action<Humidifier.HealthLake.FHIRDatastore> factoryAction = null) : ResourceFactory<Humidifier.HealthLake.FHIRDatastore>(resourceName)
{

    internal InnerFHIRDatastoreIdentityProviderConfigurationFactory IdentityProviderConfigurationFactory { get; set; }

    internal InnerFHIRDatastorePreloadDataConfigFactory PreloadDataConfigFactory { get; set; }

    internal InnerFHIRDatastoreSseConfigurationFactory SseConfigurationFactory { get; set; }

    protected override Humidifier.HealthLake.FHIRDatastore Create()
    {
        var fHIRDatastoreResult = CreateFHIRDatastore();
        factoryAction?.Invoke(fHIRDatastoreResult);

        return fHIRDatastoreResult;
    }

    private Humidifier.HealthLake.FHIRDatastore CreateFHIRDatastore()
    {
        var fHIRDatastoreResult = new Humidifier.HealthLake.FHIRDatastore
        {
            GivenName = InputResourceName,
        };

        return fHIRDatastoreResult;
    }
    public override void CreateChildren(Humidifier.HealthLake.FHIRDatastore result)
    {
        base.CreateChildren(result);

        result.IdentityProviderConfiguration ??= IdentityProviderConfigurationFactory?.Build();
        result.PreloadDataConfig ??= PreloadDataConfigFactory?.Build();
        result.SseConfiguration ??= SseConfigurationFactory?.Build();
    }

} // End Of Class

public static class FHIRDatastoreFactoryExtensions
{
    public static CombinedResult<FHIRDatastoreFactory, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration(this FHIRDatastoreFactory parentFactory, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null)
    {
        parentFactory.IdentityProviderConfigurationFactory = new InnerFHIRDatastoreIdentityProviderConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.IdentityProviderConfigurationFactory);
    }

    public static CombinedResult<FHIRDatastoreFactory, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig(this FHIRDatastoreFactory parentFactory, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null)
    {
        parentFactory.PreloadDataConfigFactory = new InnerFHIRDatastorePreloadDataConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PreloadDataConfigFactory);
    }

    public static CombinedResult<FHIRDatastoreFactory, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration(this FHIRDatastoreFactory parentFactory, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null)
    {
        parentFactory.SseConfigurationFactory = new InnerFHIRDatastoreSseConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SseConfigurationFactory);
    }

    public static CombinedResult<FHIRDatastoreFactory, T1, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1>(this CombinedResult<FHIRDatastoreFactory, T1> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1>(this CombinedResult<T1, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2>(this CombinedResult<FHIRDatastoreFactory, T1, T2> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2>(this CombinedResult<T1, FHIRDatastoreFactory, T2> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2>(this CombinedResult<T1, T2, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, T3, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3>(this CombinedResult<FHIRDatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, T3, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3>(this CombinedResult<T1, FHIRDatastoreFactory, T2, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, T3, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, FHIRDatastoreFactory, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FHIRDatastoreFactory, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, T3, T4, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3, T4>(this CombinedResult<FHIRDatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, T3, T4, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, FHIRDatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, T3, T4, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, FHIRDatastoreFactory, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FHIRDatastoreFactory, T4, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FHIRDatastoreFactory, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FHIRDatastoreFactory, InnerFHIRDatastoreIdentityProviderConfigurationFactory> WithIdentityProviderConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.IdentityProviderConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithIdentityProviderConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1>(this CombinedResult<FHIRDatastoreFactory, T1> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1>(this CombinedResult<T1, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2>(this CombinedResult<FHIRDatastoreFactory, T1, T2> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2>(this CombinedResult<T1, FHIRDatastoreFactory, T2> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2>(this CombinedResult<T1, T2, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, T3, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3>(this CombinedResult<FHIRDatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, T3, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3>(this CombinedResult<T1, FHIRDatastoreFactory, T2, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, T3, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3>(this CombinedResult<T1, T2, FHIRDatastoreFactory, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FHIRDatastoreFactory, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, T3, T4, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3, T4>(this CombinedResult<FHIRDatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, T3, T4, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3, T4>(this CombinedResult<T1, FHIRDatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, T3, T4, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, FHIRDatastoreFactory, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FHIRDatastoreFactory, T4, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FHIRDatastoreFactory, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FHIRDatastoreFactory, InnerFHIRDatastorePreloadDataConfigFactory> WithPreloadDataConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.PreloadDataConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPreloadDataConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1>(this CombinedResult<FHIRDatastoreFactory, T1> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSseConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1>(this CombinedResult<T1, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSseConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2>(this CombinedResult<FHIRDatastoreFactory, T1, T2> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2>(this CombinedResult<T1, FHIRDatastoreFactory, T2> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2>(this CombinedResult<T1, T2, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, T3, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3>(this CombinedResult<FHIRDatastoreFactory, T1, T2, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, T3, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3>(this CombinedResult<T1, FHIRDatastoreFactory, T2, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, T3, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, FHIRDatastoreFactory, T3> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FHIRDatastoreFactory, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<FHIRDatastoreFactory, T1, T2, T3, T4, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3, T4>(this CombinedResult<FHIRDatastoreFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, FHIRDatastoreFactory, T2, T3, T4, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, FHIRDatastoreFactory, T2, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, FHIRDatastoreFactory, T3, T4, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, FHIRDatastoreFactory, T3, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, FHIRDatastoreFactory, T4, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, FHIRDatastoreFactory, T4> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, FHIRDatastoreFactory, InnerFHIRDatastoreSseConfigurationFactory> WithSseConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, FHIRDatastoreFactory> combinedResult, Action<Humidifier.HealthLake.FHIRDatastoreTypes.SseConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSseConfiguration(combinedResult.T5, subFactoryAction));
}
