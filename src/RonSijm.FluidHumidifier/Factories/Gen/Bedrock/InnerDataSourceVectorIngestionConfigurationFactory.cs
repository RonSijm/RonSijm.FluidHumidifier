// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Bedrock;

public class InnerDataSourceVectorIngestionConfigurationFactory(Action<Humidifier.Bedrock.DataSourceTypes.VectorIngestionConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.Bedrock.DataSourceTypes.VectorIngestionConfiguration>
{

    internal InnerDataSourceParsingConfigurationFactory ParsingConfigurationFactory { get; set; }

    internal InnerDataSourceCustomTransformationConfigurationFactory CustomTransformationConfigurationFactory { get; set; }

    internal InnerDataSourceChunkingConfigurationFactory ChunkingConfigurationFactory { get; set; }

    protected override Humidifier.Bedrock.DataSourceTypes.VectorIngestionConfiguration Create()
    {
        var vectorIngestionConfigurationResult = CreateVectorIngestionConfiguration();
        factoryAction?.Invoke(vectorIngestionConfigurationResult);

        return vectorIngestionConfigurationResult;
    }

    private Humidifier.Bedrock.DataSourceTypes.VectorIngestionConfiguration CreateVectorIngestionConfiguration()
    {
        var vectorIngestionConfigurationResult = new Humidifier.Bedrock.DataSourceTypes.VectorIngestionConfiguration();

        return vectorIngestionConfigurationResult;
    }
    public override void CreateChildren(Humidifier.Bedrock.DataSourceTypes.VectorIngestionConfiguration result)
    {
        base.CreateChildren(result);

        result.ParsingConfiguration ??= ParsingConfigurationFactory?.Build();
        result.CustomTransformationConfiguration ??= CustomTransformationConfigurationFactory?.Build();
        result.ChunkingConfiguration ??= ChunkingConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerDataSourceVectorIngestionConfigurationFactoryExtensions
{
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration(this InnerDataSourceVectorIngestionConfigurationFactory parentFactory, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null)
    {
        parentFactory.ParsingConfigurationFactory = new InnerDataSourceParsingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ParsingConfigurationFactory);
    }

    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration(this InnerDataSourceVectorIngestionConfigurationFactory parentFactory, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null)
    {
        parentFactory.CustomTransformationConfigurationFactory = new InnerDataSourceCustomTransformationConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CustomTransformationConfigurationFactory);
    }

    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration(this InnerDataSourceVectorIngestionConfigurationFactory parentFactory, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null)
    {
        parentFactory.ChunkingConfigurationFactory = new InnerDataSourceChunkingConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ChunkingConfigurationFactory);
    }

    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, T4, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, T4, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, T4, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, T4, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceParsingConfigurationFactory> WithParsingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ParsingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithParsingConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, T4, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, T4, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, T4, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, T4, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceCustomTransformationConfigurationFactory> WithCustomTransformationConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.CustomTransformationConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCustomTransformationConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, T4, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceVectorIngestionConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, T4, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceVectorIngestionConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, T4, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceVectorIngestionConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, T4, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceVectorIngestionConfigurationFactory, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceVectorIngestionConfigurationFactory, InnerDataSourceChunkingConfigurationFactory> WithChunkingConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceVectorIngestionConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.ChunkingConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithChunkingConfiguration(combinedResult.T5, subFactoryAction));
}
