// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Bedrock;

public class InnerDataSourceSalesforceDataSourceConfigurationFactory(Action<Humidifier.Bedrock.DataSourceTypes.SalesforceDataSourceConfiguration> factoryAction = null) : SubResourceFactory<Humidifier.Bedrock.DataSourceTypes.SalesforceDataSourceConfiguration>
{

    internal InnerDataSourceSalesforceSourceConfigurationFactory SourceConfigurationFactory { get; set; }

    internal InnerDataSourceSalesforceCrawlerConfigurationFactory CrawlerConfigurationFactory { get; set; }

    protected override Humidifier.Bedrock.DataSourceTypes.SalesforceDataSourceConfiguration Create()
    {
        var salesforceDataSourceConfigurationResult = CreateSalesforceDataSourceConfiguration();
        factoryAction?.Invoke(salesforceDataSourceConfigurationResult);

        return salesforceDataSourceConfigurationResult;
    }

    private Humidifier.Bedrock.DataSourceTypes.SalesforceDataSourceConfiguration CreateSalesforceDataSourceConfiguration()
    {
        var salesforceDataSourceConfigurationResult = new Humidifier.Bedrock.DataSourceTypes.SalesforceDataSourceConfiguration();

        return salesforceDataSourceConfigurationResult;
    }
    public override void CreateChildren(Humidifier.Bedrock.DataSourceTypes.SalesforceDataSourceConfiguration result)
    {
        base.CreateChildren(result);

        result.SourceConfiguration ??= SourceConfigurationFactory?.Build();
        result.CrawlerConfiguration ??= CrawlerConfigurationFactory?.Build();
    }

} // End Of Class

public static class InnerDataSourceSalesforceDataSourceConfigurationFactoryExtensions
{
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration(this InnerDataSourceSalesforceDataSourceConfigurationFactory parentFactory, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null)
    {
        parentFactory.SourceConfigurationFactory = new InnerDataSourceSalesforceSourceConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SourceConfigurationFactory);
    }

    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration(this InnerDataSourceSalesforceDataSourceConfigurationFactory parentFactory, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null)
    {
        parentFactory.CrawlerConfigurationFactory = new InnerDataSourceSalesforceCrawlerConfigurationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.CrawlerConfigurationFactory);
    }

    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3, T4, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3, T4, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3, T4, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory, T4, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceSourceConfigurationFactory> WithSourceConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceSourceConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSourceConfiguration(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2>(this CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3, T4, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3, T4>(this CombinedResult<InnerDataSourceSalesforceDataSourceConfigurationFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3, T4, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, InnerDataSourceSalesforceDataSourceConfigurationFactory, T2, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3, T4, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerDataSourceSalesforceDataSourceConfigurationFactory, T3, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory, T4, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerDataSourceSalesforceDataSourceConfigurationFactory, T4> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerDataSourceSalesforceDataSourceConfigurationFactory, InnerDataSourceSalesforceCrawlerConfigurationFactory> WithCrawlerConfiguration<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerDataSourceSalesforceDataSourceConfigurationFactory> combinedResult, Action<Humidifier.Bedrock.DataSourceTypes.SalesforceCrawlerConfiguration> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithCrawlerConfiguration(combinedResult.T5, subFactoryAction));
}
