// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EKS;

public class ClusterFactory(string resourceName = null, Action<Humidifier.EKS.Cluster> factoryAction = null) : ResourceFactory<Humidifier.EKS.Cluster>(resourceName)
{

    internal List<InnerClusterEncryptionConfigFactory> EncryptionConfigFactories { get; set; } = [];

    internal InnerClusterLoggingFactory LoggingFactory { get; set; }

    internal InnerClusterUpgradePolicyFactory UpgradePolicyFactory { get; set; }

    internal InnerClusterAccessConfigFactory AccessConfigFactory { get; set; }

    internal InnerClusterOutpostConfigFactory OutpostConfigFactory { get; set; }

    internal InnerClusterKubernetesNetworkConfigFactory KubernetesNetworkConfigFactory { get; set; }

    internal InnerClusterResourcesVpcConfigFactory ResourcesVpcConfigFactory { get; set; }

    protected override Humidifier.EKS.Cluster Create()
    {
        var clusterResult = CreateCluster();
        factoryAction?.Invoke(clusterResult);

        return clusterResult;
    }

    private Humidifier.EKS.Cluster CreateCluster()
    {
        var clusterResult = new Humidifier.EKS.Cluster
        {
            GivenName = InputResourceName,
        };

        return clusterResult;
    }
    public override void CreateChildren(Humidifier.EKS.Cluster result)
    {
        base.CreateChildren(result);

        result.EncryptionConfig = EncryptionConfigFactories.Any() ? EncryptionConfigFactories.Select(x => x.Build()).ToList() : null;
        result.Logging ??= LoggingFactory?.Build();
        result.UpgradePolicy ??= UpgradePolicyFactory?.Build();
        result.AccessConfig ??= AccessConfigFactory?.Build();
        result.OutpostConfig ??= OutpostConfigFactory?.Build();
        result.KubernetesNetworkConfig ??= KubernetesNetworkConfigFactory?.Build();
        result.ResourcesVpcConfig ??= ResourcesVpcConfigFactory?.Build();
    }

} // End Of Class

public static class ClusterFactoryExtensions
{
    public static CombinedResult<ClusterFactory, InnerClusterEncryptionConfigFactory> WithEncryptionConfig(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null)
    {
        var factory = new InnerClusterEncryptionConfigFactory(subFactoryAction);
        parentFactory.EncryptionConfigFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<ClusterFactory, InnerClusterLoggingFactory> WithLogging(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null)
    {
        parentFactory.LoggingFactory = new InnerClusterLoggingFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LoggingFactory);
    }

    public static CombinedResult<ClusterFactory, InnerClusterUpgradePolicyFactory> WithUpgradePolicy(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null)
    {
        parentFactory.UpgradePolicyFactory = new InnerClusterUpgradePolicyFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.UpgradePolicyFactory);
    }

    public static CombinedResult<ClusterFactory, InnerClusterAccessConfigFactory> WithAccessConfig(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null)
    {
        parentFactory.AccessConfigFactory = new InnerClusterAccessConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.AccessConfigFactory);
    }

    public static CombinedResult<ClusterFactory, InnerClusterOutpostConfigFactory> WithOutpostConfig(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null)
    {
        parentFactory.OutpostConfigFactory = new InnerClusterOutpostConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.OutpostConfigFactory);
    }

    public static CombinedResult<ClusterFactory, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null)
    {
        parentFactory.KubernetesNetworkConfigFactory = new InnerClusterKubernetesNetworkConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.KubernetesNetworkConfigFactory);
    }

    public static CombinedResult<ClusterFactory, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig(this ClusterFactory parentFactory, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null)
    {
        parentFactory.ResourcesVpcConfigFactory = new InnerClusterResourcesVpcConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ResourcesVpcConfigFactory);
    }

    public static CombinedResult<ClusterFactory, T1, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterEncryptionConfigFactory> WithEncryptionConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.EncryptionConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithEncryptionConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterLoggingFactory> WithLogging<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterLoggingFactory> WithLogging<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterLoggingFactory> WithLogging<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterLoggingFactory> WithLogging<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterLoggingFactory> WithLogging<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterLoggingFactory> WithLogging<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterLoggingFactory> WithLogging<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.Logging> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLogging(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterUpgradePolicyFactory> WithUpgradePolicy<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.UpgradePolicy> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpgradePolicy(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterAccessConfigFactory> WithAccessConfig<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithAccessConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterAccessConfigFactory> WithAccessConfig<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithAccessConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterAccessConfigFactory> WithAccessConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.AccessConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithAccessConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithOutpostConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithOutpostConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterOutpostConfigFactory> WithOutpostConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.OutpostConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithOutpostConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterKubernetesNetworkConfigFactory> WithKubernetesNetworkConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.KubernetesNetworkConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithKubernetesNetworkConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1>(this CombinedResult<ClusterFactory, T1> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1>(this CombinedResult<T1, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2>(this CombinedResult<ClusterFactory, T1, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2>(this CombinedResult<T1, ClusterFactory, T2> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2>(this CombinedResult<T1, T2, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3>(this CombinedResult<ClusterFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3>(this CombinedResult<T1, ClusterFactory, T2, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3>(this CombinedResult<T1, T2, ClusterFactory, T3> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<ClusterFactory, T1, T2, T3, T4, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3, T4>(this CombinedResult<ClusterFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, ClusterFactory, T2, T3, T4, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, ClusterFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, ClusterFactory, T3, T4, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, ClusterFactory, T3, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, ClusterFactory, T4, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, ClusterFactory, T4> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, ClusterFactory, InnerClusterResourcesVpcConfigFactory> WithResourcesVpcConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, ClusterFactory> combinedResult, Action<Humidifier.EKS.ClusterTypes.ResourcesVpcConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResourcesVpcConfig(combinedResult.T5, subFactoryAction));
}
