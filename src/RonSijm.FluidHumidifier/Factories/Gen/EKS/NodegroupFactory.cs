// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.EKS;

public class NodegroupFactory(string resourceName = null, Action<Humidifier.EKS.Nodegroup> factoryAction = null) : ResourceFactory<Humidifier.EKS.Nodegroup>(resourceName)
{

    internal List<InnerNodegroupTaintFactory> TaintsFactories { get; set; } = [];

    internal InnerNodegroupUpdateConfigFactory UpdateConfigFactory { get; set; }

    internal InnerNodegroupScalingConfigFactory ScalingConfigFactory { get; set; }

    internal InnerNodegroupLaunchTemplateSpecificationFactory LaunchTemplateFactory { get; set; }

    internal InnerNodegroupRemoteAccessFactory RemoteAccessFactory { get; set; }

    protected override Humidifier.EKS.Nodegroup Create()
    {
        var nodegroupResult = CreateNodegroup();
        factoryAction?.Invoke(nodegroupResult);

        return nodegroupResult;
    }

    private Humidifier.EKS.Nodegroup CreateNodegroup()
    {
        var nodegroupResult = new Humidifier.EKS.Nodegroup
        {
            GivenName = InputResourceName,
        };

        return nodegroupResult;
    }
    public override void CreateChildren(Humidifier.EKS.Nodegroup result)
    {
        base.CreateChildren(result);

        result.Taints = TaintsFactories.Any() ? TaintsFactories.Select(x => x.Build()).ToList() : null;
        result.UpdateConfig ??= UpdateConfigFactory?.Build();
        result.ScalingConfig ??= ScalingConfigFactory?.Build();
        result.LaunchTemplate ??= LaunchTemplateFactory?.Build();
        result.RemoteAccess ??= RemoteAccessFactory?.Build();
    }

} // End Of Class

public static class NodegroupFactoryExtensions
{
    public static CombinedResult<NodegroupFactory, InnerNodegroupTaintFactory> WithTaints(this NodegroupFactory parentFactory, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null)
    {
        var factory = new InnerNodegroupTaintFactory(subFactoryAction);
        parentFactory.TaintsFactories.Add(factory);
        return CombinedResultFactory.Create(parentFactory, factory);
    }
    public static CombinedResult<NodegroupFactory, InnerNodegroupUpdateConfigFactory> WithUpdateConfig(this NodegroupFactory parentFactory, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null)
    {
        parentFactory.UpdateConfigFactory = new InnerNodegroupUpdateConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.UpdateConfigFactory);
    }

    public static CombinedResult<NodegroupFactory, InnerNodegroupScalingConfigFactory> WithScalingConfig(this NodegroupFactory parentFactory, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null)
    {
        parentFactory.ScalingConfigFactory = new InnerNodegroupScalingConfigFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ScalingConfigFactory);
    }

    public static CombinedResult<NodegroupFactory, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate(this NodegroupFactory parentFactory, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null)
    {
        parentFactory.LaunchTemplateFactory = new InnerNodegroupLaunchTemplateSpecificationFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.LaunchTemplateFactory);
    }

    public static CombinedResult<NodegroupFactory, InnerNodegroupRemoteAccessFactory> WithRemoteAccess(this NodegroupFactory parentFactory, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null)
    {
        parentFactory.RemoteAccessFactory = new InnerNodegroupRemoteAccessFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.RemoteAccessFactory);
    }

    public static CombinedResult<NodegroupFactory, T1, InnerNodegroupTaintFactory> WithTaints<T1>(this CombinedResult<NodegroupFactory, T1> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, WithTaints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, InnerNodegroupTaintFactory> WithTaints<T1>(this CombinedResult<T1, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, WithTaints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, InnerNodegroupTaintFactory> WithTaints<T1, T2>(this CombinedResult<NodegroupFactory, T1, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, InnerNodegroupTaintFactory> WithTaints<T1, T2>(this CombinedResult<T1, NodegroupFactory, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, InnerNodegroupTaintFactory> WithTaints<T1, T2>(this CombinedResult<T1, T2, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3>(this CombinedResult<NodegroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3>(this CombinedResult<T1, NodegroupFactory, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3>(this CombinedResult<T1, T2, NodegroupFactory, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3>(this CombinedResult<T1, T2, T3, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, T4, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3, T4>(this CombinedResult<NodegroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, T4, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3, T4>(this CombinedResult<T1, NodegroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, T4, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3, T4>(this CombinedResult<T1, T2, NodegroupFactory, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, T4, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, NodegroupFactory, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, NodegroupFactory, InnerNodegroupTaintFactory> WithTaints<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.Taint> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithTaints(combinedResult.T5, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1>(this CombinedResult<NodegroupFactory, T1> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithUpdateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1>(this CombinedResult<T1, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithUpdateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2>(this CombinedResult<NodegroupFactory, T1, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2>(this CombinedResult<T1, NodegroupFactory, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2>(this CombinedResult<T1, T2, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3>(this CombinedResult<NodegroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3>(this CombinedResult<T1, NodegroupFactory, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3>(this CombinedResult<T1, T2, NodegroupFactory, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, T4, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3, T4>(this CombinedResult<NodegroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, T4, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3, T4>(this CombinedResult<T1, NodegroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, T4, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, NodegroupFactory, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, T4, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, NodegroupFactory, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, NodegroupFactory, InnerNodegroupUpdateConfigFactory> WithUpdateConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.UpdateConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithUpdateConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1>(this CombinedResult<NodegroupFactory, T1> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithScalingConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1>(this CombinedResult<T1, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, WithScalingConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2>(this CombinedResult<NodegroupFactory, T1, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2>(this CombinedResult<T1, NodegroupFactory, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2>(this CombinedResult<T1, T2, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3>(this CombinedResult<NodegroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3>(this CombinedResult<T1, NodegroupFactory, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3>(this CombinedResult<T1, T2, NodegroupFactory, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3>(this CombinedResult<T1, T2, T3, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, T4, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3, T4>(this CombinedResult<NodegroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, T4, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3, T4>(this CombinedResult<T1, NodegroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, T4, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, NodegroupFactory, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, T4, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, NodegroupFactory, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, NodegroupFactory, InnerNodegroupScalingConfigFactory> WithScalingConfig<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.ScalingConfig> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithScalingConfig(combinedResult.T5, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1>(this CombinedResult<NodegroupFactory, T1> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1>(this CombinedResult<T1, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<NodegroupFactory, T1, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, NodegroupFactory, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2>(this CombinedResult<T1, T2, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<NodegroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, NodegroupFactory, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, NodegroupFactory, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3>(this CombinedResult<T1, T2, T3, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, T4, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<NodegroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, T4, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, NodegroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, T4, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, NodegroupFactory, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, T4, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, NodegroupFactory, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, NodegroupFactory, InnerNodegroupLaunchTemplateSpecificationFactory> WithLaunchTemplate<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.LaunchTemplateSpecification> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithLaunchTemplate(combinedResult.T5, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1>(this CombinedResult<NodegroupFactory, T1> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, WithRemoteAccess(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1>(this CombinedResult<T1, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, WithRemoteAccess(combinedResult.T2, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2>(this CombinedResult<NodegroupFactory, T1, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2>(this CombinedResult<T1, NodegroupFactory, T2> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2>(this CombinedResult<T1, T2, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T3, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3>(this CombinedResult<NodegroupFactory, T1, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3>(this CombinedResult<T1, NodegroupFactory, T2, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3>(this CombinedResult<T1, T2, NodegroupFactory, T3> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3>(this CombinedResult<T1, T2, T3, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T4, subFactoryAction));
    public static CombinedResult<NodegroupFactory, T1, T2, T3, T4, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3, T4>(this CombinedResult<NodegroupFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, NodegroupFactory, T2, T3, T4, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3, T4>(this CombinedResult<T1, NodegroupFactory, T2, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, NodegroupFactory, T3, T4, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3, T4>(this CombinedResult<T1, T2, NodegroupFactory, T3, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, NodegroupFactory, T4, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, NodegroupFactory, T4> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, NodegroupFactory, InnerNodegroupRemoteAccessFactory> WithRemoteAccess<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, NodegroupFactory> combinedResult, Action<Humidifier.EKS.NodegroupTypes.RemoteAccess> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithRemoteAccess(combinedResult.T5, subFactoryAction));
}
