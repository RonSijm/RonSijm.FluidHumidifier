// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.Redshift;

public class InnerScheduledActionScheduledActionTypeFactory(Action<Humidifier.Redshift.ScheduledActionTypes.ScheduledActionType> factoryAction = null) : SubResourceFactory<Humidifier.Redshift.ScheduledActionTypes.ScheduledActionType>
{

    internal InnerScheduledActionPauseClusterMessageFactory PauseClusterFactory { get; set; }

    internal InnerScheduledActionResumeClusterMessageFactory ResumeClusterFactory { get; set; }

    internal InnerScheduledActionResizeClusterMessageFactory ResizeClusterFactory { get; set; }

    protected override Humidifier.Redshift.ScheduledActionTypes.ScheduledActionType Create()
    {
        var scheduledActionTypeResult = CreateScheduledActionType();
        factoryAction?.Invoke(scheduledActionTypeResult);

        return scheduledActionTypeResult;
    }

    private Humidifier.Redshift.ScheduledActionTypes.ScheduledActionType CreateScheduledActionType()
    {
        var scheduledActionTypeResult = new Humidifier.Redshift.ScheduledActionTypes.ScheduledActionType();

        return scheduledActionTypeResult;
    }
    public override void CreateChildren(Humidifier.Redshift.ScheduledActionTypes.ScheduledActionType result)
    {
        base.CreateChildren(result);

        result.PauseCluster ??= PauseClusterFactory?.Build();
        result.ResumeCluster ??= ResumeClusterFactory?.Build();
        result.ResizeCluster ??= ResizeClusterFactory?.Build();
    }

} // End Of Class

public static class InnerScheduledActionScheduledActionTypeFactoryExtensions
{
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster(this InnerScheduledActionScheduledActionTypeFactory parentFactory, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null)
    {
        parentFactory.PauseClusterFactory = new InnerScheduledActionPauseClusterMessageFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.PauseClusterFactory);
    }

    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster(this InnerScheduledActionScheduledActionTypeFactory parentFactory, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null)
    {
        parentFactory.ResumeClusterFactory = new InnerScheduledActionResumeClusterMessageFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ResumeClusterFactory);
    }

    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster(this InnerScheduledActionScheduledActionTypeFactory parentFactory, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null)
    {
        parentFactory.ResizeClusterFactory = new InnerScheduledActionResizeClusterMessageFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.ResizeClusterFactory);
    }

    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, WithPauseCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, WithPauseCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, T4, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3, T4>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, T4, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3, T4>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, T4, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, T4, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionPauseClusterMessageFactory> WithPauseCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.PauseClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithPauseCluster(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, WithResumeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, WithResumeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, T4, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3, T4>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, T4, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3, T4>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, T4, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, T4, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResumeClusterMessageFactory> WithResumeCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResumeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResumeCluster(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, WithResizeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, WithResizeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, T4, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3, T4>(this CombinedResult<InnerScheduledActionScheduledActionTypeFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, T4, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3, T4>(this CombinedResult<T1, InnerScheduledActionScheduledActionTypeFactory, T2, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, T4, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerScheduledActionScheduledActionTypeFactory, T3, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, T4, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerScheduledActionScheduledActionTypeFactory, T4> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerScheduledActionScheduledActionTypeFactory, InnerScheduledActionResizeClusterMessageFactory> WithResizeCluster<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerScheduledActionScheduledActionTypeFactory> combinedResult, Action<Humidifier.Redshift.ScheduledActionTypes.ResizeClusterMessage> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithResizeCluster(combinedResult.T5, subFactoryAction));
}
