// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable RedundantNameQualifier

namespace RonSijm.FluidHumidifier.Factories.SecurityHub;

public class InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory(Action<Humidifier.SecurityHub.AutomationRuleTypes.AutomationRulesFindingFieldsUpdate> factoryAction = null) : SubResourceFactory<Humidifier.SecurityHub.AutomationRuleTypes.AutomationRulesFindingFieldsUpdate>
{

    internal InnerAutomationRuleNoteUpdateFactory NoteFactory { get; set; }

    internal InnerAutomationRuleWorkflowUpdateFactory WorkflowFactory { get; set; }

    internal InnerAutomationRuleSeverityUpdateFactory SeverityFactory { get; set; }

    protected override Humidifier.SecurityHub.AutomationRuleTypes.AutomationRulesFindingFieldsUpdate Create()
    {
        var automationRulesFindingFieldsUpdateResult = CreateAutomationRulesFindingFieldsUpdate();
        factoryAction?.Invoke(automationRulesFindingFieldsUpdateResult);

        return automationRulesFindingFieldsUpdateResult;
    }

    private Humidifier.SecurityHub.AutomationRuleTypes.AutomationRulesFindingFieldsUpdate CreateAutomationRulesFindingFieldsUpdate()
    {
        var automationRulesFindingFieldsUpdateResult = new Humidifier.SecurityHub.AutomationRuleTypes.AutomationRulesFindingFieldsUpdate();

        return automationRulesFindingFieldsUpdateResult;
    }
    public override void CreateChildren(Humidifier.SecurityHub.AutomationRuleTypes.AutomationRulesFindingFieldsUpdate result)
    {
        base.CreateChildren(result);

        result.Note ??= NoteFactory?.Build();
        result.Workflow ??= WorkflowFactory?.Build();
        result.Severity ??= SeverityFactory?.Build();
    }

} // End Of Class

public static class InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactoryExtensions
{
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleNoteUpdateFactory> WithNote(this InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory parentFactory, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null)
    {
        parentFactory.NoteFactory = new InnerAutomationRuleNoteUpdateFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.NoteFactory);
    }

    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow(this InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory parentFactory, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null)
    {
        parentFactory.WorkflowFactory = new InnerAutomationRuleWorkflowUpdateFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.WorkflowFactory);
    }

    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleSeverityUpdateFactory> WithSeverity(this InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory parentFactory, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null)
    {
        parentFactory.SeverityFactory = new InnerAutomationRuleSeverityUpdateFactory(subFactoryAction);
        return CombinedResultFactory.Create(parentFactory, parentFactory.SeverityFactory);
    }

    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, InnerAutomationRuleNoteUpdateFactory> WithNote<T1>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, WithNote(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleNoteUpdateFactory> WithNote<T1>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, WithNote(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, T4, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3, T4>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, T4, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3, T4>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, T4, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T4, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleNoteUpdateFactory> WithNote<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.NoteUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithNote(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, WithWorkflow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, WithWorkflow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, T4, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3, T4>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, T4, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3, T4>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, T4, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T4, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleWorkflowUpdateFactory> WithWorkflow<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.WorkflowUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithWorkflow(combinedResult.T5, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, WithSeverity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, WithSeverity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3>(this CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, T4, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3, T4>(this CombinedResult<InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T1, T2, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T1, subFactoryAction));
    public static CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, T4, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3, T4>(this CombinedResult<T1, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T2, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T2, subFactoryAction));
    public static CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, T4, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3, T4>(this CombinedResult<T1, T2, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T3, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T3, subFactoryAction));
    public static CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T4, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, T4> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T4, subFactoryAction));
    public static CombinedResult<T1, T2, T3, T4, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory, InnerAutomationRuleSeverityUpdateFactory> WithSeverity<T1, T2, T3, T4>(this CombinedResult<T1, T2, T3, T4, InnerAutomationRuleAutomationRulesFindingFieldsUpdateFactory> combinedResult, Action<Humidifier.SecurityHub.AutomationRuleTypes.SeverityUpdate> subFactoryAction = null) => new (combinedResult, combinedResult, combinedResult, combinedResult, combinedResult, WithSeverity(combinedResult.T5, subFactoryAction));
}
